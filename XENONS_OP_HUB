local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("XENONS OP SCRIPT HUB", "Ocean")

--main
local Tab = Window:NewTab("FE SCRIPTS")
local AnimationSection = Tab:NewSection("Animations")
local MainSection = Tab:NewSection("FE SCRIPTS")

MainSection:NewButton("Jotaro", "made by Samzsi#6646", function()
    local Methods = loadstring(game:HttpGet("https://raw.githubusercontent.com/coolsk8rboy/The-John-Cena-Factory/main/JohnCenasMain.lua"))()
Methods:SetIdleAnimation(7339780665, 0.6)
Methods:SetWalkAnimation(7386802270, 0.1)
Methods:SetWalkSpeed(10)
Methods:EnableSprinting(7331835388, 0.1, 22) 

Methods:BodyPartFlingOnTouch("Right Arm")
Methods:BodyPartFlingOnTouch("Left Arm")
Methods:BodyPartFlingOnTouch("Right Leg")
Methods:BodyPartFlingOnTouch("Left Leg")
Methods:SystemMessage([[
Controls:
F - Orange Justice
G - Breakin'
H - Flippin'
J - Funny TF2 Laugh
K - Gang Dance
]])

Methods:OnKeyPress("f", function()
    Methods:PlayAnimation(9279188104 , .1, 2) 
end)

Methods:OnKeyPress("g", function()
    Methods:PlayAnimation(9723106887 , .1, 2) 
end)

Methods:OnKeyPress("h", function()
    Methods:PlayAnimation(9606526497 , .1, 2) 
end)

Methods:OnKeyPress("j", function()
    Methods:PlayAnimation(9150473709 , .1, 2) 
end)

Methods:OnKeyPress("k", function()
    Methods:PlayAnimation(4109162757 , .1, 2) 
end)

Methods:SetScriptCreator("Samzsi#6646")
Methods:RunScript()
end)



MainSection:NewButton("KARATE MASTER", "MADE BY CROAXER OWNER OF PENDULUM HUB", function()
    local Methods = loadstring(game:HttpGet("https://raw.githubusercontent.com/coolsk8rboy/The-John-Cena-Factory/main/JohnCenasMain.lua"))()

Methods:SetIdleAnimation(7142987522, .1)
Methods:SetWalkAnimation(7142732585, .1)
Methods:SetWalkSpeed(8)
Methods:EnableSprinting(6936452291, .1, 25)
Methods:BodyPartFlingOnTouch("Right Arm")
Methods:BodyPartFlingOnTouch("Left Arm")
Methods:BodyPartFlingOnTouch("Right Leg")
Methods:BodyPartFlingOnTouch("Left Leg")
Methods:NewAttack("Attack1", "z", 7142975235, .1, 3)
Methods:NewAttack("Attack2", "x", 7142973417, .1, 3)
Methods:NewAttack("Attack3", "c", 7142740591, .1, 3)
Methods:NewAttack("Attack4", "v", 7142741890, .1, 3)
Methods:NewAttack("Attack5", "b", 6936458635, .1, 3)
Methods:SetScriptCreator("CROAXER")
Methods:SystemMessage([[Controls:
z - Combo 1
x - Combo 2
c - Combo 3
v - Combo 4
b - Combo 5
]])
Methods:RunScript()
end)








MainSection:NewButton("Assassin", "made by Xenon", function()
    local Methods = loadstring(game:HttpGet("https://raw.githubusercontent.com/coolsk8rboy/The-John-Cena-Factory/main/JohnCenasMain.lua"))()
Methods:SetWalkSpeed(20)
Methods:SetIdleAnimation(10117955882, .1)
Methods:SetWalkAnimation(10106515976, .1)
Methods:NewAttack("Stomp", "z", 10225984837, .1, 6)
Methods:NewAttack("Kick", "x", 10117923868, .1, 6)
Methods:NewAttack("Punch", "c", 9875132590, .1, 6)
Methods:NewAttack("Fast Stab", "r", 10106498220, .1, 6)
Methods:SystemMessage([[
Controls:
Z - Stomp
X - Kick
C - punch
R - Fast Stab
]])
Methods:OnKeyPress("q", function()
    Methods:ApplyVelocityFoward(-5)
    Methods:ApplyVelocityUpward(80)
    Methods:PlayAnimation(7142738887, .1, 5)
end)
Methods:OnKeyPress("e", function()
    Methods:ApplyVelocityFoward(5)
    Methods:ApplyVelocityUpward(80)
    Methods:PlayAnimation(6936454190, .1, 5)
end)
Methods:SetScriptCreator("XENON")
Methods:BodyPartFlingOnTouch("Right Arm")
Methods:BodyPartFlingOnTouch("Left Arm")
Methods:BodyPartFlingOnTouch("Right Leg")
Methods:BodyPartFlingOnTouch("Left Leg")
Methods:RunScript()
end)



MainSection:NewButton("sans", "fight bruh", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/memeboiyoot/Random-stuff/main/Sans"))()
end)

MainSection:NewButton("brawler", "made by me XENON!", function()
-- Methods
local Methods = loadstring(game:HttpGet("https://raw.githubusercontent.com/coolsk8rboy/The-John-Cena-Factory/main/JohnCenasMain.lua"))()
-- Setup
Methods:SetWalkSpeed(30)
Methods:SetIdleAnimation(10087177636, .1)
Methods:SetWalkAnimation(10106276390, .1)
-- Fling
Methods:BodyPartFlingOnTouch("Right Arm")
Methods:BodyPartFlingOnTouch("Left Arm")
Methods:BodyPartFlingOnTouch("Right Leg")
Methods:BodyPartFlingOnTouch("Left Leg")
-- Attacks
Methods:NewAttack("Attack1", "q", 6568699964, .0, 6)
Methods:NewAttack("Attack2", "z", 7137396917, .0, 6)
Methods:NewAttack("Attack3", "e", 6573210844, .0, 6)
-- Finishing up
Methods:SetScriptCreator("Xenon")
Methods:SystemMessage([[Controls:
punch Punch - e
punch  - z
Punch - q
]])
Methods:RunScript()
end)

MainSection:NewButton("grandmaster", "fight bruh lol", function()
-- Methods
local Methods = loadstring(game:HttpGet("https://raw.githubusercontent.com/coolsk8rboy/The-John-Cena-Factory/main/JohnCenasMain.lua"))()
-- Setup
Methods:SetIdleAnimation(7142933331, .1)
Methods:SetWalkAnimation(7142732585, .1)
Methods:SetWalkSpeed(8)
Methods:EnableSprinting(7142895580, .1, 25)
-- Fling
Methods:BodyPartFlingOnTouch("Right Arm")
Methods:BodyPartFlingOnTouch("Left Arm")
Methods:BodyPartFlingOnTouch("Right Leg")
Methods:BodyPartFlingOnTouch("Left Leg")
-- Key Connections
Methods:OnKeyPress("q", function()
    Methods:ApplyVelocityFoward(-5)
    Methods:ApplyVelocityUpward(80)
    Methods:PlayAnimation(7142738887, .1, 5)
end)
Methods:OnKeyPress("e", function()
    Methods:ApplyVelocityFoward(5)
    Methods:ApplyVelocityUpward(80)
    Methods:PlayAnimation(6936454190, .1, 5)
end)
-- Attacks
Methods:NewAttack("Attack1", "z", 7142975235, .1, 3)
Methods:NewAttack("Attack2", "x", 7142973417, .1, 3)
Methods:NewAttack("Attack3", "c", 7142740591, .1, 3)
Methods:NewAttack("Attack4", "v", 7142741890, .1, 3)
Methods:NewAttack("Attack5", "b", 6936458635, .1, 3)
Methods:NewAttack("Attack6", "t", 4837749916, .1, 2)
-- Finishing up
Methods:SetScriptCreator("CROAXER")
Methods:SystemMessage([[Controls:
z - Combo 1
x - Combo 2
c - Combo 3
v - Combo 4
b - Combo 5
e - Front Flip
q - Back Flip
t - Taunt
Left Alt - Sprint
]])
Methods:PlaySound(1842802203, true)
Methods:RunScript()
end)


MainSection:NewButton("R15 FIGHTER SCRIPT", "you gotta join breaker exe group", function()
    loadstring(game:HttpGet(("https://raw.githubusercontent.com/OmarXploits/Free-Scripts/main/R15-Fighter"),true))()
end)


MainSection:NewButton("UNLIMITED RIZZ", "GET ALL DEM BITCHES BOOI", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/mikhailramlal/Rizzer/main/main"))()
end)

MainSection:NewButton("long snake", "you need the hats bruh", function()
--made by 1+1=2
--reanimate made by myworld
--only works in r6

--REQURIRED hats/hair (use roblox website to equip more than one hair)
--https://www.roblox.com/catalog/48474313/Red-Roblox-Cap
--https://www.roblox.com/catalog/62724852/Chestnut-Bun
--https://www.roblox.com/catalog/451220849/Lavender-Updo
--https://www.roblox.com/catalog/48474294/ROBLOX-Girl-Hair
--https://www.roblox.com/catalog/376527115/Jade-Necklace-with-Shell-Pendant
--https://www.roblox.com/catalog/63690008/Pal-Hair
--https://www.roblox.com/catalog/62234425/Brown-Hair
--(any other hats will be placed on the snakes head)




rtype = 1
local v3_net, v3_808 = Vector3.new(0.1, 25.1, 0.1), Vector3.new(8, 0, 8)
local function getNetlessVelocity(realPartVelocity)
    if realPartVelocity.Magnitude > 1 then
        local unit = realPartVelocity.Unit
        if (unit.Y > 0.25) or (unit.Y < -0.75) then
            return unit * (25.1 / unit.Y)
        end
    end
    return v3_net + realPartVelocity * v3_808
end
local simradius = "shp" --simulation radius (net bypass) method
--"shp" - sethiddenproperty
--"ssr" - setsimulationradius
--false - disable
local simrad = math.huge --simulation radius value
local healthHide = false --moves your head away every 3 seconds so players dont see your health bar (alignmode 4 only)
local reclaim = true --if you lost control over a part this will move your primary part to the part so you get it back (alignmode 4)
local novoid = true --prevents parts from going under workspace.FallenPartsDestroyHeight if you control them (alignmode 4 only)
local physp = nil --PhysicalProperties.new(0.01, 0, 1, 0, 0) --sets .CustomPhysicalProperties to this for each part
local noclipAllParts = false --set it to true if you want noclip
local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
local newanimate = true --disables the animate script and enables after reanimation
local discharscripts = true --disables all localScripts parented to your character before reanimation
local R15toR6 = true --tries to convert your character to r6 if its r15
local hatcollide = true --makes hats cancollide (credit to ShownApe) (works only with reanimate method 0)
local humState16 = true --enables collisions for limbs before the humanoid dies (using hum:ChangeState)
local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
local hedafterneck = true --disable aligns for head and enable after neck or torso is removed
local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
local method = 3 --reanimation method
--methods:
--0 - breakJoints (takes [loadtime] seconds to load)
--1 - limbs
--2 - limbs + anti respawn
--3 - limbs + breakJoints after [loadtime] seconds
--4 - remove humanoid + breakJoints
--5 - remove humanoid + limbs
local alignmode = 1 --AlignPosition mode
--modes:
--1 - AlignPosition rigidity enabled true
--2 - 2 AlignPositions rigidity enabled both true and false
--3 - AlignPosition rigidity enabled false
--4 - no AlignPosition, CFrame only
local flingpart = "HumanoidRootPart" --name of the part or the hat used for flinging
--the fling function
--usage: fling(target, duration, velocity)
--target can be set to: basePart, CFrame, Vector3, character model or humanoid (flings at mouse.Hit if argument not provided)
--duration (fling time in seconds) can be set to a number or a string convertable to a number (0.5s if not provided)
--velocity (fling part rotation velocity) can be set to a vector3 value (Vector3.new(20000, 20000, 20000) if not provided)

local lp = game:GetService("Players").LocalPlayer
local rs, ws, sg = game:GetService("RunService"), game:GetService("Workspace"), game:GetService("StarterGui")
local stepped, heartbeat, renderstepped = rs.Stepped, rs.Heartbeat, rs.RenderStepped
local twait, tdelay, rad, inf, abs, clamp = task.wait, task.delay, math.rad, math.huge, math.abs, math.clamp
local cf, v3, angles = CFrame.new, Vector3.new, CFrame.Angles
local v3_0, cf_0 = v3(0, 0, 0), cf(0, 0, 0)

local c = lp.Character
if not (c and c.Parent) then
    return
end

c:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (c and c.Parent) then
        c = nil
    end
end)

local clone, destroy, getchildren, getdescendants, isa = c.Clone, c.Destroy, c.GetChildren, c.GetDescendants, c.IsA

local function gp(parent, name, className)
    if typeof(parent) == "Instance" then
        for i, v in pairs(getchildren(parent)) do
            if (v.Name == name) and isa(v, className) then
                return v
            end
        end
    end
    return nil
end

local fenv = getfenv()

local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.set_hidden_prop or fenv.sethiddenprop
local ssr = fenv.setsimulationradius or fenv.set_simulation_radius or fenv.set_sim_radius or fenv.setsimradius or fenv.setsimrad or fenv.set_sim_rad

healthHide = healthHide and ((method == 0) or (method == 2) or (method == 3)) and gp(c, "Head", "BasePart")

local reclaim, lostpart = reclaim and c.PrimaryPart, nil

local function align(Part0, Part1)
    
    local att0 = Instance.new("Attachment")
    att0.Position, att0.Orientation, att0.Name = v3_0, v3_0, "att0_" .. Part0.Name
    local att1 = Instance.new("Attachment")
    att1.Position, att1.Orientation, att1.Name = v3_0, v3_0, "att1_" .. Part1.Name

    if alignmode == 4 then
    
        local hide = false
        if Part0 == healthHide then
            healthHide = false
            tdelay(0, function()
                while twait(2.9) and Part0 and c do
                    hide = #Part0:GetConnectedParts() == 1
                    twait(0.1)
                    hide = false
                end
            end)
        end
        
        local rot = rad(0.05)
        local con0, con1 = nil, nil
        con0 = stepped:Connect(function()
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            Part0.RotVelocity = Part1.RotVelocity
        end)
        local lastpos = Part0.Position
        con1 = heartbeat:Connect(function(delta)
            if not (Part0 and Part1 and att1) then return con0:Disconnect() and con1:Disconnect() end
            if (not Part0.Anchored) and (Part0.ReceiveAge == 0) then
                if lostpart == Part0 then
                    lostpart = nil
                end
                local newcf = Part1.CFrame * att1.CFrame
                if Part1.Velocity.Magnitude > 0.1 then
                    Part0.Velocity = getNetlessVelocity(Part1.Velocity)
                else
                    local vel = (newcf.Position - lastpos) / delta
                    Part0.Velocity = getNetlessVelocity(vel)
                    if vel.Magnitude < 1 then
                        rot = -rot
                        newcf *= angles(0, 0, rot)
                    end
                end
                lastpos = newcf.Position
                if lostpart and (Part0 == reclaim) then
                    newcf = lostpart.CFrame
                elseif hide then
                    newcf += v3(0, 3000, 0)
                end
                if novoid and (newcf.Y < ws.FallenPartsDestroyHeight + 0.1) then
                    newcf += v3(0, ws.FallenPartsDestroyHeight + 0.1 - newcf.Y, 0)
                end
                Part0.CFrame = newcf
            elseif (not Part0.Anchored) and (abs(Part0.Velocity.X) < 45) and (abs(Part0.Velocity.Y) < 25) and (abs(Part0.Velocity.Z) < 45) then
                lostpart = Part0
            end
        end)
    
    else
        
        Part0.CustomPhysicalProperties = physp
        if (alignmode == 1) or (alignmode == 2) then
            local ape = Instance.new("AlignPosition")
            ape.MaxForce, ape.MaxVelocity, ape.Responsiveness = inf, inf, inf
            ape.ReactionForceEnabled, ape.RigidityEnabled, ape.ApplyAtCenterOfMass = false, true, false
            ape.Attachment0, ape.Attachment1, ape.Name = att0, att1, "AlignPositionRtrue"
            ape.Parent = att0
        end
        
        if (alignmode == 2) or (alignmode == 3) then
            local apd = Instance.new("AlignPosition")
            apd.MaxForce, apd.MaxVelocity, apd.Responsiveness = inf, inf, inf
            apd.ReactionForceEnabled, apd.RigidityEnabled, apd.ApplyAtCenterOfMass = false, false, false
            apd.Attachment0, apd.Attachment1, apd.Name = att0, att1, "AlignPositionRfalse"
            apd.Parent = att0
        end
        
        local ao = Instance.new("AlignOrientation")
        ao.MaxAngularVelocity, ao.MaxTorque, ao.Responsiveness = inf, inf, inf
        ao.PrimaryAxisOnly, ao.ReactionTorqueEnabled, ao.RigidityEnabled = false, false, false
        ao.Attachment0, ao.Attachment1 = att0, att1
        ao.Parent = att0
        
        local con0, con1 = nil, nil
        local vel = Part0.Velocity
        con0 = renderstepped:Connect(function()
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            Part0.Velocity = vel
        end)
        local lastpos = Part0.Position
        con1 = heartbeat:Connect(function(delta)
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            vel = Part0.Velocity
            if Part1.Velocity.Magnitude > 0.01 then
                Part0.Velocity = getNetlessVelocity(Part1.Velocity)
            else
                Part0.Velocity = getNetlessVelocity((Part0.Position - lastpos) / delta)
            end
            lastpos = Part0.Position
        end)
    
    end

    att0:GetPropertyChangedSignal("Parent"):Connect(function()
        Part0 = att0.Parent
        if not isa(Part0, "BasePart") then
            att0 = nil
            if lostpart == Part0 then
                lostpart = nil
            end
            Part0 = nil
        end
    end)
    att0.Parent = Part0
    
    att1:GetPropertyChangedSignal("Parent"):Connect(function()
        Part1 = att1.Parent
        if not isa(Part1, "BasePart") then
            att1 = nil
            Part1 = nil
        end
    end)
    att1.Parent = Part1
end

local function respawnrequest()
    local ccfr, c = ws.CurrentCamera.CFrame, lp.Character
    lp.Character = nil
    lp.Character = c
    local con = nil
    con = ws.CurrentCamera.Changed:Connect(function(prop)
        if (prop ~= "Parent") and (prop ~= "CFrame") then
            return
        end
        ws.CurrentCamera.CFrame = ccfr
        con:Disconnect()
    end)
end

local destroyhum = (method == 4) or (method == 5)
local breakjoints = (method == 0) or (method == 4)
local antirespawn = (method == 0) or (method == 2) or (method == 3)

hatcollide = hatcollide and (method == 0)

addtools = addtools and lp:FindFirstChildOfClass("Backpack")

if type(simrad) ~= "number" then simrad = 1000 end
if shp and (simradius == "shp") then
    tdelay(0, function()
        while c do
            shp(lp, "SimulationRadius", simrad)
            heartbeat:Wait()
        end
    end)
elseif ssr and (simradius == "ssr") then
    tdelay(0, function()
        while c do
            ssr(simrad)
            heartbeat:Wait()
        end
    end)
end

if antiragdoll then
    antiragdoll = function(v)
        if isa(v, "HingeConstraint") or isa(v, "BallSocketConstraint") then
            v.Parent = nil
        end
    end
    for i, v in pairs(getdescendants(c)) do
        antiragdoll(v)
    end
    c.DescendantAdded:Connect(antiragdoll)
end

if antirespawn then
    respawnrequest()
end

if method == 0 then
    twait(loadtime)
    if not c then
        return
    end
end

if discharscripts then
    for i, v in pairs(getdescendants(c)) do
        if isa(v, "LocalScript") then
            v.Disabled = true
        end
    end
elseif newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate and (not animate.Disabled) then
        animate.Disabled = true
    else
        newanimate = false
    end
end

if addtools then
    for i, v in pairs(getchildren(addtools)) do
        if isa(v, "Tool") then
            v.Parent = c
        end
    end
end

pcall(function()
    settings().Physics.AllowSleep = false
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)

local OLDscripts = {}

for i, v in pairs(getdescendants(c)) do
    if v.ClassName == "Script" then
        OLDscripts[v.Name] = true
    end
end

local scriptNames = {}

for i, v in pairs(getdescendants(c)) do
    if isa(v, "BasePart") then
        local newName, exists = tostring(i), true
        while exists do
            exists = OLDscripts[newName]
            if exists then
                newName = newName .. "_"    
            end
        end
        table.insert(scriptNames, newName)
        Instance.new("Script", v).Name = newName
    end
end

local hum = c:FindFirstChildOfClass("Humanoid")
if hum then
    for i, v in pairs(hum:GetPlayingAnimationTracks()) do
        v:Stop()
    end
end
c.Archivable = true
local cl = clone(c)
if hum and humState16 then
    hum:ChangeState(Enum.HumanoidStateType.Physics)
    if destroyhum then
        twait(1.6)
    end
end
if destroyhum then
    pcall(destroy, hum)
end

if not c then
    return
end

local head, torso, root = gp(c, "Head", "BasePart"), gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart"), gp(c, "HumanoidRootPart", "BasePart")
if hatcollide then
    pcall(destroy, torso)
    pcall(destroy, root)
    pcall(destroy, c:FindFirstChildOfClass("BodyColors") or gp(c, "Health", "Script"))
end

local model = Instance.new("Model", c)
model:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (model and model.Parent) then
        model = nil
    end
end)

for i, v in pairs(getchildren(c)) do
    if v ~= model then
        if addtools and isa(v, "Tool") then
            for i1, v1 in pairs(getdescendants(v)) do
                if v1 and v1.Parent and isa(v1, "BasePart") then
                    local bv = Instance.new("BodyVelocity")
                    bv.Velocity, bv.MaxForce, bv.P, bv.Name = v3_0, v3(1000, 1000, 1000), 1250, "bv_" .. v.Name
                    bv.Parent = v1
                end
            end
        end
        v.Parent = model
    end
end

if breakjoints then
    model:BreakJoints()
else
    if head and torso then
        for i, v in pairs(getdescendants(model)) do
            if isa(v, "JointInstance") then
                local save = false
                if (v.Part0 == torso) and (v.Part1 == head) then
                    save = true
                end
                if (v.Part0 == head) and (v.Part1 == torso) then
                    save = true
                end
                if save then
                    if hedafterneck then
                        hedafterneck = v
                    end
                else
                    pcall(destroy, v)
                end
            end
        end
    end
    if method == 3 then
        task.delay(loadtime, pcall, model.BreakJoints, model)
    end
end

cl.Parent = ws
for i, v in pairs(getchildren(cl)) do
    v.Parent = c
end
pcall(destroy, cl)

local uncollide, noclipcon = nil, nil
if noclipAllParts then
    uncollide = function()
        if c then
            for i, v in pairs(getdescendants(c)) do
                if isa(v, "BasePart") then
                    v.CanCollide = false
                end
            end
        else
            noclipcon:Disconnect()
        end
    end
else
    uncollide = function()
        if model then
            for i, v in pairs(getdescendants(model)) do
                if isa(v, "BasePart") then
                    v.CanCollide = false
                end
            end
        else
            noclipcon:Disconnect()
        end
    end
end
noclipcon = stepped:Connect(uncollide)
uncollide()

for i, scr in pairs(getdescendants(model)) do
    if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
        local Part0 = scr.Parent
        if isa(Part0, "BasePart") then
            for i1, scr1 in pairs(getdescendants(c)) do
                if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
                    local Part1 = scr1.Parent
                    if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
                        align(Part0, Part1)
                        pcall(destroy, scr)
                        pcall(destroy, scr1)
                        break
                    end
                end
            end
        end
    end
end

for i, v in pairs(getdescendants(c)) do
    if v and v.Parent and (not v:IsDescendantOf(model)) then
        if isa(v, "Decal") then
            v.Transparency = 1
        elseif isa(v, "BasePart") then
            v.Transparency = 1
            v.Anchored = false
        elseif isa(v, "ForceField") then
            v.Visible = false
        elseif isa(v, "Sound") then
            v.Playing = false
        elseif isa(v, "BillboardGui") or isa(v, "SurfaceGui") or isa(v, "ParticleEmitter") or isa(v, "Fire") or isa(v, "Smoke") or isa(v, "Sparkles") then
            v.Enabled = false
        end
    end
end

if newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate then
        animate.Disabled = false
    end
end

if addtools then
    for i, v in pairs(getchildren(c)) do
        if isa(v, "Tool") then
            v.Parent = addtools
        end
    end
end

local hum0, hum1 = model:FindFirstChildOfClass("Humanoid"), c:FindFirstChildOfClass("Humanoid")
if hum0 then
    hum0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum0 and hum0.Parent) then
            hum0 = nil
        end
    end)
end
if hum1 then
    hum1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum1 and hum1.Parent) then
            hum1 = nil
        end
    end)

    ws.CurrentCamera.CameraSubject = hum1
    local camSubCon = nil
    local function camSubFunc()
        camSubCon:Disconnect()
        if c and hum1 then
            ws.CurrentCamera.CameraSubject = hum1
        end
    end
    camSubCon = renderstepped:Connect(camSubFunc)
    if hum0 then
        hum0:GetPropertyChangedSignal("Jump"):Connect(function()
            if hum1 then
                hum1.Jump = hum0.Jump
            end
        end)
    else
        respawnrequest()
    end
end

local rb = Instance.new("BindableEvent", c)
rb.Event:Connect(function()
    pcall(destroy, rb)
    sg:SetCore("ResetButtonCallback", true)
    if destroyhum then
        if c then c:BreakJoints() end
        return
    end
    if model and hum0 and (hum0.Health > 0) then
        model:BreakJoints()
        hum0.Health = 0
    end
    if antirespawn then
        respawnrequest()
    end
end)
sg:SetCore("ResetButtonCallback", rb)

tdelay(0, function()
    while c do
        if hum0 and hum1 then
            hum1.Jump = hum0.Jump
        end
        wait()
    end
    sg:SetCore("ResetButtonCallback", true)
end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
if R15toR6 then
    local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "LowerTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
    if part then
        local cfr = part.CFrame
        local R6parts = { 
            head = {
                Name = "Head",
                Size = v3(2, 1, 1),
                R15 = {
                    Head = 0
                }
            },
            torso = {
                Name = "Torso",
                Size = v3(2, 2, 1),
                R15 = {
                    UpperTorso = 0.2,
                    LowerTorso = -0.8
                }
            },
            root = {
                Name = "HumanoidRootPart",
                Size = v3(2, 2, 1),
                R15 = {
                    HumanoidRootPart = 0
                }
            },
            leftArm = {
                Name = "Left Arm",
                Size = v3(1, 2, 1),
                R15 = {
                    LeftHand = -0.849,
                    LeftLowerArm = -0.174,
                    LeftUpperArm = 0.415
                }
            },
            rightArm = {
                Name = "Right Arm",
                Size = v3(1, 2, 1),
                R15 = {
                    RightHand = -0.849,
                    RightLowerArm = -0.174,
                    RightUpperArm = 0.415
                }
            },
            leftLeg = {
                Name = "Left Leg",
                Size = v3(1, 2, 1),
                R15 = {
                    LeftFoot = -0.85,
                    LeftLowerLeg = -0.29,
                    LeftUpperLeg = 0.49
                }
            },
            rightLeg = {
                Name = "Right Leg",
                Size = v3(1, 2, 1),
                R15 = {
                    RightFoot = -0.85,
                    RightLowerLeg = -0.29,
                    RightUpperLeg = 0.49
                }
            }
        }
        for i, v in pairs(getchildren(c)) do
            if isa(v, "BasePart") then
                for i1, v1 in pairs(getchildren(v)) do
                    if isa(v1, "Motor6D") then
                        v1.Part0 = nil
                    end
                end
            end
        end
        part.Archivable = true
        for i, v in pairs(R6parts) do
            local part = clone(part)
            part:ClearAllChildren()
            part.Name, part.Size, part.CFrame, part.Anchored, part.Transparency, part.CanCollide = v.Name, v.Size, cfr, false, 1, false
            for i1, v1 in pairs(v.R15) do
                local R15part = gp(c, i1, "BasePart")
                local att = gp(R15part, "att1_" .. i1, "Attachment")
                if R15part then
                    local weld = Instance.new("Weld")
                    weld.Part0, weld.Part1, weld.C0, weld.C1, weld.Name = part, R15part, cf(0, v1, 0), cf_0, "Weld_" .. i1
                    weld.Parent = R15part
                    R15part.Massless, R15part.Name = true, "R15_" .. i1
                    R15part.Parent = part
                    if att then
                        att.Position = v3(0, v1, 0)
                        att.Parent = part
                    end
                end
            end
            part.Parent = c
            R6parts[i] = part
        end
        local R6joints = {
            neck = {
                Parent = R6parts.torso,
                Name = "Neck",
                Part0 = R6parts.torso,
                Part1 = R6parts.head,
                C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
                C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
            },
            rootJoint = {
                Parent = R6parts.root,
                Name = "RootJoint" ,
                Part0 = R6parts.root,
                Part1 = R6parts.torso,
                C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
                C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
            },
            rightShoulder = {
                Parent = R6parts.torso,
                Name = "Right Shoulder",
                Part0 = R6parts.torso,
                Part1 = R6parts.rightArm,
                C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
                C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
            },
            leftShoulder = {
                Parent = R6parts.torso,
                Name = "Left Shoulder",
                Part0 = R6parts.torso,
                Part1 = R6parts.leftArm,
                C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
                C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            },
            rightHip = {
                Parent = R6parts.torso,
                Name = "Right Hip",
                Part0 = R6parts.torso,
                Part1 = R6parts.rightLeg,
                C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
                C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
            },
            leftHip = {
                Parent = R6parts.torso,
                Name = "Left Hip" ,
                Part0 = R6parts.torso,
                Part1 = R6parts.leftLeg,
                C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
                C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            }
        }
        for i, v in pairs(R6joints) do
            local joint = Instance.new("Motor6D")
            for prop, val in pairs(v) do
                joint[prop] = val
            end
            R6joints[i] = joint
        end
        if hum1 then
            hum1.RigType, hum1.HipHeight = Enum.HumanoidRigType.R6, 0
        end
    end
    --the default roblox animate script edited and put in one line
    local script = gp(c, "Animate", "LocalScript") if not script.Disabled then script:ClearAllChildren() local Torso = gp(c, "Torso", "BasePart") local RightShoulder = gp(Torso, "Right Shoulder", "Motor6D") local LeftShoulder = gp(Torso, "Left Shoulder", "Motor6D") local RightHip = gp(Torso, "Right Hip", "Motor6D") local LeftHip = gp(Torso, "Left Hip", "Motor6D") local Neck = gp(Torso, "Neck", "Motor6D") local Humanoid = c:FindFirstChildOfClass("Humanoid") local pose = "Standing" local currentAnim = "" local currentAnimInstance = nil local currentAnimTrack = nil local currentAnimKeyframeHandler = nil local currentAnimSpeed = 1.0 local animTable = {} local animNames = { idle = { { id = "http://www.roblox.com/asset/?id=180435571", weight = 9 }, { id = "http://www.roblox.com/asset/?id=180435792", weight = 1 } }, walk = { { id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } }, run = { { id = "run.xml", weight = 10 } }, jump = { { id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } }, fall = { { id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } }, climb = { { id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } }, sit = { { id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } }, toolnone = { { id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } }, toolslash = { { id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } }, toollunge = { { id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } }, wave = { { id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } }, point = { { id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } }, dance1 = { { id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } }, dance2 = { { id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } }, dance3 = { { id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } }, laugh = { { id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } }, cheer = { { id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } }, } local dances = {"dance1", "dance2", "dance3"} local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false} local function configureAnimationSet(name, fileList) if (animTable[name] ~= nil) then for _, connection in pairs(animTable[name].connections) do connection:disconnect() end end animTable[name] = {} animTable[name].count = 0 animTable[name].totalWeight = 0 animTable[name].connections = {} local config = script:FindFirstChild(name) if (config ~= nil) then table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end)) table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end)) local idx = 1 for _, childPart in pairs(config:GetChildren()) do if (childPart:IsA("Animation")) then table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end)) animTable[name][idx] = {} animTable[name][idx].anim = childPart local weightObject = childPart:FindFirstChild("Weight") if (weightObject == nil) then animTable[name][idx].weight = 1 else animTable[name][idx].weight = weightObject.Value end animTable[name].count = animTable[name].count + 1 animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight idx = idx + 1 end end end if (animTable[name].count <= 0) then for idx, anim in pairs(fileList) do animTable[name][idx] = {} animTable[name][idx].anim = Instance.new("Animation") animTable[name][idx].anim.Name = name animTable[name][idx].anim.AnimationId = anim.id animTable[name][idx].weight = anim.weight animTable[name].count = animTable[name].count + 1 animTable[name].totalWeight = animTable[name].totalWeight + anim.weight end end end local function scriptChildModified(child) local fileList = animNames[child.Name] if (fileList ~= nil) then configureAnimationSet(child.Name, fileList) end end script.ChildAdded:connect(scriptChildModified) script.ChildRemoved:connect(scriptChildModified) local animator = Humanoid and Humanoid:FindFirstChildOfClass("Animator") or nil if animator then local animTracks = animator:GetPlayingAnimationTracks() for i, track in ipairs(animTracks) do track:Stop(0) track:Destroy() end end for name, fileList in pairs(animNames) do configureAnimationSet(name, fileList) end local toolAnim = "None" local toolAnimTime = 0 local jumpAnimTime = 0 local jumpAnimDuration = 0.3 local toolTransitionTime = 0.1 local fallTransitionTime = 0.3 local jumpMaxLimbVelocity = 0.75 local function stopAllAnimations() local oldAnim = currentAnim if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then oldAnim = "idle" end currentAnim = "" currentAnimInstance = nil if (currentAnimKeyframeHandler ~= nil) then currentAnimKeyframeHandler:disconnect() end if (currentAnimTrack ~= nil) then currentAnimTrack:Stop() currentAnimTrack:Destroy() currentAnimTrack = nil end return oldAnim end local function playAnimation(animName, transitionTime, humanoid) local roll = math.random(1, animTable[animName].totalWeight) local origRoll = roll local idx = 1 while (roll > animTable[animName][idx].weight) do roll = roll - animTable[animName][idx].weight idx = idx + 1 end local anim = animTable[animName][idx].anim if (anim ~= currentAnimInstance) then if (currentAnimTrack ~= nil) then currentAnimTrack:Stop(transitionTime) currentAnimTrack:Destroy() end currentAnimSpeed = 1.0 currentAnimTrack = humanoid:LoadAnimation(anim) currentAnimTrack.Priority = Enum.AnimationPriority.Core currentAnimTrack:Play(transitionTime) currentAnim = animName currentAnimInstance = anim if (currentAnimKeyframeHandler ~= nil) then currentAnimKeyframeHandler:disconnect() end currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc) end end local function setAnimationSpeed(speed) if speed ~= currentAnimSpeed then currentAnimSpeed = speed currentAnimTrack:AdjustSpeed(currentAnimSpeed) end end local function keyFrameReachedFunc(frameName) if (frameName == "End") then local repeatAnim = currentAnim if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then repeatAnim = "idle" end local animSpeed = currentAnimSpeed playAnimation(repeatAnim, 0.0, Humanoid) setAnimationSpeed(animSpeed) end end local toolAnimName = "" local toolAnimTrack = nil local toolAnimInstance = nil local currentToolAnimKeyframeHandler = nil local function toolKeyFrameReachedFunc(frameName) if (frameName == "End") then playToolAnimation(toolAnimName, 0.0, Humanoid) end end local function playToolAnimation(animName, transitionTime, humanoid, priority) local roll = math.random(1, animTable[animName].totalWeight) local origRoll = roll local idx = 1 while (roll > animTable[animName][idx].weight) do roll = roll - animTable[animName][idx].weight idx = idx + 1 end local anim = animTable[animName][idx].anim if (toolAnimInstance ~= anim) then if (toolAnimTrack ~= nil) then toolAnimTrack:Stop() toolAnimTrack:Destroy() transitionTime = 0 end toolAnimTrack = humanoid:LoadAnimation(anim) if priority then toolAnimTrack.Priority = priority end toolAnimTrack:Play(transitionTime) toolAnimName = animName toolAnimInstance = anim currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc) end end local function stopToolAnimations() local oldAnim = toolAnimName if (currentToolAnimKeyframeHandler ~= nil) then currentToolAnimKeyframeHandler:disconnect() end toolAnimName = "" toolAnimInstance = nil if (toolAnimTrack ~= nil) then toolAnimTrack:Stop() toolAnimTrack:Destroy() toolAnimTrack = nil end return oldAnim end local function onRunning(speed) if speed > 0.01 then playAnimation("walk", 0.1, Humanoid) if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then setAnimationSpeed(speed / 14.5) end pose = "Running" else if emoteNames[currentAnim] == nil then playAnimation("idle", 0.1, Humanoid) pose = "Standing" end end end local function onDied() pose = "Dead" end local function onJumping() playAnimation("jump", 0.1, Humanoid) jumpAnimTime = jumpAnimDuration pose = "Jumping" end local function onClimbing(speed) playAnimation("climb", 0.1, Humanoid) setAnimationSpeed(speed / 12.0) pose = "Climbing" end local function onGettingUp() pose = "GettingUp" end local function onFreeFall() if (jumpAnimTime <= 0) then playAnimation("fall", fallTransitionTime, Humanoid) end pose = "FreeFall" end local function onFallingDown() pose = "FallingDown" end local function onSeated() pose = "Seated" end local function onPlatformStanding() pose = "PlatformStanding" end local function onSwimming(speed) if speed > 0 then pose = "Running" else pose = "Standing" end end local function getTool() return c and c:FindFirstChildOfClass("Tool") end local function getToolAnim(tool) for _, c in ipairs(tool:GetChildren()) do if c.Name == "toolanim" and c.className == "StringValue" then return c end end return nil end local function animateTool() if (toolAnim == "None") then playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle) return end if (toolAnim == "Slash") then playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action) return end if (toolAnim == "Lunge") then playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action) return end end local function moveSit() RightShoulder.MaxVelocity = 0.15 LeftShoulder.MaxVelocity = 0.15 RightShoulder:SetDesiredAngle(3.14 /2) LeftShoulder:SetDesiredAngle(-3.14 /2) RightHip:SetDesiredAngle(3.14 /2) LeftHip:SetDesiredAngle(-3.14 /2) end local lastTick = 0 local function move(time) local amplitude = 1 local frequency = 1 local deltaTime = time - lastTick lastTick = time local climbFudge = 0 local setAngles = false if (jumpAnimTime > 0) then jumpAnimTime = jumpAnimTime - deltaTime end if (pose == "FreeFall" and jumpAnimTime <= 0) then playAnimation("fall", fallTransitionTime, Humanoid) elseif (pose == "Seated") then playAnimation("sit", 0.5, Humanoid) return elseif (pose == "Running") then playAnimation("walk", 0.1, Humanoid) elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then stopAllAnimations() amplitude = 0.1 frequency = 1 setAngles = true end if (setAngles) then local desiredAngle = amplitude * math.sin(time * frequency) RightShoulder:SetDesiredAngle(desiredAngle + climbFudge) LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge) RightHip:SetDesiredAngle(-desiredAngle) LeftHip:SetDesiredAngle(-desiredAngle) end local tool = getTool() if tool and tool:FindFirstChild("Handle") then local animStringValueObject = getToolAnim(tool) if animStringValueObject then toolAnim = animStringValueObject.Value animStringValueObject.Parent = nil toolAnimTime = time + .3 end if time > toolAnimTime then toolAnimTime = 0 toolAnim = "None" end animateTool() else stopToolAnimations() toolAnim = "None" toolAnimInstance = nil toolAnimTime = 0 end end Humanoid.Died:connect(onDied) Humanoid.Running:connect(onRunning) Humanoid.Jumping:connect(onJumping) Humanoid.Climbing:connect(onClimbing) Humanoid.GettingUp:connect(onGettingUp) Humanoid.FreeFalling:connect(onFreeFall) Humanoid.FallingDown:connect(onFallingDown) Humanoid.Seated:connect(onSeated) Humanoid.PlatformStanding:connect(onPlatformStanding) Humanoid.Swimming:connect(onSwimming) game:GetService("Players").LocalPlayer.Chatted:connect(function(msg) local emote = "" if msg == "/e dance" then emote = dances[math.random(1, #dances)] elseif (string.sub(msg, 1, 3) == "/e ") then emote = string.sub(msg, 4) elseif (string.sub(msg, 1, 7) == "/emote ") then emote = string.sub(msg, 8) end if (pose == "Standing" and emoteNames[emote] ~= nil) then playAnimation(emote, 0.1, Humanoid) end end) playAnimation("idle", 0.1, Humanoid) pose = "Standing" tdelay(0, function() while c do local _, time = wait(0.1) if (script.Parent == c) and (not script.Disabled) then move(time) end end end) end 
end

local torso1 = torso
torso = gp(c, "Torso", "BasePart") or ((not R15toR6) and gp(c, torso.Name, "BasePart"))
if (typeof(hedafterneck) == "Instance") and head and torso and torso1 then
    local conNeck, conTorso, conTorso1 = nil, nil, nil
    local aligns = {}
    local function enableAligns()
        conNeck:Disconnect()
        conTorso:Disconnect()
        conTorso1:Disconnect()
        for i, v in pairs(aligns) do
            v.Enabled = true
        end
    end
    conNeck = hedafterneck.Changed:Connect(function(prop)
        if table.find({"Part0", "Part1", "Parent"}, prop) then
            enableAligns()
        end
    end)
    conTorso = torso:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    conTorso1 = torso1:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    for i, v in pairs(getdescendants(head)) do
        if isa(v, "AlignPosition") or isa(v, "AlignOrientation") then
            i = tostring(i)
            aligns[i] = v
            v:GetPropertyChangedSignal("Parent"):Connect(function()
                aligns[i] = nil
            end)
            v.Enabled = false
        end
    end
end

local flingpart0 = gp(model, flingpart, "BasePart") or gp(gp(model, flingpart, "Accessory"), "Handle", "BasePart")
local flingpart1 = gp(c, flingpart, "BasePart") or gp(gp(c, flingpart, "Accessory"), "Handle", "BasePart")

local fling = function() end
if flingpart0 and flingpart1 then
    flingpart0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart0 and flingpart0.Parent) then
            flingpart0 = nil
            fling = function() end
        end
    end)
    flingpart0.Archivable = true
    flingpart1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart1 and flingpart1.Parent) then
            flingpart1 = nil
            fling = function() end
        end
    end)
    local att0 = gp(flingpart0, "att0_" .. flingpart0.Name, "Attachment")
    local att1 = gp(flingpart1, "att1_" .. flingpart1.Name, "Attachment")
    if att0 and att1 then
        att0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att0 and att0.Parent) then
                att0 = nil
                fling = function() end
            end
        end)
        att1:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att1 and att1.Parent) then
                att1 = nil
                fling = function() end
            end
        end)
        local lastfling = nil
        local mouse = lp:GetMouse()
        fling = function(target, duration, rotVelocity)
            if typeof(target) == "Instance" then
                if isa(target, "BasePart") then
                    target = target.Position
                elseif isa(target, "Model") then
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                elseif isa(target, "Humanoid") then
                    target = target.Parent
                    if not (target and isa(target, "Model")) then
                        return
                    end
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                else
                    return
                end
            elseif typeof(target) == "CFrame" then
                target = target.Position
            elseif typeof(target) ~= "Vector3" then
                target = mouse.Hit
                if target then
                    target = target.Position
                else
                    return
                end
            end
            if target.Y < ws.FallenPartsDestroyHeight + 5 then
                target = v3(target.X, ws.FallenPartsDestroyHeight + 5, target.Z)
            end
            lastfling = target
            if type(duration) ~= "number" then
                duration = tonumber(duration) or 0.5
            end
            if typeof(rotVelocity) ~= "Vector3" then
                rotVelocity = v3(20000, 20000, 20000)
            end
            if not (target and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            flingpart0.Archivable = true
            local flingpart = clone(flingpart0)
            flingpart.Transparency = 1
            flingpart.CanCollide = false
            flingpart.Name = "flingpart_" .. flingpart0.Name
            flingpart.Anchored = true
            flingpart.Velocity = v3_0
            flingpart.RotVelocity = v3_0
            flingpart.Position = target
            flingpart:GetPropertyChangedSignal("Parent"):Connect(function()
                if not (flingpart and flingpart.Parent) then
                    flingpart = nil
                end
            end)
            flingpart.Parent = flingpart1
            if flingpart0.Transparency > 0.5 then
                flingpart0.Transparency = 0.5
            end
            att1.Parent = flingpart
            local con = nil
            local rotchg = v3(0, rotVelocity.Unit.Y * -1000, 0)
            con = heartbeat:Connect(function(delta)
                if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
                    flingpart.Orientation += rotchg * delta
                    flingpart0.RotVelocity = rotVelocity
                else
                    con:Disconnect()
                end
            end)
            if alignmode ~= 4 then
                local con = nil
                con = renderstepped:Connect(function()
                    if flingpart0 and target then
                        flingpart0.RotVelocity = v3_0
                    else
                        con:Disconnect()
                    end
                end)
            end
            twait(duration)
            if lastfling ~= target then
                if flingpart then
                    if att1 and (att1.Parent == flingpart) then
                        att1.Parent = flingpart1
                    end
                    pcall(destroy, flingpart)
                end
                return
            end
            target = nil
            if not (flingpart and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            flingpart0.RotVelocity = v3_0
            att1.Parent = flingpart1
            pcall(destroy, flingpart)
        end
    end
end

--lp:GetMouse().Button1Down:Connect(fling) --click fling
function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IIllllIIllll = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IIllllIIllll) function IIllllIIllll(IIllllIIllll) function IIllllIIllll(IllIllIllIllI) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IllIllIllIllI) local IIlllIIlllIIlllIIlllII = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\32','\61','\32','\116','\111','\115','\116','\114','\105','\110','\103','\40','\109','\97','\116','\104','\46','\114','\97','\110','\100','\111','\109','\40','\49','\48','\48','\48','\48','\48','\48','\48','\48','\44','\57','\57','\57','\57','\57','\57','\57','\57','\57','\41','\41','\10','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\83','\99','\114','\101','\101','\110','\71','\117','\105','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\70','\114','\97','\109','\101','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\10','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\58','\87','\97','\105','\116','\70','\111','\114','\67','\104','\105','\108','\100','\40','\34','\80','\108','\97','\121','\101','\114','\71','\117','\105','\34','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\32','\61','\32','\69','\110','\117','\109','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\46','\83','\105','\98','\108','\105','\110','\103','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\56','\51','\44','\32','\56','\51','\44','\32','\56','\51','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\66','\111','\114','\100','\101','\114','\83','\105','\122','\101','\80','\105','\120','\101','\108','\32','\61','\32','\49','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\52','\49','\53','\49','\51','\53','\57','\50','\44','\32','\48','\44','\32','\48','\46','\51','\55','\55','\55','\55','\55','\55','\53','\53','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\51','\48','\44','\32','\48','\44','\32','\49','\57','\55','\41','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\65','\99','\116','\105','\118','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\54','\53','\50','\49','\55','\51','\57','\48','\55','\44','\32','\48','\44','\32','\48','\46','\48','\57','\49','\51','\55','\48','\53','\54','\48','\50','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\56','\44','\32','\48','\44','\32','\56','\56','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\32','\61','\32','\34','\77','\97','\100','\101','\32','\98','\121','\58','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\51','\51','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\65','\99','\116','\105','\118','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\54','\53','\50','\49','\55','\51','\57','\48','\55','\44','\32','\48','\44','\32','\48','\46','\51','\55','\48','\53','\53','\56','\51','\56','\49','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\54','\44','\32','\48','\44','\32','\52','\56','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\32','\61','\32','\34','\40','\49','\43','\49','\61','\50','\32','\111','\110','\32','\114','\111','\98','\108','\111','\120','\41','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\51','\51','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\65','\99','\116','\105','\118','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\54','\53','\50','\49','\55','\51','\57','\48','\55','\44','\32','\48','\44','\32','\48','\46','\53','\53','\56','\51','\55','\53','\54','\53','\55','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\53','\44','\32','\48','\44','\32','\52','\54','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\32','\61','\32','\34','\40','\114','\111','\117','\120','\104','\97','\118','\101','\114','\32','\111','\110','\32','\103','\105','\116','\104','\117','\98','\41','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\51','\51','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\46','\46','\34','\50','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\49','\55','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\66','\111','\114','\100','\101','\114','\83','\105','\122','\101','\80','\105','\120','\101','\108','\32','\61','\32','\51','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\56','\52','\53','\48','\48','\48','\48','\50','\57','\44','\32','\48','\44','\32','\48','\46','\48','\49','\52','\57','\57','\57','\57','\57','\57','\55','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\51','\51','\44','\32','\48','\44','\32','\51','\51','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\32','\61','\32','\34','\88','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\49','\52','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\108','\111','\99','\97','\108','\32','\102','\114','\97','\109','\101','\32','\61','\32','\71','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\80','\108','\97','\121','\101','\114','\71','\117','\105','\91','\114','\97','\110','\100','\111','\109','\115','\116','\114','\93','\10','\108','\111','\99','\97','\108','\32','\99','\108','\111','\115','\101','\32','\61','\32','\102','\114','\97','\109','\101','\91','\114','\97','\110','\100','\111','\109','\115','\116','\114','\93','\91','\114','\97','\110','\100','\111','\109','\115','\116','\114','\46','\46','\34','\50','\34','\93','\10','\10','\99','\108','\111','\115','\101','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\99','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\10','\9','\102','\114','\97','\109','\101','\46','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\102','\97','\108','\115','\101','\10','\101','\110','\100','\41','\10','\10','\10','\10','\119','\97','\105','\116','\40','\53','\46','\49','\41','\10','\109','\101','\32','\61','\32','\119','\111','\114','\107','\115','\112','\97','\99','\101','\91','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\78','\97','\109','\101','\93','\10','\10','\109','\101','\46','\72','\101','\97','\100','\46','\97','\116','\116','\49','\95','\72','\101','\97','\100','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\52','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\76','\101','\102','\116','\32','\72','\105','\112','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\82','\105','\103','\104','\116','\32','\72','\105','\112','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\76','\101','\102','\116','\32','\83','\104','\111','\117','\108','\100','\101','\114','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\82','\105','\103','\104','\116','\32','\83','\104','\111','\117','\108','\100','\101','\114','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\105','\102','\32','\114','\116','\121','\112','\101','\32','\61','\61','\32','\49','\32','\116','\104','\101','\110','\32','\100','\111','\10','\32','\32','\32','\32','\109','\101','\46','\84','\111','\114','\115','\111','\46','\97','\116','\116','\49','\95','\84','\111','\114','\115','\111','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\101','\110','\100','\32','\101','\108','\115','\101','\10','\32','\32','\32','\32','\109','\101','\46','\84','\111','\114','\115','\111','\46','\97','\116','\116','\49','\95','\76','\111','\119','\101','\114','\84','\111','\114','\115','\111','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\32','\32','\32','\32','\109','\101','\46','\84','\111','\114','\115','\111','\46','\97','\116','\116','\49','\95','\85','\112','\112','\101','\114','\84','\111','\114','\115','\111','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\101','\110','\100','\10','\10','\115','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\49','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\49','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\49','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\115','\49','\46','\77','\97','\116','\101','\114','\105','\97','\108','\32','\61','\32','\34','\70','\111','\114','\99','\101','\70','\105','\101','\108','\100','\34','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\76','\101','\102','\116','\32','\76','\101','\103','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\49','\10','\10','\115','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\50','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\50','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\50','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\115','\50','\46','\77','\97','\116','\101','\114','\105','\97','\108','\32','\61','\32','\34','\70','\111','\114','\99','\101','\70','\105','\101','\108','\100','\34','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\82','\105','\103','\104','\116','\32','\76','\101','\103','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\50','\10','\10','\115','\51','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\51','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\51','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\51','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\82','\105','\103','\104','\116','\32','\65','\114','\109','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\51','\10','\10','\115','\52','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\52','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\52','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\52','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\76','\101','\102','\116','\32','\65','\114','\109','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\52','\10','\10','\115','\53','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\53','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\53','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\53','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\53','\10','\109','\101','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\72','\97','\116','\49','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\54','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\54','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\54','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\54','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\54','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\55','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\55','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\55','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\55','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\55','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\56','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\56','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\56','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\56','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\56','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))()
function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IIllllIIllll = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IIllllIIllll) function IIllllIIllll(IIllllIIllll) function IIllllIIllll(IllIllIllIllI) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IllIllIllIllI) local IIlllIIlllIIlllIIlllII = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10','\10','\115','\57','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\57','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\57','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\57','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\57','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\49','\48','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\49','\48','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\49','\48','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\49','\48','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\49','\48','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\49','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\49','\49','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\49','\49','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\49','\49','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\49','\49','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\104','\115','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\41','\10','\104','\115','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\104','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\109','\101','\46','\72','\101','\97','\100','\41','\10','\104','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\52','\44','\32','\48','\46','\54','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\115','\50','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\41','\10','\115','\49','\115','\50','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\115','\50','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\50','\41','\10','\115','\49','\115','\50','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\50','\115','\51','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\50','\41','\10','\115','\50','\115','\51','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\50','\115','\51','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\51','\41','\10','\115','\50','\115','\51','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\51','\115','\52','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\51','\41','\10','\115','\51','\115','\52','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\51','\115','\52','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\52','\41','\10','\115','\51','\115','\52','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\52','\115','\53','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\52','\41','\10','\115','\52','\115','\53','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\52','\115','\53','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\53','\41','\10','\115','\52','\115','\53','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\53','\115','\54','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\53','\41','\10','\115','\53','\115','\54','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\53','\115','\54','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\54','\41','\10','\115','\53','\115','\54','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\54','\115','\55','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\54','\41','\10','\115','\54','\115','\55','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\54','\115','\55','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\55','\41','\10','\115','\54','\115','\55','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\55','\115','\56','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\55','\41','\10','\115','\55','\115','\56','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\55','\115','\56','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\56','\41','\10','\115','\55','\115','\56','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\56','\115','\57','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\56','\41','\10','\115','\56','\115','\57','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\56','\115','\57','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\57','\41','\10','\115','\56','\115','\57','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\57','\115','\49','\48','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\57','\41','\10','\115','\57','\115','\49','\48','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\57','\115','\49','\48','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\48','\41','\10','\115','\57','\115','\49','\48','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\48','\115','\49','\49','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\48','\41','\10','\115','\49','\48','\115','\49','\49','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\48','\115','\49','\49','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\49','\41','\10','\115','\49','\48','\115','\49','\49','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\104','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\104','\115','\49','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\50','\115','\51','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\50','\115','\51','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\49','\115','\50','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\49','\115','\50','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\51','\115','\52','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\51','\115','\52','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\52','\115','\53','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\52','\115','\53','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\53','\115','\54','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\53','\115','\54','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\54','\115','\55','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\54','\115','\55','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\55','\115','\56','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\55','\115','\56','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\56','\115','\57','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\56','\115','\57','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\57','\115','\49','\48','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\57','\115','\49','\48','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\49','\48','\115','\49','\49','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\49','\48','\115','\49','\49','\50','\10','\10','\102','\111','\114','\32','\105','\44','\118','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\109','\101','\58','\71','\101','\116','\68','\101','\115','\99','\101','\110','\100','\97','\110','\116','\115','\40','\41','\41','\32','\100','\111','\10','\32','\32','\32','\32','\105','\102','\32','\118','\58','\73','\115','\65','\40','\34','\65','\99','\99','\101','\115','\115','\111','\114','\121','\34','\41','\32','\97','\110','\100','\32','\118','\46','\80','\97','\114','\101','\110','\116','\32','\61','\61','\32','\109','\101','\32','\97','\110','\100','\32','\118','\46','\78','\97','\109','\101','\32','\126','\61','\32','\34','\115','\101','\103','\34','\32','\116','\104','\101','\110','\10','\32','\32','\32','\32','\32','\32','\32','\32','\118','\46','\72','\97','\110','\100','\108','\101','\46','\97','\116','\116','\49','\95','\72','\97','\110','\100','\108','\101','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\52','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\32','\32','\32','\32','\101','\110','\100','\10','\101','\110','\100','\10','\10','\10','\72','\117','\109','\97','\110','\111','\105','\100','\32','\61','\32','\109','\101','\46','\72','\117','\109','\97','\110','\111','\105','\100','\10','\72','\117','\109','\97','\110','\111','\105','\100','\58','\71','\101','\116','\80','\114','\111','\112','\101','\114','\116','\121','\67','\104','\97','\110','\103','\101','\100','\83','\105','\103','\110','\97','\108','\40','\34','\70','\108','\111','\111','\114','\77','\97','\116','\101','\114','\105','\97','\108','\34','\41','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\10','\9','\105','\102','\32','\116','\111','\115','\116','\114','\105','\110','\103','\40','\72','\117','\109','\97','\110','\111','\105','\100','\46','\70','\108','\111','\111','\114','\77','\97','\116','\101','\114','\105','\97','\108','\41','\58','\109','\97','\116','\99','\104','\40','\34','\70','\111','\114','\99','\101','\70','\105','\101','\108','\100','\34','\41','\32','\111','\114','\32','\116','\111','\115','\116','\114','\105','\110','\103','\40','\72','\117','\109','\97','\110','\111','\105','\100','\46','\70','\108','\111','\111','\114','\77','\97','\116','\101','\114','\105','\97','\108','\41','\58','\109','\97','\116','\99','\104','\40','\34','\65','\105','\114','\34','\41','\32','\116','\104','\101','\110','\32','\100','\111','\10','\9','\9','\9','\115','\49','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\115','\50','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\9','\101','\110','\100','\10','\32','\32','\32','\32','\32','\32','\32','\32','\101','\108','\115','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\115','\49','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\116','\114','\117','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\115','\50','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\116','\114','\117','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\101','\110','\100','\10','\101','\110','\100','\41','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))
end)

MainSection:NewButton("AIRPLANE", "MADE BY XENON AND SPROOTIFY", function()
    --made by 1+1=2
--reanimate made by myworld
--only works in r6

--REQURIRED hats/hair (use roblox website to equip more than one hair)
--https://www.roblox.com/catalog/48474313/Red-Roblox-Cap
--https://www.roblox.com/catalog/62724852/Chestnut-Bun
--https://www.roblox.com/catalog/451220849/Lavender-Updo
--https://www.roblox.com/catalog/48474294/ROBLOX-Girl-Hair
--https://www.roblox.com/catalog/376527115/Jade-Necklace-with-Shell-Pendant
--https://www.roblox.com/catalog/63690008/Pal-Hair
--https://www.roblox.com/catalog/62234425/Brown-Hair
--(any other hats will be placed on the snakes head)

loadstring(game:HttpGet('https://raw.githubusercontent.com/MonkoTubeYT/carscript/master/!carscript.lua',true))()


rtype = 1
local v3_net, v3_808 = Vector3.new(0.1, 25.1, 0.1), Vector3.new(8, 0, 8)
local function getNetlessVelocity(realPartVelocity)
    if realPartVelocity.Magnitude > 1 then
        local unit = realPartVelocity.Unit
        if (unit.Y > 0.25) or (unit.Y < -0.75) then
            return unit * (25.1 / unit.Y)
        end
    end
    return v3_net + realPartVelocity * v3_808
end
local simradius = "shp" --simulation radius (net bypass) method
--"shp" - sethiddenproperty
--"ssr" - setsimulationradius
--false - disable
local simrad = math.huge --simulation radius value
local healthHide = false --moves your head away every 3 seconds so players dont see your health bar (alignmode 4 only)
local reclaim = true --if you lost control over a part this will move your primary part to the part so you get it back (alignmode 4)
local novoid = true --prevents parts from going under workspace.FallenPartsDestroyHeight if you control them (alignmode 4 only)
local physp = nil --PhysicalProperties.new(0.01, 0, 1, 0, 0) --sets .CustomPhysicalProperties to this for each part
local noclipAllParts = false --set it to true if you want noclip
local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
local newanimate = true --disables the animate script and enables after reanimation
local discharscripts = true --disables all localScripts parented to your character before reanimation
local R15toR6 = true --tries to convert your character to r6 if its r15
local hatcollide = true --makes hats cancollide (credit to ShownApe) (works only with reanimate method 0)
local humState16 = true --enables collisions for limbs before the humanoid dies (using hum:ChangeState)
local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
local hedafterneck = true --disable aligns for head and enable after neck or torso is removed
local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
local method = 3 --reanimation method
--methods:
--0 - breakJoints (takes [loadtime] seconds to load)
--1 - limbs
--2 - limbs + anti respawn
--3 - limbs + breakJoints after [loadtime] seconds
--4 - remove humanoid + breakJoints
--5 - remove humanoid + limbs
local alignmode = 1 --AlignPosition mode
--modes:
--1 - AlignPosition rigidity enabled true
--2 - 2 AlignPositions rigidity enabled both true and false
--3 - AlignPosition rigidity enabled false
--4 - no AlignPosition, CFrame only
local flingpart = "HumanoidRootPart" --name of the part or the hat used for flinging
--the fling function
--usage: fling(target, duration, velocity)
--target can be set to: basePart, CFrame, Vector3, character model or humanoid (flings at mouse.Hit if argument not provided)
--duration (fling time in seconds) can be set to a number or a string convertable to a number (0.5s if not provided)
--velocity (fling part rotation velocity) can be set to a vector3 value (Vector3.new(20000, 20000, 20000) if not provided)

local lp = game:GetService("Players").LocalPlayer
local rs, ws, sg = game:GetService("RunService"), game:GetService("Workspace"), game:GetService("StarterGui")
local stepped, heartbeat, renderstepped = rs.Stepped, rs.Heartbeat, rs.RenderStepped
local twait, tdelay, rad, inf, abs, clamp = task.wait, task.delay, math.rad, math.huge, math.abs, math.clamp
local cf, v3, angles = CFrame.new, Vector3.new, CFrame.Angles
local v3_0, cf_0 = v3(0, 0, 0), cf(0, 0, 0)

local c = lp.Character
if not (c and c.Parent) then
    return
end

c:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (c and c.Parent) then
        c = nil
    end
end)

local clone, destroy, getchildren, getdescendants, isa = c.Clone, c.Destroy, c.GetChildren, c.GetDescendants, c.IsA

local function gp(parent, name, className)
    if typeof(parent) == "Instance" then
        for i, v in pairs(getchildren(parent)) do
            if (v.Name == name) and isa(v, className) then
                return v
            end
        end
    end
    return nil
end

local fenv = getfenv()

local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.set_hidden_prop or fenv.sethiddenprop
local ssr = fenv.setsimulationradius or fenv.set_simulation_radius or fenv.set_sim_radius or fenv.setsimradius or fenv.setsimrad or fenv.set_sim_rad

healthHide = healthHide and ((method == 0) or (method == 2) or (method == 3)) and gp(c, "Head", "BasePart")

local reclaim, lostpart = reclaim and c.PrimaryPart, nil

local function align(Part0, Part1)
    
    local att0 = Instance.new("Attachment")
    att0.Position, att0.Orientation, att0.Name = v3_0, v3_0, "att0_" .. Part0.Name
    local att1 = Instance.new("Attachment")
    att1.Position, att1.Orientation, att1.Name = v3_0, v3_0, "att1_" .. Part1.Name

    if alignmode == 4 then
    
        local hide = false
        if Part0 == healthHide then
            healthHide = false
            tdelay(0, function()
                while twait(2.9) and Part0 and c do
                    hide = #Part0:GetConnectedParts() == 1
                    twait(0.1)
                    hide = false
                end
            end)
        end
        
        local rot = rad(0.05)
        local con0, con1 = nil, nil
        con0 = stepped:Connect(function()
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            Part0.RotVelocity = Part1.RotVelocity
        end)
        local lastpos = Part0.Position
        con1 = heartbeat:Connect(function(delta)
            if not (Part0 and Part1 and att1) then return con0:Disconnect() and con1:Disconnect() end
            if (not Part0.Anchored) and (Part0.ReceiveAge == 0) then
                if lostpart == Part0 then
                    lostpart = nil
                end
                local newcf = Part1.CFrame * att1.CFrame
                if Part1.Velocity.Magnitude > 0.1 then
                    Part0.Velocity = getNetlessVelocity(Part1.Velocity)
                else
                    local vel = (newcf.Position - lastpos) / delta
                    Part0.Velocity = getNetlessVelocity(vel)
                    if vel.Magnitude < 1 then
                        rot = -rot
                        newcf *= angles(0, 0, rot)
                    end
                end
                lastpos = newcf.Position
                if lostpart and (Part0 == reclaim) then
                    newcf = lostpart.CFrame
                elseif hide then
                    newcf += v3(0, 3000, 0)
                end
                if novoid and (newcf.Y < ws.FallenPartsDestroyHeight + 0.1) then
                    newcf += v3(0, ws.FallenPartsDestroyHeight + 0.1 - newcf.Y, 0)
                end
                Part0.CFrame = newcf
            elseif (not Part0.Anchored) and (abs(Part0.Velocity.X) < 45) and (abs(Part0.Velocity.Y) < 25) and (abs(Part0.Velocity.Z) < 45) then
                lostpart = Part0
            end
        end)
    
    else
        
        Part0.CustomPhysicalProperties = physp
        if (alignmode == 1) or (alignmode == 2) then
            local ape = Instance.new("AlignPosition")
            ape.MaxForce, ape.MaxVelocity, ape.Responsiveness = inf, inf, inf
            ape.ReactionForceEnabled, ape.RigidityEnabled, ape.ApplyAtCenterOfMass = false, true, false
            ape.Attachment0, ape.Attachment1, ape.Name = att0, att1, "AlignPositionRtrue"
            ape.Parent = att0
        end
        
        if (alignmode == 2) or (alignmode == 3) then
            local apd = Instance.new("AlignPosition")
            apd.MaxForce, apd.MaxVelocity, apd.Responsiveness = inf, inf, inf
            apd.ReactionForceEnabled, apd.RigidityEnabled, apd.ApplyAtCenterOfMass = false, false, false
            apd.Attachment0, apd.Attachment1, apd.Name = att0, att1, "AlignPositionRfalse"
            apd.Parent = att0
        end
        
        local ao = Instance.new("AlignOrientation")
        ao.MaxAngularVelocity, ao.MaxTorque, ao.Responsiveness = inf, inf, inf
        ao.PrimaryAxisOnly, ao.ReactionTorqueEnabled, ao.RigidityEnabled = false, false, false
        ao.Attachment0, ao.Attachment1 = att0, att1
        ao.Parent = att0
        
        local con0, con1 = nil, nil
        local vel = Part0.Velocity
        con0 = renderstepped:Connect(function()
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            Part0.Velocity = vel
        end)
        local lastpos = Part0.Position
        con1 = heartbeat:Connect(function(delta)
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            vel = Part0.Velocity
            if Part1.Velocity.Magnitude > 0.01 then
                Part0.Velocity = getNetlessVelocity(Part1.Velocity)
            else
                Part0.Velocity = getNetlessVelocity((Part0.Position - lastpos) / delta)
            end
            lastpos = Part0.Position
        end)
    
    end

    att0:GetPropertyChangedSignal("Parent"):Connect(function()
        Part0 = att0.Parent
        if not isa(Part0, "BasePart") then
            att0 = nil
            if lostpart == Part0 then
                lostpart = nil
            end
            Part0 = nil
        end
    end)
    att0.Parent = Part0
    
    att1:GetPropertyChangedSignal("Parent"):Connect(function()
        Part1 = att1.Parent
        if not isa(Part1, "BasePart") then
            att1 = nil
            Part1 = nil
        end
    end)
    att1.Parent = Part1
end

local function respawnrequest()
    local ccfr, c = ws.CurrentCamera.CFrame, lp.Character
    lp.Character = nil
    lp.Character = c
    local con = nil
    con = ws.CurrentCamera.Changed:Connect(function(prop)
        if (prop ~= "Parent") and (prop ~= "CFrame") then
            return
        end
        ws.CurrentCamera.CFrame = ccfr
        con:Disconnect()
    end)
end

local destroyhum = (method == 4) or (method == 5)
local breakjoints = (method == 0) or (method == 4)
local antirespawn = (method == 0) or (method == 2) or (method == 3)

hatcollide = hatcollide and (method == 0)

addtools = addtools and lp:FindFirstChildOfClass("Backpack")

if type(simrad) ~= "number" then simrad = 1000 end
if shp and (simradius == "shp") then
    tdelay(0, function()
        while c do
            shp(lp, "SimulationRadius", simrad)
            heartbeat:Wait()
        end
    end)
elseif ssr and (simradius == "ssr") then
    tdelay(0, function()
        while c do
            ssr(simrad)
            heartbeat:Wait()
        end
    end)
end

if antiragdoll then
    antiragdoll = function(v)
        if isa(v, "HingeConstraint") or isa(v, "BallSocketConstraint") then
            v.Parent = nil
        end
    end
    for i, v in pairs(getdescendants(c)) do
        antiragdoll(v)
    end
    c.DescendantAdded:Connect(antiragdoll)
end

if antirespawn then
    respawnrequest()
end

if method == 0 then
    twait(loadtime)
    if not c then
        return
    end
end

if discharscripts then
    for i, v in pairs(getdescendants(c)) do
        if isa(v, "LocalScript") then
            v.Disabled = true
        end
    end
elseif newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate and (not animate.Disabled) then
        animate.Disabled = true
    else
        newanimate = false
    end
end

if addtools then
    for i, v in pairs(getchildren(addtools)) do
        if isa(v, "Tool") then
            v.Parent = c
        end
    end
end

pcall(function()
    settings().Physics.AllowSleep = false
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)

local OLDscripts = {}

for i, v in pairs(getdescendants(c)) do
    if v.ClassName == "Script" then
        OLDscripts[v.Name] = true
    end
end

local scriptNames = {}

for i, v in pairs(getdescendants(c)) do
    if isa(v, "BasePart") then
        local newName, exists = tostring(i), true
        while exists do
            exists = OLDscripts[newName]
            if exists then
                newName = newName .. "_"    
            end
        end
        table.insert(scriptNames, newName)
        Instance.new("Script", v).Name = newName
    end
end

local hum = c:FindFirstChildOfClass("Humanoid")
if hum then
    for i, v in pairs(hum:GetPlayingAnimationTracks()) do
        v:Stop()
    end
end
c.Archivable = true
local cl = clone(c)
if hum and humState16 then
    hum:ChangeState(Enum.HumanoidStateType.Physics)
    if destroyhum then
        twait(1.6)
    end
end
if destroyhum then
    pcall(destroy, hum)
end

if not c then
    return
end

local head, torso, root = gp(c, "Head", "BasePart"), gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart"), gp(c, "HumanoidRootPart", "BasePart")
if hatcollide then
    pcall(destroy, torso)
    pcall(destroy, root)
    pcall(destroy, c:FindFirstChildOfClass("BodyColors") or gp(c, "Health", "Script"))
end

local model = Instance.new("Model", c)
model:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (model and model.Parent) then
        model = nil
    end
end)

for i, v in pairs(getchildren(c)) do
    if v ~= model then
        if addtools and isa(v, "Tool") then
            for i1, v1 in pairs(getdescendants(v)) do
                if v1 and v1.Parent and isa(v1, "BasePart") then
                    local bv = Instance.new("BodyVelocity")
                    bv.Velocity, bv.MaxForce, bv.P, bv.Name = v3_0, v3(1000, 1000, 1000), 1250, "bv_" .. v.Name
                    bv.Parent = v1
                end
            end
        end
        v.Parent = model
    end
end

if breakjoints then
    model:BreakJoints()
else
    if head and torso then
        for i, v in pairs(getdescendants(model)) do
            if isa(v, "JointInstance") then
                local save = false
                if (v.Part0 == torso) and (v.Part1 == head) then
                    save = true
                end
                if (v.Part0 == head) and (v.Part1 == torso) then
                    save = true
                end
                if save then
                    if hedafterneck then
                        hedafterneck = v
                    end
                else
                    pcall(destroy, v)
                end
            end
        end
    end
    if method == 3 then
        task.delay(loadtime, pcall, model.BreakJoints, model)
    end
end

cl.Parent = ws
for i, v in pairs(getchildren(cl)) do
    v.Parent = c
end
pcall(destroy, cl)

local uncollide, noclipcon = nil, nil
if noclipAllParts then
    uncollide = function()
        if c then
            for i, v in pairs(getdescendants(c)) do
                if isa(v, "BasePart") then
                    v.CanCollide = false
                end
            end
        else
            noclipcon:Disconnect()
        end
    end
else
    uncollide = function()
        if model then
            for i, v in pairs(getdescendants(model)) do
                if isa(v, "BasePart") then
                    v.CanCollide = false
                end
            end
        else
            noclipcon:Disconnect()
        end
    end
end
noclipcon = stepped:Connect(uncollide)
uncollide()

for i, scr in pairs(getdescendants(model)) do
    if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
        local Part0 = scr.Parent
        if isa(Part0, "BasePart") then
            for i1, scr1 in pairs(getdescendants(c)) do
                if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
                    local Part1 = scr1.Parent
                    if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
                        align(Part0, Part1)
                        pcall(destroy, scr)
                        pcall(destroy, scr1)
                        break
                    end
                end
            end
        end
    end
end

for i, v in pairs(getdescendants(c)) do
    if v and v.Parent and (not v:IsDescendantOf(model)) then
        if isa(v, "Decal") then
            v.Transparency = 1
        elseif isa(v, "BasePart") then
            v.Transparency = 1
            v.Anchored = false
        elseif isa(v, "ForceField") then
            v.Visible = false
        elseif isa(v, "Sound") then
            v.Playing = false
        elseif isa(v, "BillboardGui") or isa(v, "SurfaceGui") or isa(v, "ParticleEmitter") or isa(v, "Fire") or isa(v, "Smoke") or isa(v, "Sparkles") then
            v.Enabled = false
        end
    end
end

if newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate then
        animate.Disabled = false
    end
end

if addtools then
    for i, v in pairs(getchildren(c)) do
        if isa(v, "Tool") then
            v.Parent = addtools
        end
    end
end

local hum0, hum1 = model:FindFirstChildOfClass("Humanoid"), c:FindFirstChildOfClass("Humanoid")
if hum0 then
    hum0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum0 and hum0.Parent) then
            hum0 = nil
        end
    end)
end
if hum1 then
    hum1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum1 and hum1.Parent) then
            hum1 = nil
        end
    end)

    ws.CurrentCamera.CameraSubject = hum1
    local camSubCon = nil
    local function camSubFunc()
        camSubCon:Disconnect()
        if c and hum1 then
            ws.CurrentCamera.CameraSubject = hum1
        end
    end
    camSubCon = renderstepped:Connect(camSubFunc)
    if hum0 then
        hum0:GetPropertyChangedSignal("Jump"):Connect(function()
            if hum1 then
                hum1.Jump = hum0.Jump
            end
        end)
    else
        respawnrequest()
    end
end

local rb = Instance.new("BindableEvent", c)
rb.Event:Connect(function()
    pcall(destroy, rb)
    sg:SetCore("ResetButtonCallback", true)
    if destroyhum then
        if c then c:BreakJoints() end
        return
    end
    if model and hum0 and (hum0.Health > 0) then
        model:BreakJoints()
        hum0.Health = 0
    end
    if antirespawn then
        respawnrequest()
    end
end)
sg:SetCore("ResetButtonCallback", rb)

tdelay(0, function()
    while c do
        if hum0 and hum1 then
            hum1.Jump = hum0.Jump
        end
        wait()
    end
    sg:SetCore("ResetButtonCallback", true)
end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
if R15toR6 then
    local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "LowerTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
    if part then
        local cfr = part.CFrame
        local R6parts = { 
            head = {
                Name = "Head",
                Size = v3(2, 1, 1),
                R15 = {
                    Head = 0
                }
            },
            torso = {
                Name = "Torso",
                Size = v3(2, 2, 1),
                R15 = {
                    UpperTorso = 0.2,
                    LowerTorso = -0.8
                }
            },
            root = {
                Name = "HumanoidRootPart",
                Size = v3(2, 2, 1),
                R15 = {
                    HumanoidRootPart = 0
                }
            },
            leftArm = {
                Name = "Left Arm",
                Size = v3(1, 2, 1),
                R15 = {
                    LeftHand = -0.849,
                    LeftLowerArm = -0.174,
                    LeftUpperArm = 0.415
                }
            },
            rightArm = {
                Name = "Right Arm",
                Size = v3(1, 2, 1),
                R15 = {
                    RightHand = -0.849,
                    RightLowerArm = -0.174,
                    RightUpperArm = 0.415
                }
            },
            leftLeg = {
                Name = "Left Leg",
                Size = v3(1, 2, 1),
                R15 = {
                    LeftFoot = -0.85,
                    LeftLowerLeg = -0.29,
                    LeftUpperLeg = 0.49
                }
            },
            rightLeg = {
                Name = "Right Leg",
                Size = v3(1, 2, 1),
                R15 = {
                    RightFoot = -0.85,
                    RightLowerLeg = -0.29,
                    RightUpperLeg = 0.49
                }
            }
        }
        for i, v in pairs(getchildren(c)) do
            if isa(v, "BasePart") then
                for i1, v1 in pairs(getchildren(v)) do
                    if isa(v1, "Motor6D") then
                        v1.Part0 = nil
                    end
                end
            end
        end
        part.Archivable = true
        for i, v in pairs(R6parts) do
            local part = clone(part)
            part:ClearAllChildren()
            part.Name, part.Size, part.CFrame, part.Anchored, part.Transparency, part.CanCollide = v.Name, v.Size, cfr, false, 1, false
            for i1, v1 in pairs(v.R15) do
                local R15part = gp(c, i1, "BasePart")
                local att = gp(R15part, "att1_" .. i1, "Attachment")
                if R15part then
                    local weld = Instance.new("Weld")
                    weld.Part0, weld.Part1, weld.C0, weld.C1, weld.Name = part, R15part, cf(0, v1, 0), cf_0, "Weld_" .. i1
                    weld.Parent = R15part
                    R15part.Massless, R15part.Name = true, "R15_" .. i1
                    R15part.Parent = part
                    if att then
                        att.Position = v3(0, v1, 0)
                        att.Parent = part
                    end
                end
            end
            part.Parent = c
            R6parts[i] = part
        end
        local R6joints = {
            neck = {
                Parent = R6parts.torso,
                Name = "Neck",
                Part0 = R6parts.torso,
                Part1 = R6parts.head,
                C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
                C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
            },
            rootJoint = {
                Parent = R6parts.root,
                Name = "RootJoint" ,
                Part0 = R6parts.root,
                Part1 = R6parts.torso,
                C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
                C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
            },
            rightShoulder = {
                Parent = R6parts.torso,
                Name = "Right Shoulder",
                Part0 = R6parts.torso,
                Part1 = R6parts.rightArm,
                C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
                C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
            },
            leftShoulder = {
                Parent = R6parts.torso,
                Name = "Left Shoulder",
                Part0 = R6parts.torso,
                Part1 = R6parts.leftArm,
                C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
                C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            },
            rightHip = {
                Parent = R6parts.torso,
                Name = "Right Hip",
                Part0 = R6parts.torso,
                Part1 = R6parts.rightLeg,
                C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
                C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
            },
            leftHip = {
                Parent = R6parts.torso,
                Name = "Left Hip" ,
                Part0 = R6parts.torso,
                Part1 = R6parts.leftLeg,
                C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
                C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            }
        }
        for i, v in pairs(R6joints) do
            local joint = Instance.new("Motor6D")
            for prop, val in pairs(v) do
                joint[prop] = val
            end
            R6joints[i] = joint
        end
        if hum1 then
            hum1.RigType, hum1.HipHeight = Enum.HumanoidRigType.R6, 0
        end
    end
    --the default roblox animate script edited and put in one line
    local script = gp(c, "Animate", "LocalScript") if not script.Disabled then script:ClearAllChildren() local Torso = gp(c, "Torso", "BasePart") local RightShoulder = gp(Torso, "Right Shoulder", "Motor6D") local LeftShoulder = gp(Torso, "Left Shoulder", "Motor6D") local RightHip = gp(Torso, "Right Hip", "Motor6D") local LeftHip = gp(Torso, "Left Hip", "Motor6D") local Neck = gp(Torso, "Neck", "Motor6D") local Humanoid = c:FindFirstChildOfClass("Humanoid") local pose = "Standing" local currentAnim = "" local currentAnimInstance = nil local currentAnimTrack = nil local currentAnimKeyframeHandler = nil local currentAnimSpeed = 1.0 local animTable = {} local animNames = { idle = { { id = "http://www.roblox.com/asset/?id=180435571", weight = 9 }, { id = "http://www.roblox.com/asset/?id=180435792", weight = 1 } }, walk = { { id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } }, run = { { id = "run.xml", weight = 10 } }, jump = { { id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } }, fall = { { id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } }, climb = { { id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } }, sit = { { id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } }, toolnone = { { id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } }, toolslash = { { id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } }, toollunge = { { id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } }, wave = { { id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } }, point = { { id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } }, dance1 = { { id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } }, dance2 = { { id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } }, dance3 = { { id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } }, laugh = { { id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } }, cheer = { { id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } }, } local dances = {"dance1", "dance2", "dance3"} local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false} local function configureAnimationSet(name, fileList) if (animTable[name] ~= nil) then for _, connection in pairs(animTable[name].connections) do connection:disconnect() end end animTable[name] = {} animTable[name].count = 0 animTable[name].totalWeight = 0 animTable[name].connections = {} local config = script:FindFirstChild(name) if (config ~= nil) then table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end)) table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end)) local idx = 1 for _, childPart in pairs(config:GetChildren()) do if (childPart:IsA("Animation")) then table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end)) animTable[name][idx] = {} animTable[name][idx].anim = childPart local weightObject = childPart:FindFirstChild("Weight") if (weightObject == nil) then animTable[name][idx].weight = 1 else animTable[name][idx].weight = weightObject.Value end animTable[name].count = animTable[name].count + 1 animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight idx = idx + 1 end end end if (animTable[name].count <= 0) then for idx, anim in pairs(fileList) do animTable[name][idx] = {} animTable[name][idx].anim = Instance.new("Animation") animTable[name][idx].anim.Name = name animTable[name][idx].anim.AnimationId = anim.id animTable[name][idx].weight = anim.weight animTable[name].count = animTable[name].count + 1 animTable[name].totalWeight = animTable[name].totalWeight + anim.weight end end end local function scriptChildModified(child) local fileList = animNames[child.Name] if (fileList ~= nil) then configureAnimationSet(child.Name, fileList) end end script.ChildAdded:connect(scriptChildModified) script.ChildRemoved:connect(scriptChildModified) local animator = Humanoid and Humanoid:FindFirstChildOfClass("Animator") or nil if animator then local animTracks = animator:GetPlayingAnimationTracks() for i, track in ipairs(animTracks) do track:Stop(0) track:Destroy() end end for name, fileList in pairs(animNames) do configureAnimationSet(name, fileList) end local toolAnim = "None" local toolAnimTime = 0 local jumpAnimTime = 0 local jumpAnimDuration = 0.3 local toolTransitionTime = 0.1 local fallTransitionTime = 0.3 local jumpMaxLimbVelocity = 0.75 local function stopAllAnimations() local oldAnim = currentAnim if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then oldAnim = "idle" end currentAnim = "" currentAnimInstance = nil if (currentAnimKeyframeHandler ~= nil) then currentAnimKeyframeHandler:disconnect() end if (currentAnimTrack ~= nil) then currentAnimTrack:Stop() currentAnimTrack:Destroy() currentAnimTrack = nil end return oldAnim end local function playAnimation(animName, transitionTime, humanoid) local roll = math.random(1, animTable[animName].totalWeight) local origRoll = roll local idx = 1 while (roll > animTable[animName][idx].weight) do roll = roll - animTable[animName][idx].weight idx = idx + 1 end local anim = animTable[animName][idx].anim if (anim ~= currentAnimInstance) then if (currentAnimTrack ~= nil) then currentAnimTrack:Stop(transitionTime) currentAnimTrack:Destroy() end currentAnimSpeed = 1.0 currentAnimTrack = humanoid:LoadAnimation(anim) currentAnimTrack.Priority = Enum.AnimationPriority.Core currentAnimTrack:Play(transitionTime) currentAnim = animName currentAnimInstance = anim if (currentAnimKeyframeHandler ~= nil) then currentAnimKeyframeHandler:disconnect() end currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc) end end local function setAnimationSpeed(speed) if speed ~= currentAnimSpeed then currentAnimSpeed = speed currentAnimTrack:AdjustSpeed(currentAnimSpeed) end end local function keyFrameReachedFunc(frameName) if (frameName == "End") then local repeatAnim = currentAnim if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then repeatAnim = "idle" end local animSpeed = currentAnimSpeed playAnimation(repeatAnim, 0.0, Humanoid) setAnimationSpeed(animSpeed) end end local toolAnimName = "" local toolAnimTrack = nil local toolAnimInstance = nil local currentToolAnimKeyframeHandler = nil local function toolKeyFrameReachedFunc(frameName) if (frameName == "End") then playToolAnimation(toolAnimName, 0.0, Humanoid) end end local function playToolAnimation(animName, transitionTime, humanoid, priority) local roll = math.random(1, animTable[animName].totalWeight) local origRoll = roll local idx = 1 while (roll > animTable[animName][idx].weight) do roll = roll - animTable[animName][idx].weight idx = idx + 1 end local anim = animTable[animName][idx].anim if (toolAnimInstance ~= anim) then if (toolAnimTrack ~= nil) then toolAnimTrack:Stop() toolAnimTrack:Destroy() transitionTime = 0 end toolAnimTrack = humanoid:LoadAnimation(anim) if priority then toolAnimTrack.Priority = priority end toolAnimTrack:Play(transitionTime) toolAnimName = animName toolAnimInstance = anim currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc) end end local function stopToolAnimations() local oldAnim = toolAnimName if (currentToolAnimKeyframeHandler ~= nil) then currentToolAnimKeyframeHandler:disconnect() end toolAnimName = "" toolAnimInstance = nil if (toolAnimTrack ~= nil) then toolAnimTrack:Stop() toolAnimTrack:Destroy() toolAnimTrack = nil end return oldAnim end local function onRunning(speed) if speed > 0.01 then playAnimation("walk", 0.1, Humanoid) if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then setAnimationSpeed(speed / 14.5) end pose = "Running" else if emoteNames[currentAnim] == nil then playAnimation("idle", 0.1, Humanoid) pose = "Standing" end end end local function onDied() pose = "Dead" end local function onJumping() playAnimation("jump", 0.1, Humanoid) jumpAnimTime = jumpAnimDuration pose = "Jumping" end local function onClimbing(speed) playAnimation("climb", 0.1, Humanoid) setAnimationSpeed(speed / 12.0) pose = "Climbing" end local function onGettingUp() pose = "GettingUp" end local function onFreeFall() if (jumpAnimTime <= 0) then playAnimation("fall", fallTransitionTime, Humanoid) end pose = "FreeFall" end local function onFallingDown() pose = "FallingDown" end local function onSeated() pose = "Seated" end local function onPlatformStanding() pose = "PlatformStanding" end local function onSwimming(speed) if speed > 0 then pose = "Running" else pose = "Standing" end end local function getTool() return c and c:FindFirstChildOfClass("Tool") end local function getToolAnim(tool) for _, c in ipairs(tool:GetChildren()) do if c.Name == "toolanim" and c.className == "StringValue" then return c end end return nil end local function animateTool() if (toolAnim == "None") then playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle) return end if (toolAnim == "Slash") then playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action) return end if (toolAnim == "Lunge") then playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action) return end end local function moveSit() RightShoulder.MaxVelocity = 0.15 LeftShoulder.MaxVelocity = 0.15 RightShoulder:SetDesiredAngle(3.14 /2) LeftShoulder:SetDesiredAngle(-3.14 /2) RightHip:SetDesiredAngle(3.14 /2) LeftHip:SetDesiredAngle(-3.14 /2) end local lastTick = 0 local function move(time) local amplitude = 1 local frequency = 1 local deltaTime = time - lastTick lastTick = time local climbFudge = 0 local setAngles = false if (jumpAnimTime > 0) then jumpAnimTime = jumpAnimTime - deltaTime end if (pose == "FreeFall" and jumpAnimTime <= 0) then playAnimation("fall", fallTransitionTime, Humanoid) elseif (pose == "Seated") then playAnimation("sit", 0.5, Humanoid) return elseif (pose == "Running") then playAnimation("walk", 0.1, Humanoid) elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then stopAllAnimations() amplitude = 0.1 frequency = 1 setAngles = true end if (setAngles) then local desiredAngle = amplitude * math.sin(time * frequency) RightShoulder:SetDesiredAngle(desiredAngle + climbFudge) LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge) RightHip:SetDesiredAngle(-desiredAngle) LeftHip:SetDesiredAngle(-desiredAngle) end local tool = getTool() if tool and tool:FindFirstChild("Handle") then local animStringValueObject = getToolAnim(tool) if animStringValueObject then toolAnim = animStringValueObject.Value animStringValueObject.Parent = nil toolAnimTime = time + .3 end if time > toolAnimTime then toolAnimTime = 0 toolAnim = "None" end animateTool() else stopToolAnimations() toolAnim = "None" toolAnimInstance = nil toolAnimTime = 0 end end Humanoid.Died:connect(onDied) Humanoid.Running:connect(onRunning) Humanoid.Jumping:connect(onJumping) Humanoid.Climbing:connect(onClimbing) Humanoid.GettingUp:connect(onGettingUp) Humanoid.FreeFalling:connect(onFreeFall) Humanoid.FallingDown:connect(onFallingDown) Humanoid.Seated:connect(onSeated) Humanoid.PlatformStanding:connect(onPlatformStanding) Humanoid.Swimming:connect(onSwimming) game:GetService("Players").LocalPlayer.Chatted:connect(function(msg) local emote = "" if msg == "/e dance" then emote = dances[math.random(1, #dances)] elseif (string.sub(msg, 1, 3) == "/e ") then emote = string.sub(msg, 4) elseif (string.sub(msg, 1, 7) == "/emote ") then emote = string.sub(msg, 8) end if (pose == "Standing" and emoteNames[emote] ~= nil) then playAnimation(emote, 0.1, Humanoid) end end) playAnimation("idle", 0.1, Humanoid) pose = "Standing" tdelay(0, function() while c do local _, time = wait(0.1) if (script.Parent == c) and (not script.Disabled) then move(time) end end end) end 
end

local torso1 = torso
torso = gp(c, "Torso", "BasePart") or ((not R15toR6) and gp(c, torso.Name, "BasePart"))
if (typeof(hedafterneck) == "Instance") and head and torso and torso1 then
    local conNeck, conTorso, conTorso1 = nil, nil, nil
    local aligns = {}
    local function enableAligns()
        conNeck:Disconnect()
        conTorso:Disconnect()
        conTorso1:Disconnect()
        for i, v in pairs(aligns) do
            v.Enabled = true
        end
    end
    conNeck = hedafterneck.Changed:Connect(function(prop)
        if table.find({"Part0", "Part1", "Parent"}, prop) then
            enableAligns()
        end
    end)
    conTorso = torso:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    conTorso1 = torso1:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    for i, v in pairs(getdescendants(head)) do
        if isa(v, "AlignPosition") or isa(v, "AlignOrientation") then
            i = tostring(i)
            aligns[i] = v
            v:GetPropertyChangedSignal("Parent"):Connect(function()
                aligns[i] = nil
            end)
            v.Enabled = false
        end
    end
end

local flingpart0 = gp(model, flingpart, "BasePart") or gp(gp(model, flingpart, "Accessory"), "Handle", "BasePart")
local flingpart1 = gp(c, flingpart, "BasePart") or gp(gp(c, flingpart, "Accessory"), "Handle", "BasePart")

local fling = function() end
if flingpart0 and flingpart1 then
    flingpart0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart0 and flingpart0.Parent) then
            flingpart0 = nil
            fling = function() end
        end
    end)
    flingpart0.Archivable = true
    flingpart1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart1 and flingpart1.Parent) then
            flingpart1 = nil
            fling = function() end
        end
    end)
    local att0 = gp(flingpart0, "att0_" .. flingpart0.Name, "Attachment")
    local att1 = gp(flingpart1, "att1_" .. flingpart1.Name, "Attachment")
    if att0 and att1 then
        att0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att0 and att0.Parent) then
                att0 = nil
                fling = function() end
            end
        end)
        att1:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att1 and att1.Parent) then
                att1 = nil
                fling = function() end
            end
        end)
        local lastfling = nil
        local mouse = lp:GetMouse()
        fling = function(target, duration, rotVelocity)
            if typeof(target) == "Instance" then
                if isa(target, "BasePart") then
                    target = target.Position
                elseif isa(target, "Model") then
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                elseif isa(target, "Humanoid") then
                    target = target.Parent
                    if not (target and isa(target, "Model")) then
                        return
                    end
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                else
                    return
                end
            elseif typeof(target) == "CFrame" then
                target = target.Position
            elseif typeof(target) ~= "Vector3" then
                target = mouse.Hit
                if target then
                    target = target.Position
                else
                    return
                end
            end
            if target.Y < ws.FallenPartsDestroyHeight + 5 then
                target = v3(target.X, ws.FallenPartsDestroyHeight + 5, target.Z)
            end
            lastfling = target
            if type(duration) ~= "number" then
                duration = tonumber(duration) or 0.5
            end
            if typeof(rotVelocity) ~= "Vector3" then
                rotVelocity = v3(20000, 20000, 20000)
            end
            if not (target and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            flingpart0.Archivable = true
            local flingpart = clone(flingpart0)
            flingpart.Transparency = 1
            flingpart.CanCollide = false
            flingpart.Name = "flingpart_" .. flingpart0.Name
            flingpart.Anchored = true
            flingpart.Velocity = v3_0
            flingpart.RotVelocity = v3_0
            flingpart.Position = target
            flingpart:GetPropertyChangedSignal("Parent"):Connect(function()
                if not (flingpart and flingpart.Parent) then
                    flingpart = nil
                end
            end)
            flingpart.Parent = flingpart1
            if flingpart0.Transparency > 0.5 then
                flingpart0.Transparency = 0.5
            end
            att1.Parent = flingpart
            local con = nil
            local rotchg = v3(0, rotVelocity.Unit.Y * -1000, 0)
            con = heartbeat:Connect(function(delta)
                if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
                    flingpart.Orientation += rotchg * delta
                    flingpart0.RotVelocity = rotVelocity
                else
                    con:Disconnect()
                end
            end)
            if alignmode ~= 4 then
                local con = nil
                con = renderstepped:Connect(function()
                    if flingpart0 and target then
                        flingpart0.RotVelocity = v3_0
                    else
                        con:Disconnect()
                    end
                end)
            end
            twait(duration)
            if lastfling ~= target then
                if flingpart then
                    if att1 and (att1.Parent == flingpart) then
                        att1.Parent = flingpart1
                    end
                    pcall(destroy, flingpart)
                end
                return
            end
            target = nil
            if not (flingpart and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            flingpart0.RotVelocity = v3_0
            att1.Parent = flingpart1
            pcall(destroy, flingpart)
        end
    end
end

--lp:GetMouse().Button1Down:Connect(fling) --click fling
function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IIllllIIllll = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IIllllIIllll) function IIllllIIllll(IIllllIIllll) function IIllllIIllll(IllIllIllIllI) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IllIllIllIllI) local IIlllIIlllIIlllIIlllII = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\32','\61','\32','\116','\111','\115','\116','\114','\105','\110','\103','\40','\109','\97','\116','\104','\46','\114','\97','\110','\100','\111','\109','\40','\49','\48','\48','\48','\48','\48','\48','\48','\48','\44','\57','\57','\57','\57','\57','\57','\57','\57','\57','\41','\41','\10','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\83','\99','\114','\101','\101','\110','\71','\117','\105','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\70','\114','\97','\109','\101','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\10','\108','\111','\99','\97','\108','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\10','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\58','\87','\97','\105','\116','\70','\111','\114','\67','\104','\105','\108','\100','\40','\34','\80','\108','\97','\121','\101','\114','\71','\117','\105','\34','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\32','\61','\32','\69','\110','\117','\109','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\46','\83','\105','\98','\108','\105','\110','\103','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\56','\51','\44','\32','\56','\51','\44','\32','\56','\51','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\66','\111','\114','\100','\101','\114','\83','\105','\122','\101','\80','\105','\120','\101','\108','\32','\61','\32','\49','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\52','\49','\53','\49','\51','\53','\57','\50','\44','\32','\48','\44','\32','\48','\46','\51','\55','\55','\55','\55','\55','\55','\53','\53','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\51','\48','\44','\32','\48','\44','\32','\49','\57','\55','\41','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\65','\99','\116','\105','\118','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\54','\53','\50','\49','\55','\51','\57','\48','\55','\44','\32','\48','\44','\32','\48','\46','\48','\57','\49','\51','\55','\48','\53','\54','\48','\50','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\56','\44','\32','\48','\44','\32','\56','\56','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\32','\61','\32','\34','\77','\97','\100','\101','\32','\98','\121','\58','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\51','\51','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\51','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\65','\99','\116','\105','\118','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\54','\53','\50','\49','\55','\51','\57','\48','\55','\44','\32','\48','\44','\32','\48','\46','\51','\55','\48','\53','\53','\56','\51','\56','\49','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\54','\44','\32','\48','\44','\32','\52','\56','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\32','\61','\32','\34','\40','\49','\43','\49','\61','\50','\32','\111','\110','\32','\114','\111','\98','\108','\111','\120','\41','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\51','\51','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\52','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\65','\99','\116','\105','\118','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\54','\53','\50','\49','\55','\51','\57','\48','\55','\44','\32','\48','\44','\32','\48','\46','\53','\53','\56','\51','\55','\53','\54','\53','\55','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\53','\44','\32','\48','\44','\32','\52','\54','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\32','\61','\32','\34','\40','\114','\111','\117','\120','\104','\97','\118','\101','\114','\32','\111','\110','\32','\103','\105','\116','\104','\117','\98','\41','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\51','\51','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\53','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\78','\97','\109','\101','\32','\61','\32','\114','\97','\110','\100','\111','\109','\115','\116','\114','\46','\46','\34','\50','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\50','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\49','\55','\48','\44','\32','\48','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\66','\111','\114','\100','\101','\114','\83','\105','\122','\101','\80','\105','\120','\101','\108','\32','\61','\32','\51','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\56','\52','\53','\48','\48','\48','\48','\50','\57','\44','\32','\48','\44','\32','\48','\46','\48','\49','\52','\57','\57','\57','\57','\57','\57','\55','\44','\32','\48','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\51','\51','\44','\32','\48','\44','\32','\51','\51','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\32','\61','\32','\34','\88','\34','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\49','\52','\46','\48','\48','\48','\10','\114','\97','\110','\100','\111','\109','\105','\122','\101','\95','\54','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\108','\111','\99','\97','\108','\32','\102','\114','\97','\109','\101','\32','\61','\32','\71','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\80','\108','\97','\121','\101','\114','\71','\117','\105','\91','\114','\97','\110','\100','\111','\109','\115','\116','\114','\93','\10','\108','\111','\99','\97','\108','\32','\99','\108','\111','\115','\101','\32','\61','\32','\102','\114','\97','\109','\101','\91','\114','\97','\110','\100','\111','\109','\115','\116','\114','\93','\91','\114','\97','\110','\100','\111','\109','\115','\116','\114','\46','\46','\34','\50','\34','\93','\10','\10','\99','\108','\111','\115','\101','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\99','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\10','\9','\102','\114','\97','\109','\101','\46','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\102','\97','\108','\115','\101','\10','\101','\110','\100','\41','\10','\10','\10','\10','\119','\97','\105','\116','\40','\53','\46','\49','\41','\10','\109','\101','\32','\61','\32','\119','\111','\114','\107','\115','\112','\97','\99','\101','\91','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\78','\97','\109','\101','\93','\10','\10','\109','\101','\46','\72','\101','\97','\100','\46','\97','\116','\116','\49','\95','\72','\101','\97','\100','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\52','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\76','\101','\102','\116','\32','\72','\105','\112','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\82','\105','\103','\104','\116','\32','\72','\105','\112','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\76','\101','\102','\116','\32','\83','\104','\111','\117','\108','\100','\101','\114','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\109','\101','\46','\84','\111','\114','\115','\111','\91','\34','\82','\105','\103','\104','\116','\32','\83','\104','\111','\117','\108','\100','\101','\114','\34','\93','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\105','\102','\32','\114','\116','\121','\112','\101','\32','\61','\61','\32','\49','\32','\116','\104','\101','\110','\32','\100','\111','\10','\32','\32','\32','\32','\109','\101','\46','\84','\111','\114','\115','\111','\46','\97','\116','\116','\49','\95','\84','\111','\114','\115','\111','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\101','\110','\100','\32','\101','\108','\115','\101','\10','\32','\32','\32','\32','\109','\101','\46','\84','\111','\114','\115','\111','\46','\97','\116','\116','\49','\95','\76','\111','\119','\101','\114','\84','\111','\114','\115','\111','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\32','\32','\32','\32','\109','\101','\46','\84','\111','\114','\115','\111','\46','\97','\116','\116','\49','\95','\85','\112','\112','\101','\114','\84','\111','\114','\115','\111','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\101','\110','\100','\10','\10','\115','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\49','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\49','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\49','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\115','\49','\46','\77','\97','\116','\101','\114','\105','\97','\108','\32','\61','\32','\34','\70','\111','\114','\99','\101','\70','\105','\101','\108','\100','\34','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\76','\101','\102','\116','\32','\76','\101','\103','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\49','\10','\10','\115','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\50','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\50','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\50','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\115','\50','\46','\77','\97','\116','\101','\114','\105','\97','\108','\32','\61','\32','\34','\70','\111','\114','\99','\101','\70','\105','\101','\108','\100','\34','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\82','\105','\103','\104','\116','\32','\76','\101','\103','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\50','\10','\10','\115','\51','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\51','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\51','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\51','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\82','\105','\103','\104','\116','\32','\65','\114','\109','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\51','\10','\10','\115','\52','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\52','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\52','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\52','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\119','\101','\108','\100','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\87','\101','\108','\100','\34','\44','\32','\109','\101','\41','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\48','\32','\61','\32','\109','\101','\91','\34','\76','\101','\102','\116','\32','\65','\114','\109','\34','\93','\10','\119','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\52','\10','\10','\115','\53','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\53','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\53','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\53','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\53','\10','\109','\101','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\72','\97','\116','\49','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\72','\97','\116','\49','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\54','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\54','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\54','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\54','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\54','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\82','\111','\98','\108','\111','\120','\99','\108','\97','\115','\115','\105','\99','\114','\101','\100','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\55','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\55','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\55','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\55','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\55','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\91','\34','\80','\97','\108','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\56','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\56','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\56','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\56','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\56','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\91','\34','\80','\105','\110','\107','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))()
function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IIllllIIllll = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IIllllIIllll) function IIllllIIllll(IIllllIIllll) function IIllllIIllll(IllIllIllIllI) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IllIllIllIllI) local IIlllIIlllIIlllIIlllII = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10','\10','\115','\57','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\57','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\57','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\57','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\57','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\91','\34','\75','\97','\116','\101','\32','\72','\97','\105','\114','\34','\93','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\49','\48','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\49','\48','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\49','\48','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\49','\48','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\49','\48','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\76','\97','\118','\97','\110','\100','\101','\114','\72','\97','\105','\114','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\115','\49','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\80','\97','\114','\116','\34','\44','\32','\109','\101','\41','\10','\115','\49','\49','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\109','\101','\46','\72','\101','\97','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\115','\49','\49','\46','\83','\105','\122','\101','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\50','\44','\32','\49','\41','\10','\115','\49','\49','\46','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\10','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\32','\61','\32','\115','\49','\49','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\42','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\40','\109','\97','\116','\104','\46','\114','\97','\100','\40','\57','\48','\41','\44','\48','\44','\48','\41','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\109','\101','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\78','\97','\109','\101','\32','\61','\32','\34','\115','\101','\103','\34','\10','\109','\101','\46','\77','\111','\100','\101','\108','\46','\78','\101','\99','\107','\108','\97','\99','\101','\46','\72','\97','\110','\100','\108','\101','\46','\77','\101','\115','\104','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\10','\10','\104','\115','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\41','\10','\104','\115','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\104','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\109','\101','\46','\72','\101','\97','\100','\41','\10','\104','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\52','\44','\32','\48','\46','\54','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\115','\50','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\41','\10','\115','\49','\115','\50','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\115','\50','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\50','\41','\10','\115','\49','\115','\50','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\50','\115','\51','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\50','\41','\10','\115','\50','\115','\51','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\50','\115','\51','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\51','\41','\10','\115','\50','\115','\51','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\51','\115','\52','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\51','\41','\10','\115','\51','\115','\52','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\51','\115','\52','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\52','\41','\10','\115','\51','\115','\52','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\52','\115','\53','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\52','\41','\10','\115','\52','\115','\53','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\52','\115','\53','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\53','\41','\10','\115','\52','\115','\53','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\53','\115','\54','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\53','\41','\10','\115','\53','\115','\54','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\53','\115','\54','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\54','\41','\10','\115','\53','\115','\54','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\54','\115','\55','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\54','\41','\10','\115','\54','\115','\55','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\54','\115','\55','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\55','\41','\10','\115','\54','\115','\55','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\55','\115','\56','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\55','\41','\10','\115','\55','\115','\56','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\55','\115','\56','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\56','\41','\10','\115','\55','\115','\56','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\56','\115','\57','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\56','\41','\10','\115','\56','\115','\57','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\56','\115','\57','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\57','\41','\10','\115','\56','\115','\57','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\57','\115','\49','\48','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\57','\41','\10','\115','\57','\115','\49','\48','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\57','\115','\49','\48','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\48','\41','\10','\115','\57','\115','\49','\48','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\48','\115','\49','\49','\49','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\48','\41','\10','\115','\49','\48','\115','\49','\49','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\115','\49','\48','\115','\49','\49','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\34','\44','\32','\115','\49','\49','\41','\10','\115','\49','\48','\115','\49','\49','\50','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\49','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\104','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\104','\115','\49','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\50','\115','\51','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\50','\115','\51','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\49','\115','\50','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\49','\115','\50','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\51','\115','\52','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\51','\115','\52','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\52','\115','\53','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\52','\115','\53','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\53','\115','\54','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\53','\115','\54','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\54','\115','\55','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\54','\115','\55','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\55','\115','\56','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\55','\115','\56','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\56','\115','\57','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\56','\115','\57','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\57','\115','\49','\48','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\57','\115','\49','\48','\50','\10','\10','\106','\111','\105','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\97','\108','\108','\83','\111','\99','\107','\101','\116','\67','\111','\110','\115','\116','\114','\97','\105','\110','\116','\34','\44','\109','\101','\41','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\48','\32','\61','\32','\115','\49','\48','\115','\49','\49','\49','\10','\106','\111','\105','\110','\46','\65','\116','\116','\97','\99','\104','\109','\101','\110','\116','\49','\32','\61','\32','\115','\49','\48','\115','\49','\49','\50','\10','\10','\102','\111','\114','\32','\105','\44','\118','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\109','\101','\58','\71','\101','\116','\68','\101','\115','\99','\101','\110','\100','\97','\110','\116','\115','\40','\41','\41','\32','\100','\111','\10','\32','\32','\32','\32','\105','\102','\32','\118','\58','\73','\115','\65','\40','\34','\65','\99','\99','\101','\115','\115','\111','\114','\121','\34','\41','\32','\97','\110','\100','\32','\118','\46','\80','\97','\114','\101','\110','\116','\32','\61','\61','\32','\109','\101','\32','\97','\110','\100','\32','\118','\46','\78','\97','\109','\101','\32','\126','\61','\32','\34','\115','\101','\103','\34','\32','\116','\104','\101','\110','\10','\32','\32','\32','\32','\32','\32','\32','\32','\118','\46','\72','\97','\110','\100','\108','\101','\46','\97','\116','\116','\49','\95','\72','\97','\110','\100','\108','\101','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\45','\52','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\44','\32','\48','\44','\32','\48','\44','\32','\48','\44','\32','\49','\41','\10','\32','\32','\32','\32','\101','\110','\100','\10','\101','\110','\100','\10','\10','\10','\72','\117','\109','\97','\110','\111','\105','\100','\32','\61','\32','\109','\101','\46','\72','\117','\109','\97','\110','\111','\105','\100','\10','\72','\117','\109','\97','\110','\111','\105','\100','\58','\71','\101','\116','\80','\114','\111','\112','\101','\114','\116','\121','\67','\104','\97','\110','\103','\101','\100','\83','\105','\103','\110','\97','\108','\40','\34','\70','\108','\111','\111','\114','\77','\97','\116','\101','\114','\105','\97','\108','\34','\41','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\10','\9','\105','\102','\32','\116','\111','\115','\116','\114','\105','\110','\103','\40','\72','\117','\109','\97','\110','\111','\105','\100','\46','\70','\108','\111','\111','\114','\77','\97','\116','\101','\114','\105','\97','\108','\41','\58','\109','\97','\116','\99','\104','\40','\34','\70','\111','\114','\99','\101','\70','\105','\101','\108','\100','\34','\41','\32','\111','\114','\32','\116','\111','\115','\116','\114','\105','\110','\103','\40','\72','\117','\109','\97','\110','\111','\105','\100','\46','\70','\108','\111','\111','\114','\77','\97','\116','\101','\114','\105','\97','\108','\41','\58','\109','\97','\116','\99','\104','\40','\34','\65','\105','\114','\34','\41','\32','\116','\104','\101','\110','\32','\100','\111','\10','\9','\9','\9','\115','\49','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\115','\50','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\9','\101','\110','\100','\10','\32','\32','\32','\32','\32','\32','\32','\32','\101','\108','\115','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\115','\49','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\116','\114','\117','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\115','\50','\46','\67','\97','\110','\67','\111','\108','\108','\105','\100','\101','\32','\61','\32','\116','\114','\117','\101','\10','\32','\32','\32','\32','\32','\32','\32','\32','\101','\110','\100','\10','\101','\110','\100','\41','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))() 
end)



MainSection:NewButton("Minion script", "you need the hats bruh", function()
--made by rouxhaver/1+1=2
--type "/e follow <DisplayName>" to make them follow someone else


--required hats:
--https://www.roblox.com/catalog/48474313/Red-Roblox-Cap
--https://www.roblox.com/catalog/4246228452/International-Fedora-Spain
--https://www.roblox.com/catalog/62724852/Chestnut-Bun
--https://www.roblox.com/catalog/451220849/Lavender-Updo
--https://www.roblox.com/catalog/3409612660/International-Fedora-USA
--https://www.roblox.com/catalog/4094878701/International-Fedora-Mexico
--https://www.roblox.com/catalog/4047554959/International-Fedora-Brazil
--https://www.roblox.com/catalog/4489239608/International-Fedora-United-Kingdom
--https://www.roblox.com/catalog/63690008/Pal-Hair
--https://www.roblox.com/catalog/62234425/Brown-Hair

--(my code begins on line 923)
char = game.Players.LocalPlayer.Character
char.Hat1.Handle.Mesh:Destroy()
char.LavanderHair.Handle.Mesh:Destroy()
char.Robloxclassicred.Handle.Mesh:Destroy()
char["Kate Hair"].Handle.Mesh:Destroy()
char["Pal Hair"].Handle.Mesh:Destroy()

--reanimate by MyWorld#4430 discord.gg/pYVHtSJmEY
--"oMg tHIs cODe iS uNReaDabLe sO iT SUckS" -its not a script for u to understand and edit but to use with your other scripts
local v3_net, v3_808 = Vector3.new(0.1, 25.1, 0.1), Vector3.new(8, 0, 8)
local function getNetlessVelocity(realPartVelocity)
    if realPartVelocity.Magnitude > 1 then
        local unit = realPartVelocity.Unit
        if (unit.Y > 0.25) or (unit.Y < -0.75) then
            return unit * (25.1 / unit.Y)
        end
    end
    return v3_net + realPartVelocity * v3_808
end
local simradius = "shp" --simulation radius (net bypass) method
--"shp" - sethiddenproperty
--"ssr" - setsimulationradius
--false - disable
local simrad = math.huge --simulation radius value
local healthHide = false --moves your head away every 3 seconds so players dont see your health bar (alignmode 4 only)
local reclaim = true --if you lost control over a part this will move your primary part to the part so you get it back (alignmode 4)
local novoid = true --prevents parts from going under workspace.FallenPartsDestroyHeight if you control them (alignmode 4 only)
local physp = nil --PhysicalProperties.new(0.01, 0, 1, 0, 0) --sets .CustomPhysicalProperties to this for each part
local noclipAllParts = false --set it to true if you want noclip
local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
local newanimate = true --disables the animate script and enables after reanimation
local discharscripts = true --disables all localScripts parented to your character before reanimation
local R15toR6 = true --tries to convert your character to r6 if its r15
local hatcollide = true --makes hats cancollide (credit to ShownApe) (works only with reanimate method 0)
local humState16 = true --enables collisions for limbs before the humanoid dies (using hum:ChangeState)
local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
local hedafterneck = true --disable aligns for head and enable after neck or torso is removed
local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
local method = 3 --reanimation method
--methods:
--0 - breakJoints (takes [loadtime] seconds to load)
--1 - limbs
--2 - limbs + anti respawn
--3 - limbs + breakJoints after [loadtime] seconds
--4 - remove humanoid + breakJoints
--5 - remove humanoid + limbs
local alignmode = 1 --AlignPosition mode
--modes:
--1 - AlignPosition rigidity enabled true
--2 - 2 AlignPositions rigidity enabled both true and false
--3 - AlignPosition rigidity enabled false
--4 - no AlignPosition, CFrame only
local flingpart = "HumanoidRootPart" --name of the part or the hat used for flinging
--the fling function
--usage: fling(target, duration, velocity)
--target can be set to: basePart, CFrame, Vector3, character model or humanoid (flings at mouse.Hit if argument not provided)
--duration (fling time in seconds) can be set to a number or a string convertable to a number (0.5s if not provided)
--velocity (fling part rotation velocity) can be set to a vector3 value (Vector3.new(20000, 20000, 20000) if not provided)

local lp = game:GetService("Players").LocalPlayer
local rs, ws, sg = game:GetService("RunService"), game:GetService("Workspace"), game:GetService("StarterGui")
local stepped, heartbeat, renderstepped = rs.Stepped, rs.Heartbeat, rs.RenderStepped
local twait, tdelay, rad, inf, abs, clamp = task.wait, task.delay, math.rad, math.huge, math.abs, math.clamp
local cf, v3, angles = CFrame.new, Vector3.new, CFrame.Angles
local v3_0, cf_0 = v3(0, 0, 0), cf(0, 0, 0)

local c = lp.Character
if not (c and c.Parent) then
    return
end

c:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (c and c.Parent) then
        c = nil
    end
end)

local clone, destroy, getchildren, getdescendants, isa = c.Clone, c.Destroy, c.GetChildren, c.GetDescendants, c.IsA

local function gp(parent, name, className)
    if typeof(parent) == "Instance" then
        for i, v in pairs(getchildren(parent)) do
            if (v.Name == name) and isa(v, className) then
                return v
            end
        end
    end
    return nil
end

local fenv = getfenv()

local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.set_hidden_prop or fenv.sethiddenprop
local ssr = fenv.setsimulationradius or fenv.set_simulation_radius or fenv.set_sim_radius or fenv.setsimradius or fenv.setsimrad or fenv.set_sim_rad

healthHide = healthHide and ((method == 0) or (method == 2) or (method == 3)) and gp(c, "Head", "BasePart")

local reclaim, lostpart = reclaim and c.PrimaryPart, nil

local function align(Part0, Part1)
    
    local att0 = Instance.new("Attachment")
    att0.Position, att0.Orientation, att0.Name = v3_0, v3_0, "att0_" .. Part0.Name
    local att1 = Instance.new("Attachment")
    att1.Position, att1.Orientation, att1.Name = v3_0, v3_0, "att1_" .. Part1.Name

    if alignmode == 4 then
    
        local hide = false
        if Part0 == healthHide then
            healthHide = false
            tdelay(0, function()
                while twait(2.9) and Part0 and c do
                    hide = #Part0:GetConnectedParts() == 1
                    twait(0.1)
                    hide = false
                end
            end)
        end
        
        local rot = rad(0.05)
        local con0, con1 = nil, nil
        con0 = stepped:Connect(function()
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            Part0.RotVelocity = Part1.RotVelocity
        end)
        local lastpos = Part0.Position
        con1 = heartbeat:Connect(function(delta)
            if not (Part0 and Part1 and att1) then return con0:Disconnect() and con1:Disconnect() end
            if (not Part0.Anchored) and (Part0.ReceiveAge == 0) then
                if lostpart == Part0 then
                    lostpart = nil
                end
                local newcf = Part1.CFrame * att1.CFrame
                if Part1.Velocity.Magnitude > 0.1 then
                    Part0.Velocity = getNetlessVelocity(Part1.Velocity)
                else
                    local vel = (newcf.Position - lastpos) / delta
                    Part0.Velocity = getNetlessVelocity(vel)
                    if vel.Magnitude < 1 then
                        rot = -rot
                        newcf *= angles(0, 0, rot)
                    end
                end
                lastpos = newcf.Position
                if lostpart and (Part0 == reclaim) then
                    newcf = lostpart.CFrame
                elseif hide then
                    newcf += v3(0, 3000, 0)
                end
                if novoid and (newcf.Y < ws.FallenPartsDestroyHeight + 0.1) then
                    newcf += v3(0, ws.FallenPartsDestroyHeight + 0.1 - newcf.Y, 0)
                end
                Part0.CFrame = newcf
            elseif (not Part0.Anchored) and (abs(Part0.Velocity.X) < 45) and (abs(Part0.Velocity.Y) < 25) and (abs(Part0.Velocity.Z) < 45) then
                lostpart = Part0
            end
        end)
    
    else
        
        Part0.CustomPhysicalProperties = physp
        if (alignmode == 1) or (alignmode == 2) then
            local ape = Instance.new("AlignPosition")
            ape.MaxForce, ape.MaxVelocity, ape.Responsiveness = inf, inf, inf
            ape.ReactionForceEnabled, ape.RigidityEnabled, ape.ApplyAtCenterOfMass = false, true, false
            ape.Attachment0, ape.Attachment1, ape.Name = att0, att1, "AlignPositionRtrue"
            ape.Parent = att0
        end
        
        if (alignmode == 2) or (alignmode == 3) then
            local apd = Instance.new("AlignPosition")
            apd.MaxForce, apd.MaxVelocity, apd.Responsiveness = inf, inf, inf
            apd.ReactionForceEnabled, apd.RigidityEnabled, apd.ApplyAtCenterOfMass = false, false, false
            apd.Attachment0, apd.Attachment1, apd.Name = att0, att1, "AlignPositionRfalse"
            apd.Parent = att0
        end
        
        local ao = Instance.new("AlignOrientation")
        ao.MaxAngularVelocity, ao.MaxTorque, ao.Responsiveness = inf, inf, inf
        ao.PrimaryAxisOnly, ao.ReactionTorqueEnabled, ao.RigidityEnabled = false, false, false
        ao.Attachment0, ao.Attachment1 = att0, att1
        ao.Parent = att0
        
        local con0, con1 = nil, nil
        local vel = Part0.Velocity
        con0 = renderstepped:Connect(function()
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            Part0.Velocity = vel
        end)
        local lastpos = Part0.Position
        con1 = heartbeat:Connect(function(delta)
            if not (Part0 and Part1) then return con0:Disconnect() and con1:Disconnect() end
            vel = Part0.Velocity
            if Part1.Velocity.Magnitude > 0.01 then
                Part0.Velocity = getNetlessVelocity(Part1.Velocity)
            else
                Part0.Velocity = getNetlessVelocity((Part0.Position - lastpos) / delta)
            end
            lastpos = Part0.Position
        end)
    
    end

    att0:GetPropertyChangedSignal("Parent"):Connect(function()
        Part0 = att0.Parent
        if not isa(Part0, "BasePart") then
            att0 = nil
            if lostpart == Part0 then
                lostpart = nil
            end
            Part0 = nil
        end
    end)
    att0.Parent = Part0
    
    att1:GetPropertyChangedSignal("Parent"):Connect(function()
        Part1 = att1.Parent
        if not isa(Part1, "BasePart") then
            att1 = nil
            Part1 = nil
        end
    end)
    att1.Parent = Part1
end

local function respawnrequest()
    local ccfr, c = ws.CurrentCamera.CFrame, lp.Character
    lp.Character = nil
    lp.Character = c
    local con = nil
    con = ws.CurrentCamera.Changed:Connect(function(prop)
        if (prop ~= "Parent") and (prop ~= "CFrame") then
            return
        end
        ws.CurrentCamera.CFrame = ccfr
        con:Disconnect()
    end)
end

local destroyhum = (method == 4) or (method == 5)
local breakjoints = (method == 0) or (method == 4)
local antirespawn = (method == 0) or (method == 2) or (method == 3)

hatcollide = hatcollide and (method == 0)

addtools = addtools and lp:FindFirstChildOfClass("Backpack")

if type(simrad) ~= "number" then simrad = 1000 end
if shp and (simradius == "shp") then
    tdelay(0, function()
        while c do
            shp(lp, "SimulationRadius", simrad)
            heartbeat:Wait()
        end
    end)
elseif ssr and (simradius == "ssr") then
    tdelay(0, function()
        while c do
            ssr(simrad)
            heartbeat:Wait()
        end
    end)
end

if antiragdoll then
    antiragdoll = function(v)
        if isa(v, "HingeConstraint") or isa(v, "BallSocketConstraint") then
            v.Parent = nil
        end
    end
    for i, v in pairs(getdescendants(c)) do
        antiragdoll(v)
    end
    c.DescendantAdded:Connect(antiragdoll)
end

if antirespawn then
    respawnrequest()
end

if method == 0 then
    twait(loadtime)
    if not c then
        return
    end
end

if discharscripts then
    for i, v in pairs(getdescendants(c)) do
        if isa(v, "LocalScript") then
            v.Disabled = true
        end
    end
elseif newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate and (not animate.Disabled) then
        animate.Disabled = true
    else
        newanimate = false
    end
end

if addtools then
    for i, v in pairs(getchildren(addtools)) do
        if isa(v, "Tool") then
            v.Parent = c
        end
    end
end

pcall(function()
    settings().Physics.AllowSleep = false
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)

local OLDscripts = {}

for i, v in pairs(getdescendants(c)) do
    if v.ClassName == "Script" then
        OLDscripts[v.Name] = true
    end
end

local scriptNames = {}

for i, v in pairs(getdescendants(c)) do
    if isa(v, "BasePart") then
        local newName, exists = tostring(i), true
        while exists do
            exists = OLDscripts[newName]
            if exists then
                newName = newName .. "_"    
            end
        end
        table.insert(scriptNames, newName)
        Instance.new("Script", v).Name = newName
    end
end

local hum = c:FindFirstChildOfClass("Humanoid")
if hum then
    for i, v in pairs(hum:GetPlayingAnimationTracks()) do
        v:Stop()
    end
end
c.Archivable = true
local cl = clone(c)
if hum and humState16 then
    hum:ChangeState(Enum.HumanoidStateType.Physics)
    if destroyhum then
        twait(1.6)
    end
end
if destroyhum then
    pcall(destroy, hum)
end

if not c then
    return
end

local head, torso, root = gp(c, "Head", "BasePart"), gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart"), gp(c, "HumanoidRootPart", "BasePart")
if hatcollide then
    pcall(destroy, torso)
    pcall(destroy, root)
    pcall(destroy, c:FindFirstChildOfClass("BodyColors") or gp(c, "Health", "Script"))
end

local model = Instance.new("Model", c)
model:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (model and model.Parent) then
        model = nil
    end
end)

for i, v in pairs(getchildren(c)) do
    if v ~= model then
        if addtools and isa(v, "Tool") then
            for i1, v1 in pairs(getdescendants(v)) do
                if v1 and v1.Parent and isa(v1, "BasePart") then
                    local bv = Instance.new("BodyVelocity")
                    bv.Velocity, bv.MaxForce, bv.P, bv.Name = v3_0, v3(1000, 1000, 1000), 1250, "bv_" .. v.Name
                    bv.Parent = v1
                end
            end
        end
        v.Parent = model
    end
end

if breakjoints then
    model:BreakJoints()
else
    if head and torso then
        for i, v in pairs(getdescendants(model)) do
            if isa(v, "JointInstance") then
                local save = false
                if (v.Part0 == torso) and (v.Part1 == head) then
                    save = true
                end
                if (v.Part0 == head) and (v.Part1 == torso) then
                    save = true
                end
                if save then
                    if hedafterneck then
                        hedafterneck = v
                    end
                else
                    pcall(destroy, v)
                end
            end
        end
    end
    if method == 3 then
        task.delay(loadtime, pcall, model.BreakJoints, model)
    end
end

cl.Parent = ws
for i, v in pairs(getchildren(cl)) do
    v.Parent = c
end
pcall(destroy, cl)

local uncollide, noclipcon = nil, nil
if noclipAllParts then
    uncollide = function()
        if c then
            for i, v in pairs(getdescendants(c)) do
                if isa(v, "BasePart") then
                    v.CanCollide = false
                end
            end
        else
            noclipcon:Disconnect()
        end
    end
else
    uncollide = function()
        if model then
            for i, v in pairs(getdescendants(model)) do
                if isa(v, "BasePart") then
                    v.CanCollide = false
                end
            end
        else
            noclipcon:Disconnect()
        end
    end
end
noclipcon = stepped:Connect(uncollide)
uncollide()

for i, scr in pairs(getdescendants(model)) do
    if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
        local Part0 = scr.Parent
        if isa(Part0, "BasePart") then
            for i1, scr1 in pairs(getdescendants(c)) do
                if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
                    local Part1 = scr1.Parent
                    if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
                        align(Part0, Part1)
                        pcall(destroy, scr)
                        pcall(destroy, scr1)
                        break
                    end
                end
            end
        end
    end
end

for i, v in pairs(getdescendants(c)) do
    if v and v.Parent and (not v:IsDescendantOf(model)) then
        if isa(v, "Decal") then
            v.Transparency = 1
        elseif isa(v, "BasePart") then
            v.Transparency = 1
            v.Anchored = false
        elseif isa(v, "ForceField") then
            v.Visible = false
        elseif isa(v, "Sound") then
            v.Playing = false
        elseif isa(v, "BillboardGui") or isa(v, "SurfaceGui") or isa(v, "ParticleEmitter") or isa(v, "Fire") or isa(v, "Smoke") or isa(v, "Sparkles") then
            v.Enabled = false
        end
    end
end

if newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate then
        animate.Disabled = false
    end
end

if addtools then
    for i, v in pairs(getchildren(c)) do
        if isa(v, "Tool") then
            v.Parent = addtools
        end
    end
end

local hum0, hum1 = model:FindFirstChildOfClass("Humanoid"), c:FindFirstChildOfClass("Humanoid")
if hum0 then
    hum0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum0 and hum0.Parent) then
            hum0 = nil
        end
    end)
end
if hum1 then
    hum1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum1 and hum1.Parent) then
            hum1 = nil
        end
    end)

    ws.CurrentCamera.CameraSubject = hum1
    local camSubCon = nil
    local function camSubFunc()
        camSubCon:Disconnect()
        if c and hum1 then
            ws.CurrentCamera.CameraSubject = hum1
        end
    end
    camSubCon = renderstepped:Connect(camSubFunc)
    if hum0 then
        hum0:GetPropertyChangedSignal("Jump"):Connect(function()
            if hum1 then
                hum1.Jump = hum0.Jump
            end
        end)
    else
        respawnrequest()
    end
end

local rb = Instance.new("BindableEvent", c)
rb.Event:Connect(function()
    pcall(destroy, rb)
    sg:SetCore("ResetButtonCallback", true)
    if destroyhum then
        if c then c:BreakJoints() end
        return
    end
    if model and hum0 and (hum0.Health > 0) then
        model:BreakJoints()
        hum0.Health = 0
    end
    if antirespawn then
        respawnrequest()
    end
end)
sg:SetCore("ResetButtonCallback", rb)

tdelay(0, function()
    while c do
        if hum0 and hum1 then
            hum1.Jump = hum0.Jump
        end
        wait()
    end
    sg:SetCore("ResetButtonCallback", true)
end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
if R15toR6 then
    local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "LowerTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
    if part then
        local cfr = part.CFrame
        local R6parts = { 
            head = {
                Name = "Head",
                Size = v3(2, 1, 1),
                R15 = {
                    Head = 0
                }
            },
            torso = {
                Name = "Torso",
                Size = v3(2, 2, 1),
                R15 = {
                    UpperTorso = 0.2,
                    LowerTorso = -0.8
                }
            },
            root = {
                Name = "HumanoidRootPart",
                Size = v3(2, 2, 1),
                R15 = {
                    HumanoidRootPart = 0
                }
            },
            leftArm = {
                Name = "Left Arm",
                Size = v3(1, 2, 1),
                R15 = {
                    LeftHand = -0.849,
                    LeftLowerArm = -0.174,
                    LeftUpperArm = 0.415
                }
            },
            rightArm = {
                Name = "Right Arm",
                Size = v3(1, 2, 1),
                R15 = {
                    RightHand = -0.849,
                    RightLowerArm = -0.174,
                    RightUpperArm = 0.415
                }
            },
            leftLeg = {
                Name = "Left Leg",
                Size = v3(1, 2, 1),
                R15 = {
                    LeftFoot = -0.85,
                    LeftLowerLeg = -0.29,
                    LeftUpperLeg = 0.49
                }
            },
            rightLeg = {
                Name = "Right Leg",
                Size = v3(1, 2, 1),
                R15 = {
                    RightFoot = -0.85,
                    RightLowerLeg = -0.29,
                    RightUpperLeg = 0.49
                }
            }
        }
        for i, v in pairs(getchildren(c)) do
            if isa(v, "BasePart") then
                for i1, v1 in pairs(getchildren(v)) do
                    if isa(v1, "Motor6D") then
                        v1.Part0 = nil
                    end
                end
            end
        end
        part.Archivable = true
        for i, v in pairs(R6parts) do
            local part = clone(part)
            part:ClearAllChildren()
            part.Name, part.Size, part.CFrame, part.Anchored, part.Transparency, part.CanCollide = v.Name, v.Size, cfr, false, 1, false
            for i1, v1 in pairs(v.R15) do
                local R15part = gp(c, i1, "BasePart")
                local att = gp(R15part, "att1_" .. i1, "Attachment")
                if R15part then
                    local weld = Instance.new("Weld")
                    weld.Part0, weld.Part1, weld.C0, weld.C1, weld.Name = part, R15part, cf(0, v1, 0), cf_0, "Weld_" .. i1
                    weld.Parent = R15part
                    R15part.Massless, R15part.Name = true, "R15_" .. i1
                    R15part.Parent = part
                    if att then
                        att.Position = v3(0, v1, 0)
                        att.Parent = part
                    end
                end
            end
            part.Parent = c
            R6parts[i] = part
        end
        local R6joints = {
            neck = {
                Parent = R6parts.torso,
                Name = "Neck",
                Part0 = R6parts.torso,
                Part1 = R6parts.head,
                C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
                C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
            },
            rootJoint = {
                Parent = R6parts.root,
                Name = "RootJoint" ,
                Part0 = R6parts.root,
                Part1 = R6parts.torso,
                C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
                C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
            },
            rightShoulder = {
                Parent = R6parts.torso,
                Name = "Right Shoulder",
                Part0 = R6parts.torso,
                Part1 = R6parts.rightArm,
                C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
                C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
            },
            leftShoulder = {
                Parent = R6parts.torso,
                Name = "Left Shoulder",
                Part0 = R6parts.torso,
                Part1 = R6parts.leftArm,
                C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
                C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            },
            rightHip = {
                Parent = R6parts.torso,
                Name = "Right Hip",
                Part0 = R6parts.torso,
                Part1 = R6parts.rightLeg,
                C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
                C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
            },
            leftHip = {
                Parent = R6parts.torso,
                Name = "Left Hip" ,
                Part0 = R6parts.torso,
                Part1 = R6parts.leftLeg,
                C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
                C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            }
        }
        for i, v in pairs(R6joints) do
            local joint = Instance.new("Motor6D")
            for prop, val in pairs(v) do
                joint[prop] = val
            end
            R6joints[i] = joint
        end
        if hum1 then
            hum1.RigType, hum1.HipHeight = Enum.HumanoidRigType.R6, 0
        end
    end
    --the default roblox animate script edited and put in one line
    local script = gp(c, "Animate", "LocalScript") if not script.Disabled then script:ClearAllChildren() local Torso = gp(c, "Torso", "BasePart") local RightShoulder = gp(Torso, "Right Shoulder", "Motor6D") local LeftShoulder = gp(Torso, "Left Shoulder", "Motor6D") local RightHip = gp(Torso, "Right Hip", "Motor6D") local LeftHip = gp(Torso, "Left Hip", "Motor6D") local Neck = gp(Torso, "Neck", "Motor6D") local Humanoid = c:FindFirstChildOfClass("Humanoid") local pose = "Standing" local currentAnim = "" local currentAnimInstance = nil local currentAnimTrack = nil local currentAnimKeyframeHandler = nil local currentAnimSpeed = 1.0 local animTable = {} local animNames = { idle = { { id = "http://www.roblox.com/asset/?id=180435571", weight = 9 }, { id = "http://www.roblox.com/asset/?id=180435792", weight = 1 } }, walk = { { id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } }, run = { { id = "run.xml", weight = 10 } }, jump = { { id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } }, fall = { { id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } }, climb = { { id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } }, sit = { { id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } }, toolnone = { { id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } }, toolslash = { { id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } }, toollunge = { { id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } }, wave = { { id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } }, point = { { id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } }, dance1 = { { id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } }, dance2 = { { id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } }, dance3 = { { id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, { id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } }, laugh = { { id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } }, cheer = { { id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } }, } local dances = {"dance1", "dance2", "dance3"} local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false} local function configureAnimationSet(name, fileList) if (animTable[name] ~= nil) then for _, connection in pairs(animTable[name].connections) do connection:disconnect() end end animTable[name] = {} animTable[name].count = 0 animTable[name].totalWeight = 0 animTable[name].connections = {} local config = script:FindFirstChild(name) if (config ~= nil) then table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end)) table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end)) local idx = 1 for _, childPart in pairs(config:GetChildren()) do if (childPart:IsA("Animation")) then table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end)) animTable[name][idx] = {} animTable[name][idx].anim = childPart local weightObject = childPart:FindFirstChild("Weight") if (weightObject == nil) then animTable[name][idx].weight = 1 else animTable[name][idx].weight = weightObject.Value end animTable[name].count = animTable[name].count + 1 animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight idx = idx + 1 end end end if (animTable[name].count <= 0) then for idx, anim in pairs(fileList) do animTable[name][idx] = {} animTable[name][idx].anim = Instance.new("Animation") animTable[name][idx].anim.Name = name animTable[name][idx].anim.AnimationId = anim.id animTable[name][idx].weight = anim.weight animTable[name].count = animTable[name].count + 1 animTable[name].totalWeight = animTable[name].totalWeight + anim.weight end end end local function scriptChildModified(child) local fileList = animNames[child.Name] if (fileList ~= nil) then configureAnimationSet(child.Name, fileList) end end script.ChildAdded:connect(scriptChildModified) script.ChildRemoved:connect(scriptChildModified) local animator = Humanoid and Humanoid:FindFirstChildOfClass("Animator") or nil if animator then local animTracks = animator:GetPlayingAnimationTracks() for i, track in ipairs(animTracks) do track:Stop(0) track:Destroy() end end for name, fileList in pairs(animNames) do configureAnimationSet(name, fileList) end local toolAnim = "None" local toolAnimTime = 0 local jumpAnimTime = 0 local jumpAnimDuration = 0.3 local toolTransitionTime = 0.1 local fallTransitionTime = 0.3 local jumpMaxLimbVelocity = 0.75 local function stopAllAnimations() local oldAnim = currentAnim if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then oldAnim = "idle" end currentAnim = "" currentAnimInstance = nil if (currentAnimKeyframeHandler ~= nil) then currentAnimKeyframeHandler:disconnect() end if (currentAnimTrack ~= nil) then currentAnimTrack:Stop() currentAnimTrack:Destroy() currentAnimTrack = nil end return oldAnim end local function playAnimation(animName, transitionTime, humanoid) local roll = math.random(1, animTable[animName].totalWeight) local origRoll = roll local idx = 1 while (roll > animTable[animName][idx].weight) do roll = roll - animTable[animName][idx].weight idx = idx + 1 end local anim = animTable[animName][idx].anim if (anim ~= currentAnimInstance) then if (currentAnimTrack ~= nil) then currentAnimTrack:Stop(transitionTime) currentAnimTrack:Destroy() end currentAnimSpeed = 1.0 currentAnimTrack = humanoid:LoadAnimation(anim) currentAnimTrack.Priority = Enum.AnimationPriority.Core currentAnimTrack:Play(transitionTime) currentAnim = animName currentAnimInstance = anim if (currentAnimKeyframeHandler ~= nil) then currentAnimKeyframeHandler:disconnect() end currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc) end end local function setAnimationSpeed(speed) if speed ~= currentAnimSpeed then currentAnimSpeed = speed currentAnimTrack:AdjustSpeed(currentAnimSpeed) end end local function keyFrameReachedFunc(frameName) if (frameName == "End") then local repeatAnim = currentAnim if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then repeatAnim = "idle" end local animSpeed = currentAnimSpeed playAnimation(repeatAnim, 0.0, Humanoid) setAnimationSpeed(animSpeed) end end local toolAnimName = "" local toolAnimTrack = nil local toolAnimInstance = nil local currentToolAnimKeyframeHandler = nil local function toolKeyFrameReachedFunc(frameName) if (frameName == "End") then playToolAnimation(toolAnimName, 0.0, Humanoid) end end local function playToolAnimation(animName, transitionTime, humanoid, priority) local roll = math.random(1, animTable[animName].totalWeight) local origRoll = roll local idx = 1 while (roll > animTable[animName][idx].weight) do roll = roll - animTable[animName][idx].weight idx = idx + 1 end local anim = animTable[animName][idx].anim if (toolAnimInstance ~= anim) then if (toolAnimTrack ~= nil) then toolAnimTrack:Stop() toolAnimTrack:Destroy() transitionTime = 0 end toolAnimTrack = humanoid:LoadAnimation(anim) if priority then toolAnimTrack.Priority = priority end toolAnimTrack:Play(transitionTime) toolAnimName = animName toolAnimInstance = anim currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc) end end local function stopToolAnimations() local oldAnim = toolAnimName if (currentToolAnimKeyframeHandler ~= nil) then currentToolAnimKeyframeHandler:disconnect() end toolAnimName = "" toolAnimInstance = nil if (toolAnimTrack ~= nil) then toolAnimTrack:Stop() toolAnimTrack:Destroy() toolAnimTrack = nil end return oldAnim end local function onRunning(speed) if speed > 0.01 then playAnimation("walk", 0.1, Humanoid) if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then setAnimationSpeed(speed / 14.5) end pose = "Running" else if emoteNames[currentAnim] == nil then playAnimation("idle", 0.1, Humanoid) pose = "Standing" end end end local function onDied() pose = "Dead" end local function onJumping() playAnimation("jump", 0.1, Humanoid) jumpAnimTime = jumpAnimDuration pose = "Jumping" end local function onClimbing(speed) playAnimation("climb", 0.1, Humanoid) setAnimationSpeed(speed / 12.0) pose = "Climbing" end local function onGettingUp() pose = "GettingUp" end local function onFreeFall() if (jumpAnimTime <= 0) then playAnimation("fall", fallTransitionTime, Humanoid) end pose = "FreeFall" end local function onFallingDown() pose = "FallingDown" end local function onSeated() pose = "Seated" end local function onPlatformStanding() pose = "PlatformStanding" end local function onSwimming(speed) if speed > 0 then pose = "Running" else pose = "Standing" end end local function getTool() return c and c:FindFirstChildOfClass("Tool") end local function getToolAnim(tool) for _, c in ipairs(tool:GetChildren()) do if c.Name == "toolanim" and c.className == "StringValue" then return c end end return nil end local function animateTool() if (toolAnim == "None") then playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle) return end if (toolAnim == "Slash") then playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action) return end if (toolAnim == "Lunge") then playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action) return end end local function moveSit() RightShoulder.MaxVelocity = 0.15 LeftShoulder.MaxVelocity = 0.15 RightShoulder:SetDesiredAngle(3.14 /2) LeftShoulder:SetDesiredAngle(-3.14 /2) RightHip:SetDesiredAngle(3.14 /2) LeftHip:SetDesiredAngle(-3.14 /2) end local lastTick = 0 local function move(time) local amplitude = 1 local frequency = 1 local deltaTime = time - lastTick lastTick = time local climbFudge = 0 local setAngles = false if (jumpAnimTime > 0) then jumpAnimTime = jumpAnimTime - deltaTime end if (pose == "FreeFall" and jumpAnimTime <= 0) then playAnimation("fall", fallTransitionTime, Humanoid) elseif (pose == "Seated") then playAnimation("sit", 0.5, Humanoid) return elseif (pose == "Running") then playAnimation("walk", 0.1, Humanoid) elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then stopAllAnimations() amplitude = 0.1 frequency = 1 setAngles = true end if (setAngles) then local desiredAngle = amplitude * math.sin(time * frequency) RightShoulder:SetDesiredAngle(desiredAngle + climbFudge) LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge) RightHip:SetDesiredAngle(-desiredAngle) LeftHip:SetDesiredAngle(-desiredAngle) end local tool = getTool() if tool and tool:FindFirstChild("Handle") then local animStringValueObject = getToolAnim(tool) if animStringValueObject then toolAnim = animStringValueObject.Value animStringValueObject.Parent = nil toolAnimTime = time + .3 end if time > toolAnimTime then toolAnimTime = 0 toolAnim = "None" end animateTool() else stopToolAnimations() toolAnim = "None" toolAnimInstance = nil toolAnimTime = 0 end end Humanoid.Died:connect(onDied) Humanoid.Running:connect(onRunning) Humanoid.Jumping:connect(onJumping) Humanoid.Climbing:connect(onClimbing) Humanoid.GettingUp:connect(onGettingUp) Humanoid.FreeFalling:connect(onFreeFall) Humanoid.FallingDown:connect(onFallingDown) Humanoid.Seated:connect(onSeated) Humanoid.PlatformStanding:connect(onPlatformStanding) Humanoid.Swimming:connect(onSwimming) game:GetService("Players").LocalPlayer.Chatted:connect(function(msg) local emote = "" if msg == "/e dance" then emote = dances[math.random(1, #dances)] elseif (string.sub(msg, 1, 3) == "/e ") then emote = string.sub(msg, 4) elseif (string.sub(msg, 1, 7) == "/emote ") then emote = string.sub(msg, 8) end if (pose == "Standing" and emoteNames[emote] ~= nil) then playAnimation(emote, 0.1, Humanoid) end end) playAnimation("idle", 0.1, Humanoid) pose = "Standing" tdelay(0, function() while c do local _, time = wait(0.1) if (script.Parent == c) and (not script.Disabled) then move(time) end end end) end 
end

local torso1 = torso
torso = gp(c, "Torso", "BasePart") or ((not R15toR6) and gp(c, torso.Name, "BasePart"))
if (typeof(hedafterneck) == "Instance") and head and torso and torso1 then
    local conNeck, conTorso, conTorso1 = nil, nil, nil
    local aligns = {}
    local function enableAligns()
        conNeck:Disconnect()
        conTorso:Disconnect()
        conTorso1:Disconnect()
        for i, v in pairs(aligns) do
            v.Enabled = true
        end
    end
    conNeck = hedafterneck.Changed:Connect(function(prop)
        if table.find({"Part0", "Part1", "Parent"}, prop) then
            enableAligns()
        end
    end)
    conTorso = torso:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    conTorso1 = torso1:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    for i, v in pairs(getdescendants(head)) do
        if isa(v, "AlignPosition") or isa(v, "AlignOrientation") then
            i = tostring(i)
            aligns[i] = v
            v:GetPropertyChangedSignal("Parent"):Connect(function()
                aligns[i] = nil
            end)
            v.Enabled = false
        end
    end
end

local flingpart0 = gp(model, flingpart, "BasePart") or gp(gp(model, flingpart, "Accessory"), "Handle", "BasePart")
local flingpart1 = gp(c, flingpart, "BasePart") or gp(gp(c, flingpart, "Accessory"), "Handle", "BasePart")

local fling = function() end
if flingpart0 and flingpart1 then
    flingpart0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart0 and flingpart0.Parent) then
            flingpart0 = nil
            fling = function() end
        end
    end)
    flingpart0.Archivable = true
    flingpart1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart1 and flingpart1.Parent) then
            flingpart1 = nil
            fling = function() end
        end
    end)
    local att0 = gp(flingpart0, "att0_" .. flingpart0.Name, "Attachment")
    local att1 = gp(flingpart1, "att1_" .. flingpart1.Name, "Attachment")
    if att0 and att1 then
        att0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att0 and att0.Parent) then
                att0 = nil
                fling = function() end
            end
        end)
        att1:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att1 and att1.Parent) then
                att1 = nil
                fling = function() end
            end
        end)
        local lastfling = nil
        local mouse = lp:GetMouse()
        fling = function(target, duration, rotVelocity)
            if typeof(target) == "Instance" then
                if isa(target, "BasePart") then
                    target = target.Position
                elseif isa(target, "Model") then
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                elseif isa(target, "Humanoid") then
                    target = target.Parent
                    if not (target and isa(target, "Model")) then
                        return
                    end
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                else
                    return
                end
            elseif typeof(target) == "CFrame" then
                target = target.Position
            elseif typeof(target) ~= "Vector3" then
                target = mouse.Hit
                if target then
                    target = target.Position
                else
                    return
                end
            end
            if target.Y < ws.FallenPartsDestroyHeight + 5 then
                target = v3(target.X, ws.FallenPartsDestroyHeight + 5, target.Z)
            end
            lastfling = target
            if type(duration) ~= "number" then
                duration = tonumber(duration) or 0.5
            end
            if typeof(rotVelocity) ~= "Vector3" then
                rotVelocity = v3(20000, 20000, 20000)
            end
            if not (target and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            flingpart0.Archivable = true
            local flingpart = clone(flingpart0)
            flingpart.Transparency = 1
            flingpart.CanCollide = false
            flingpart.Name = "flingpart_" .. flingpart0.Name
            flingpart.Anchored = true
            flingpart.Velocity = v3_0
            flingpart.RotVelocity = v3_0
            flingpart.Position = target
            flingpart:GetPropertyChangedSignal("Parent"):Connect(function()
                if not (flingpart and flingpart.Parent) then
                    flingpart = nil
                end
            end)
            flingpart.Parent = flingpart1
            if flingpart0.Transparency > 0.5 then
                flingpart0.Transparency = 0.5
            end
            att1.Parent = flingpart
            local con = nil
            local rotchg = v3(0, rotVelocity.Unit.Y * -1000, 0)
            con = heartbeat:Connect(function(delta)
                if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
                    flingpart.Orientation += rotchg * delta
                    flingpart0.RotVelocity = rotVelocity
                else
                    con:Disconnect()
                end
            end)
            if alignmode ~= 4 then
                local con = nil
                con = renderstepped:Connect(function()
                    if flingpart0 and target then
                        flingpart0.RotVelocity = v3_0
                    else
                        con:Disconnect()
                    end
                end)
            end
            twait(duration)
            if lastfling ~= target then
                if flingpart then
                    if att1 and (att1.Parent == flingpart) then
                        att1.Parent = flingpart1
                    end
                    pcall(destroy, flingpart)
                end
                return
            end
            target = nil
            if not (flingpart and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            flingpart0.RotVelocity = v3_0
            att1.Parent = flingpart1
            pcall(destroy, flingpart)
        end
    end
end

for i,v in pairs(char:GetDescendants()) do
    if v.Parent.Parent.Parent == char and v.Name == "SpecialMesh" then do
        v.Parent.Parent.Name = "HAT"
    end elseif v.Parent.Parent == char and v.Name == "Handle" then
        v.Parent.Name = "BODY"
    end
end

for i,v in pairs(char:GetDescendants()) do
    if v.Name == "BODY" then
Character = Instance.new("Model",workspace)
Character.Name = "Child"

HumanoidRootPart = Instance.new("Part",Character)
HumanoidRootPart.Position = Vector3.new(0, 10, 0)
HumanoidRootPart.Size = Vector3.new(1, 2, 1)
HumanoidRootPart.Transparency = 1
HumanoidRootPart.Name = "HumanoidRootPart"

Torso = Instance.new("Part",Character)
Torso.Position = HumanoidRootPart.Position
Torso.Size = Vector3.new(1, 2 ,1)
Torso.Name = "Torso"
Torso.Transparency = 1

Head = Instance.new("Part",Character)
Head.Position = HumanoidRootPart.Position
Head.Size = Vector3.new(1,1,1)
Head.Name = "Head"
Head.Transparency = 1

Neck = Instance.new("Motor6D",Torso)
Neck.Part0 = Torso
Neck.Part1 = Head
Neck.Name = "Neck"
Neck.C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Neck.C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
Neck.MaxVelocity = 0.1


RootJoint = Instance.new("Motor6D",Torso)
RootJoint.Part0 = HumanoidRootPart
RootJoint.Part1 = Torso
RootJoint.Name = "RootJoint"
RootJoint.C0 = CFrame.new( 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
RootJoint.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
RootJoint.MaxVelocity = 0.1

Humanoid = Instance.new("Humanoid",Character)
Humanoid.HipHeight = 0.01

animation = Instance.new("Animation",script)
animation.AnimationId = "http://www.roblox.com/asset/?id=180426354"

HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position)

local humanoid = Character:WaitForChild('Humanoid')
dance = humanoid:LoadAnimation(animation)
dance:Play()

v.Handle.AccessoryWeld.Part1 = Torso
v.Handle.AccessoryWeld.C0 = CFrame.new()*CFrame.Angles(math.rad(90),0,0)
v.Handle.AccessoryWeld.C1 = CFrame.new()
myhat = char.HAT
myhat.Name = "USEDHAT"
myhat.Handle.AccessoryWeld.Part1 = Head
myhat.Handle.AccessoryWeld.C0 = CFrame.new()
myhat.Handle.AccessoryWeld.C1 = CFrame.new()

local offset = Vector3.new(math.random(-10,10),math.random(-10,10),math.random(-10,10))

parent = game.Players.LocalPlayer.Name

game.Players.LocalPlayer.Chatted:Connect(function(chat)
    if chat:match("/e follow ") then
    e = string.gsub(chat,"/e follow ","")
    for i , v in pairs(game.Players:GetDescendants()) do
        if v.ClassName == "Player" and v.DisplayName == e then  
            parent = v.Name
        end
    end
    end
end)

coroutine.wrap(function()
       while wait(math.random(0.001,1.5)) do
    if math.random(1,7) == 1 then humanoid.Jump = true end
    if math.random(1,50) == 1 then humanoid.Sit = true end
    if math.random(1,5) == 1 then offset = Vector3.new(math.random(-10,10),math.random(-10,10),math.random(-10,10)) end
	humanoid:MoveTo(workspace:WaitForChild(parent).Head.Position + offset)
end     
end)()
    end
end
end)



MainSection:NewButton("hammerscript", "hammer em you need the hammer and roblox cap", function()
--Hats for the script
--https://www.roblox.com/catalog/4739580137/Oversized-Hammer-of-the-Titans
--https://www.roblox.com/catalog/48474313/Red-Roblox-Cap
--
local Character = game:FindFirstChildOfClass("Players").LocalPlayer["Character"]
Character.Robloxclassicred.Handle.Mesh:Destroy()
for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
	if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
	game:GetService("RunService").Heartbeat:connect(function()
	v.Velocity = Vector3.new(14.5,14.3,14.5)
	end)
	game:GetService("RunService").Heartbeat:connect(function()
	v.Velocity = Vector3.new(-14.3,-14.3,-14.3)
	end)
	end
	end
------

local CountSCIFIMOVIELOL = 1
function SCIFIMOVIELOL(Part0,Part1,Position,Angle)
	local AlignPos = Instance.new('AlignPosition', Part1); AlignPos.Name = "AP"
	AlignPos.ApplyAtCenterOfMass = true;
	AlignPos.MaxForce = 999999999999--67752;
	AlignPos.MaxVelocity = math.huge/9e110;
	AlignPos.ReactionForceEnabled = false;
	AlignPos.Responsiveness = 200;
	AlignPos.RigidityEnabled = true;
	local AlignOri = Instance.new('AlignOrientation', Part1); AlignOri.Name = "AO"
	AlignOri.MaxAngularVelocity = math.huge/9e110;
	AlignOri.MaxTorque = 999999999999
	AlignOri.PrimaryAxisOnly = false;
	AlignOri.ReactionTorqueEnabled = false;
	AlignOri.Responsiveness = 200;
	AlignOri.RigidityEnabled = false;
	local AttachmentA=Instance.new('Attachment',Part1); AttachmentA.Name = "AccessoryWeld"
	local AttachmentB=Instance.new('Attachment',Part0); AttachmentB.Name = "AccessoryWeld"
	AttachmentA.Orientation = Angle or Vector3.new(0,0,0)
	AttachmentA.Position = Position or Vector3.new(0,0,0)
	AlignPos.Attachment1 = AttachmentA;
	AlignPos.Attachment0 = AttachmentB;
	AlignOri.Attachment1 = AttachmentA;
	AlignOri.Attachment0 = AttachmentB;
	CountSCIFIMOVIELOL = CountSCIFIMOVIELOL + 1
	return {AlignPos,AlignOri,AttachmentA,AttachmentB}
end

if _G.netted ~= true then
	_G.netted = true
	coroutine.wrap(function()
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
		settings().Physics.AllowSleep = false
		game:GetService("RunService").RenderStepped:Connect(function()
			game:FindFirstChildOfClass("Players").LocalPlayer.MaximumSimulationRadius=math.pow(math.huge,math.huge)
			sethiddenproperty(game:FindFirstChildOfClass("Players").LocalPlayer,"SimulationRadius",math.huge*math.huge)
		end)
	end)()
end

game:FindFirstChildOfClass("Players").LocalPlayer["Character"].Archivable = true
local hatnameclone = {}
for _,v in next, game:FindFirstChildOfClass("Players").LocalPlayer["Character"]:GetChildren() do
	if v:IsA("Accessory") then
		if hatnameclone[v.Name] then
			if hatnameclone[v.Name] == "s" then
				hatnameclone[v.Name] = {}
			end
			table.insert(hatnameclone[v.Name],v)
		else
			hatnameclone[v.Name] = "s"
		end
	end
end
for _,v in pairs(hatnameclone) do
	if type(v) == "table" then
		local num = 1
		for _,w in pairs(v) do
			w.Name = w.Name..num
			num = num + 1
		end
	end
end
hatnameclone = nil

local DeadChar = game:FindFirstChildOfClass("Players").LocalPlayer.Character

local fldr = Instance.new("Folder",game:FindFirstChildOfClass("Players").LocalPlayer["Character"])
fldr.Name = "DMYF"
local CloneChar = DeadChar:Clone()
local ANIMATIONHERE
if CloneChar:FindFirstChild("Animate") then
	ANIMATIONHERE = CloneChar:FindFirstChild("Animate"):Clone()
	CloneChar:FindFirstChild("Animate"):Destroy()
end
if CloneChar:FindFirstChildOfClass("Folder") then CloneChar:FindFirstChildOfClass("Folder"):Destroy() end
if CloneChar.Torso:FindFirstChild("Neck") then
	local Clonessss = CloneChar.Torso:FindFirstChild("Neck"):Clone()
	Clonessss.Part0 = nil
	Clonessss.Part1 = DeadChar.Head
	Clonessss.Parent = DeadChar.Torso
end
CloneChar.Parent = fldr
CloneChar.HumanoidRootPart.CFrame = DeadChar.HumanoidRootPart.CFrame
CloneChar.Humanoid.BreakJointsOnDeath = false
CloneChar.Name = "non"
CloneChar.Humanoid.DisplayDistanceType = "None"

for _,v in next, DeadChar:GetChildren() do
	if v:IsA("Accessory") then
		local topacc = false
		if v.Handle:FindFirstChildOfClass("Weld") then v.Handle:FindFirstChildOfClass("Weld"):Destroy() end
		v.Handle.Massless = true
		v.Handle.CanCollide = false
		if v.Handle:FindFirstChildOfClass("Attachment") then
			local ath__ = v.Handle:FindFirstChildOfClass("Attachment")
			if ath__.Name == "HatAttachment" or ath__.Name == "HairAttachment" or ath__.Name == "FaceFrontAttachment" or ath__.Name == "FaceCenterAttachment" then
				topacc = ath__.Name
			end
		end
        local bv = Instance.new("BodyVelocity",v.Handle)
		bv.Velocity = Vector3.new(0,0,0)
		coroutine.wrap(function()
			if topacc then
				local allthings = SCIFIMOVIELOL(v.Handle,DeadChar.Torso,Vector3.new(0,1.5,0)+ (DeadChar.Head[topacc].Position + (v.Handle[topacc].Position*-1)),Vector3.new(0,0,0))
				local normaltop = allthings[1].Attachment1
				local alipos = allthings[1]
				local alirot = allthings[2]
				local p0 = v.Handle
				local p1 = DeadChar.Head
				alipos.Parent = CloneChar:FindFirstChild(v.Name).Handle
				alirot.Parent = CloneChar:FindFirstChild(v.Name).Handle
				while true do
					game:GetService("RunService").RenderStepped:wait()
					if HumanDied then break end
					coroutine.wrap(function()
						if alipos.Attachment1 == normaltop then
							p0.CFrame = p0.CFrame:lerp((((DeadChar.Torso.CFrame * CFrame.new(0,1.5,0)) * p1[topacc].CFrame) * p0[topacc].CFrame:inverse()),1)
						else
							v.Handle.CFrame = v.Handle.CFrame:lerp(alipos.Attachment1.Parent.CFrame * CFrame.new(alipos.Attachment1.Position) * CFrame.Angles(math.rad(alipos.Attachment1.Rotation.X),math.rad(alipos.Attachment1.Rotation.Y),math.rad(alipos.Attachment1.Rotation.Z)),1)
						end
					end)()
				end
			else
				SCIFIMOVIELOL(v.Handle,CloneChar[v.Name].Handle,Vector3.new(0,0,0),Vector3.new(0,0,0))
			end
		end)()
    end
end

local a = DeadChar.Torso
local b = DeadChar.HumanoidRootPart
local c = DeadChar.Humanoid
a.Parent = game:FindFirstChildOfClass("Workspace")
c.Parent = game:FindFirstChildOfClass("Workspace")
local told = a:Clone()
local told1 = c:Clone()
b["RootJoint"].Part0 = told
b["RootJoint"].Part1 = DeadChar.Head
a.Name = "torso"
a.Neck:Destroy()
c.Name = "Humanoid"
told.Parent = DeadChar
told1.Parent = DeadChar
DeadChar.PrimaryPart = told
told1.Health = 0
b:Destroy()
a.Parent = DeadChar
c.Parent = DeadChar
told:Destroy()
told1:Destroy()
a.Name = "Torso"

if CloneChar.Head:FindFirstChildOfClass("Decal") then CloneChar.Head:FindFirstChildOfClass("Decal").Transparency = 1 end
if DeadChar:FindFirstChild("Animate") then DeadChar:FindFirstChild("Animate"):Destroy() end

local Collider
function UnCollide()
    if HumanDied then Collider:Disconnect(); return end
    --[[for _,Parts in next, CloneChar:GetChildren() do
        if Parts:IsA("BasePart") then
            Parts.CanCollide = false 
        end 
    end]]
    for _,Parts in next, DeadChar:GetChildren() do
        if Parts:IsA("BasePart") then
        Parts.CanCollide = false
        end 
    end 
end
Collider = game:GetService("RunService").Stepped:Connect(UnCollide)

local resetBindable = Instance.new("BindableEvent")
resetBindable.Event:connect(function()
    game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
	resetBindable:Clone()
	HumanDied = true
    pcall(function()
		game:FindFirstChildOfClass("Players").LocalPlayer.Character = DeadChar
		DeadChar.Head:Destroy()
		DeadChar:FindFirstChildOfClass("Humanoid"):Destroy()
		game:FindFirstChildOfClass("Players").LocalPlayer.Character = CloneChar
		if DeadChar:FindFirstChildOfClass("Folder") then DeadChar:FindFirstChildOfClass("Folder"):Destroy() end
	end)
end)
game:GetService("StarterGui"):SetCore("ResetButtonCallback", resetBindable)

coroutine.wrap(function()
    while true do
        game:GetService("RunService").RenderStepped:wait()
        if not CloneChar or not CloneChar:FindFirstChild("Head") or not CloneChar:FindFirstChildOfClass("Humanoid") or CloneChar:FindFirstChildOfClass("Humanoid").Health <= 0 and not DeadChar or not DeadChar:FindFirstChild("Head") or not DeadChar:FindFirstChildOfClass("Humanoid") or DeadChar:FindFirstChildOfClass("Humanoid").Health <= 0 then 
            HumanDied = true
            pcall(function()
				game:FindFirstChildOfClass("Players").LocalPlayer.Character = DeadChar
				DeadChar.Head:Destroy()
				DeadChar:FindFirstChildOfClass("Humanoid"):Destroy()
				game:FindFirstChildOfClass("Players").LocalPlayer.Character = CloneChar
				if DeadChar:FindFirstChildOfClass("Folder") then DeadChar:FindFirstChildOfClass("Folder"):Destroy() end
			end)
            if resetBindable then
                game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
                resetBindable:Destroy()
            end
            break
        end		
    end
end)()


SCIFIMOVIELOL(DeadChar["Head"],CloneChar["Head"])
SCIFIMOVIELOL(DeadChar["Torso"],CloneChar["Torso"])
SCIFIMOVIELOL(DeadChar["Left Arm"],CloneChar["Left Arm"])
SCIFIMOVIELOL(DeadChar["Right Arm"],CloneChar["Right Arm"])
SCIFIMOVIELOL(DeadChar["Left Leg"],CloneChar["Left Leg"])
SCIFIMOVIELOL(DeadChar["Right Leg"],CloneChar["Right Leg"])

for _,v in pairs(DeadChar:GetChildren()) do
	if v:IsA("BasePart") and v.Name ~= "Head" then
		--[[local bv = Instance.new("BodyVelocity",v)
		bv.Velocity = Vector3.new(0,0,0)
		coroutine.wrap(function()
			while true do
				game:GetService("RunService").RenderStepped:wait()
				if HumanDied then break end
				v.CFrame = CloneChar[v.Name].CFrame
			end
		end)()]]
	elseif v:IsA("BasePart") and v.Name == "Head" then
		local bv = Instance.new("BodyVelocity",v)
		bv.Velocity = Vector3.new(0,0,0)
		coroutine.wrap(function()
			while true do
				game:GetService("RunService").RenderStepped:wait()
				if HumanDied then break end
				v.CFrame = DeadChar.Torso.CFrame * CFrame.new(0,1.5,0)
			end
		end)()
	end
end

for _,BodyParts in next, CloneChar:GetDescendants() do
if BodyParts:IsA("BasePart") or BodyParts:IsA("Part") then
BodyParts.Transparency = 1 end end
game:GetService("RunService").RenderStepped:wait()
game:FindFirstChildOfClass("Players").LocalPlayer.Character = CloneChar
game:FindFirstChildOfClass("Workspace"):FindFirstChildOfClass("Camera").CameraSubject = CloneChar.Humanoid

for _,v in next, DeadChar:GetChildren() do
	if v:IsA("Accessory") then
		if v.Handle:FindFirstChildOfClass("Weld") then v.Handle:FindFirstChildOfClass("Weld"):Destroy() end
	end
end

if ANIMATIONHERE then ANIMATIONHERE.Parent = CloneChar end
-------
Character.Humanoid:ChangeState(16)
local function align(i,v)
	local att0 = Instance.new("Attachment", i)
	att0.Position = Vector3.new(0,0,0)
	local att1 = Instance.new("Attachment", v)
	att1.Position = Vector3.new(0,0,0)
	local AP = Instance.new("AlignPosition", i)
	AP.Attachment0 = att0
	AP.Attachment1 = att1
	AP.RigidityEnabled = false
	AP.ReactionForceEnabled = false
	AP.ApplyAtCenterOfMass = true
	AP.MaxForce = 9e9
	AP.MaxVelocity = math.huge
	AP.Responsiveness = 200
	local AO = Instance.new("AlignOrientation", i)
	AO.Attachment0 = att0
	AO.Attachment1 = att1
	AO.ReactionTorqueEnabled = false
	AO.PrimaryAxisOnly = false
	AO.MaxTorque = 9e9
	AO.MaxAngularVelocity = math.huge
	AO.Responsiveness = 200
end

local function alignbroke(i,v)
	local att0 = Instance.new("Attachment", i)
	att0.Position = Vector3.new(0,0,0)
	local att1 = Instance.new("Attachment", v)
	att1.Position = Vector3.new(0,0,0)
	local AP = Instance.new("AlignPosition", i)
	AP.Attachment0 = att0
	AP.Attachment1 = att1
	AP.RigidityEnabled = false
	AP.ReactionForceEnabled = false
	AP.ApplyAtCenterOfMass = true
	AP.MaxForce = 9e9
	AP.MaxVelocity = math.huge
	AP.Responsiveness = 200
	local AO = Instance.new("AlignOrientation", i)
	AO.Attachment0 = att0
	AO.Attachment1 = att1
	AO.ReactionTorqueEnabled = false
	AO.PrimaryAxisOnly = false
	AO.MaxTorque = 9e9
	AO.MaxAngularVelocity = math.huge
	AO.Responsiveness = 200
end

local Hats = {
	Main = Character["MARTILLO"],
}

local Hats2 = {
	MainShit = Character["Robloxclassicred"]
}
local H = Hats.Main.Handle
local HH = Hats2.MainShit.Handle

local plr = game.Players.LocalPlayer
local flingo = game.workspace[plr.Name].Torso
local Debris = game:GetService("Debris")
local char = plr.Character


function insertfling()
    coroutine.resume(coroutine.create(function()
	local a = Instance.new("BodyAngularVelocity")
	a.MaxTorque = Vector3.new(999999999999999999999999999999999999,999999999999999999999999999999999999,999999999999999999999999999999999999)
	a.P = 999999999999999999999999999999999999
	a.AngularVelocity = Vector3.new(999999999,999999999,999999999)
	a.Parent = flingo
	wait(0.15)
	a:Destroy()
    end))
	end
	
	function idlefling()
		local a = Instance.new("BodyAngularVelocity")
		a.MaxTorque = Vector3.new(999999999999999999999999999999999999,999999999999999999999999999999999999,999999999999999999999999999999999999)
		a.P = 999999999999999999999999999999999999
		a.AngularVelocity = Vector3.new(90000,90000,90000)
		a.Parent = flingo
		debris:AddItem(a,0.00000000001)
	end
	
	game.Players.LocalPlayer.Character.Torso.AP.RigidityEnabled = false
	game.Players.LocalPlayer.Character.Torso.AP.MaxForce = 999999999999
	game.Players.LocalPlayer.Character.Torso.AO.RigidityEnabled = false
	game.Players.LocalPlayer.Character.Torso.AO.MaxTorque = 999999999999

	game.Players.LocalPlayer.Character["Right Arm"].AP.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Right Arm"].AP.MaxForce = 999999999999
	game.Players.LocalPlayer.Character["Right Arm"].AO.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Right Arm"].AO.MaxTorque = 999999999999

	game.Players.LocalPlayer.Character["Left Arm"].AP.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Left Arm"].AP.MaxForce = 999999999999
	game.Players.LocalPlayer.Character["Left Arm"].AO.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Left Arm"].AO.MaxTorque = 999999999999
	
	game.Players.LocalPlayer.Character["Right Leg"].AP.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Right Leg"].AP.MaxForce = 999999999999
	game.Players.LocalPlayer.Character["Right Leg"].AO.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Right Leg"].AO.MaxTorque = 999999999999

	game.Players.LocalPlayer.Character["Left Leg"].AP.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Left Leg"].AP.MaxForce = 999999999999
	game.Players.LocalPlayer.Character["Left Leg"].AO.RigidityEnabled = false
	game.Players.LocalPlayer.Character["Left Leg"].AO.MaxTorque = 999999999999
	
	for _,v in pairs(Character:GetDescendants()) do
		if  v:IsA("AlignPosition") and v.Parent.Parent:IsA("Accessory") and v.Parent.Parent.Name ~= "MARTILLO" and v.Parent.Parent.Name ~= "Robloxclassicred" then
			v.Enabled = false
			v.Parent.AccessoryWeld:Destroy()
	end
	
end
----
Player=game.Players.LocalPlayer
Character=Player.Character
hum = Character.Humanoid
LeftArm=Character["Left Arm"]
LeftLeg=Character["Left Leg"]
RightArm=Character["Right Arm"]
RightLeg=Character["Right Leg"]
Root=Character["HumanoidRootPart"]
Head=Character["Head"]
Torso=Character["Torso"]
Neck=Torso["Neck"]
walking = false
attacking = false
tauntdebounce = false
themeallow = true
secondform = false
position = nil
MseGuide = true
equipping = false
settime = 0
sine = 0
ws = 16
change = 1
dgs = 75
RunSrv = game:GetService("RunService")
RenderStepped = game:GetService("RunService").RenderStepped
removeuseless = game:GetService("Debris")
smoothen = game:GetService("TweenService")
cam = workspace.CurrentCamera
local armorparts = {}
local dmt2 = {3183433131,720696725,3420696180,1588071502,779838221,2635411911}
combo1 = true
combo2 = false
combo3 = false
combo4 = false
local bloodfolder = Instance.new("Folder",Torso)
local tauntable = {3493125551,3493128152,3493130715,3493305976,3493316200,3493334982,3493370895,3493372969,3493382339,3493384428}
local killable = {3493244407,3493249574,3493297656,3493301150,3493312467,3493319499,3493325658,3493328969,3493332011,3493356644,3493359848,3493368055,3493376612}

screenGui = Instance.new("ScreenGui")
screenGui.Parent = script.Parent

local HEADLERP = Instance.new("ManualWeld")
HEADLERP.Parent = Head
HEADLERP.Part0 = Head
HEADLERP.Part1 = Head
HEADLERP.C0 = CFrame.new(0, -1.5, -0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

local TORSOLERP = Instance.new("ManualWeld")
TORSOLERP.Parent = Root
TORSOLERP.Part0 = Torso
TORSOLERP.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

local ROOTLERP = Instance.new("ManualWeld")
ROOTLERP.Parent = Root
ROOTLERP.Part0 = Root
ROOTLERP.Part1 = Torso
ROOTLERP.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

local RIGHTARMLERP = Instance.new("ManualWeld")
RIGHTARMLERP.Parent = RightArm
RIGHTARMLERP.Part0 = RightArm
RIGHTARMLERP.Part1 = Torso
RIGHTARMLERP.C0 = CFrame.new(-1.5, 0, -0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

local LEFTARMLERP = Instance.new("ManualWeld")
LEFTARMLERP.Parent = LeftArm
LEFTARMLERP.Part0 = LeftArm
LEFTARMLERP.Part1 = Torso
LEFTARMLERP.C0 = CFrame.new(1.5, 0, -0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

local RIGHTLEGLERP = Instance.new("ManualWeld")
RIGHTLEGLERP.Parent = RightLeg
RIGHTLEGLERP.Part0 = RightLeg
RIGHTLEGLERP.Part1 = Torso
RIGHTLEGLERP.C0 = CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

local LEFTLEGLERP = Instance.new("ManualWeld")
LEFTLEGLERP.Parent = LeftLeg
LEFTLEGLERP.Part0 = LeftLeg
LEFTLEGLERP.Part1 = Torso
LEFTLEGLERP.C0 = CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

local function weldBetween(a, b)
    local weld = Instance.new("ManualWeld", a)
    weld.Part0 = a
    weld.Part1 = b
    weld.C0 = a.CFrame:inverse() * b.CFrame
    return weld
end

function MAKETRAIL(PARENT,POSITION1,POSITION2,LIFETIME,COLOR)
A = Instance.new("Attachment", PARENT)
A.Position = POSITION1
A.Name = "A"
B = Instance.new("Attachment", PARENT)
B.Position = POSITION2
B.Name = "B"
x = Instance.new("Trail", PARENT)
x.Attachment0 = A
x.Attachment1 = B
x.Enabled = true
x.Lifetime = LIFETIME
x.TextureMode = "Static"
x.LightInfluence = 0
x.Color = COLOR
x.Transparency = NumberSequence.new(0, 1)
end

function ray(pos, di, ran, ignore)
	return workspace:FindPartOnRay(Ray.new(pos, di.unit * ran), ignore)
end

function ray2(StartPos, EndPos, Distance, Ignore)
local di = CFrame.new(StartPos,EndPos).lookVector
return ray(StartPos, di, Distance, Ignore)
end

function colortween(a,speed,color1)
local z = {
Color = color1
}
local tween = smoothen:Create(a,TweenInfo.new(speed,Enum.EasingStyle.Linear),z)
tween:Play()
end

function takeDamage(victim,damage)
if victim.MaxHealth < 50000 and victim ~= hum then
victim.Health = victim.Health - damage
if victim.Health < 1 then
killtaunt()
end
else
victim.Parent:BreakJoints()
killtaunt()
end
end

function taunt()
coroutine.wrap(function()
if tauntdebounce then return end
tauntdebounce = true
rdnm2 = tauntable[math.random(1,#tauntable)]
for i = 1, 3 do
coroutine.wrap(function()
tauntsound = Instance.new("Sound", Head)
tauntsound.Volume = 10
tauntsound.SoundId = "http://www.roblox.com/asset/?id="..rdnm2
tauntsound.Looped = false
tauntsound.Pitch = 1
tauntsound:Play()
wait(3)
wait(tauntsound.TimeLength)
tauntsound:Remove()
wait(1)
tauntdebounce = false
end)()
end
end)()
end

function killtaunt()
coroutine.wrap(function()
if tauntdebounce then return end
tauntdebounce = true
rdnm2 = killable[math.random(1,#killable)]
for i = 1, 3 do
coroutine.wrap(function()
tauntsound = Instance.new("Sound", Head)
tauntsound.Volume = 10
tauntsound.SoundId = "http://www.roblox.com/asset/?id="..rdnm2
tauntsound.Looped = false
tauntsound.Pitch = 1
tauntsound:Play()
wait(3)
wait(tauntsound.TimeLength)
tauntsound:Remove()
wait(1)
tauntdebounce = false
end)()
end
end)()
end

function velo(a,name,pos,speed)
local bov = Instance.new("BodyVelocity",a)
bov.Name = name
bov.maxForce = Vector3.new(99999,99999,99999)
a.CFrame = CFrame.new(a.Position,pos)
bov.velocity = a.CFrame.lookVector*speed
end
function bolt(parent,from,too,endtarget,color,size)
local function iray(pos, di, ran, ignore)
local ing={endtarget}
	return workspace:FindPartOnRayWithWhitelist(Ray.new(pos, di.unit * ran), ing)
end
local function iray2(StartPos, EndPos, Distance, Ignore)
local di = CFrame.new(StartPos,EndPos).lookVector
return iray(StartPos, di, Distance, Ignore)
end
lastposition = from
local step = 16
local distance = (from-too).magnitude
for i = 1,distance, step do
local from = lastposition
local too = from + -(from-too).unit*step+ Vector3.new(math.random(-10,10),math.random(-10,10),math.random(-10,10))
local bolt = Instance.new("Part",parent)
bolt.Size = Vector3.new(size,size,(from-too).magnitude)
bolt.Anchored = true
bolt.CanCollide = false
bolt.BrickColor = color
bolt.Material = "Neon"
bolt.CFrame = CFrame.new(from:lerp(too,.5),too)
lastposition = too
coroutine.wrap(function()
for i = 1, 5 do
bolt.Transparency = bolt.Transparency + .2
wait()
end
bolt:Remove()
end)()
end
local lastbolt = Instance.new("Part",parent)
lastbolt.Size = Vector3.new(1,1,(from-too).magnitude)
lastbolt.Anchored = true
lastbolt.CanCollide = false
lastbolt.BrickColor = color
lastbolt.Material = "Neon"
lastbolt.CFrame = CFrame.new(lastposition,too)
lastbolt.Size = Vector3.new(size,size,size)
local start = lastposition
local hit,endp = iray2(lastposition,too,650,workspace.Base)
local dis = (start - endp).magnitude
lastbolt.CFrame = CFrame.new(lastposition,too) * CFrame.new(0,0,-dis/2)
lastbolt.Size = Vector3.new(size,size,dis)
coroutine.wrap(function()
for i = 1, 5 do
lastbolt.Transparency = lastbolt.Transparency + .2
wait()
end
lastbolt:Remove()
end)()
end

dmt2random = dmt2[math.random(1,#dmt2)]
doomtheme = Instance.new("Sound", Torso)
doomtheme.Volume = 0
doomtheme.Name = "doomtheme"
doomtheme.Looped = false
doomtheme.SoundId = "rbxassetid://"..dmt2random
doomtheme:Play()
coroutine.wrap(function()
while wait() do
pcall(function()
doomtheme.Ended:Wait()
dmt2random = dmt2[math.random(1,#dmt2)]
doomtheme.SoundId = "rbxassetid://"..dmt2random
doomtheme:Play()
end)
end
end)()

Torso.ChildRemoved:connect(function(removed)
if removed.Name == "doomtheme" then
dmt2random = dmt2[math.random(1,#dmt2)]
doomtheme = Instance.new("Sound",Torso)
doomtheme.SoundId = "rbxassetid://"..dmt2random
if equip then
doomtheme.Volume = 3
else
doomtheme.Volume = 0
end
doomtheme.Name = "doomtheme"
doomtheme.Looped = true
doomtheme:Play()
end
end)

coroutine.wrap(function()
while wait() do
hum.WalkSpeed = ws
hum.JumpPower = 75
end
end)()
godmode = coroutine.wrap(function()
for i,v in pairs(Character:GetChildren()) do
if v:IsA("BasePart") and v ~= Root then
v.Anchored = false
end
end
while true do
hum.MaxHealth = math.huge
wait(0.0000001)
hum.Health = math.huge
swait()
end
end)
godmode()
ff = Instance.new("ForceField", Character)
ff.Visible = false

pcall(function()
----defaultpos----
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5,0,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)), 0.2)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)), 0.2)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),.2)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
----defaultpos----
end)

function damagealll(Radius,Position)		
	local Returning = {}		
	for _,v in pairs(workspace:GetChildren()) do		
		if v~=Character and v:FindFirstChildOfClass('Humanoid') and v:FindFirstChild('Torso') or v:FindFirstChild('UpperTorso') then
if v:FindFirstChild("Torso") then		
			local Mag = (v.Torso.Position - Position).magnitude		
			if Mag < Radius then		
				table.insert(Returning,v)		
			end
elseif v:FindFirstChild("UpperTorso") then	
			local Mag = (v.UpperTorso.Position - Position).magnitude		
			if Mag < Radius then		
				table.insert(Returning,v)		
			end
end	
		end		
	end		
	return Returning		
end

function swait(num)
	if num == 0 or num == nil then
		game:service("RunService").Stepped:wait(0)
	else
		for i = 0, num do
			game:service("RunService").Stepped:wait(0)
		end
	end
end

function SOUND(PARENT,ID,VOL,LOOP,PITCH,REMOVE)
local so = Instance.new("Sound")
so.Parent = PARENT
so.SoundId = "rbxassetid://"..ID
so.Volume = VOL
so.Looped = LOOP
so.Pitch = PITCH
so:Play()
removeuseless:AddItem(so,REMOVE)
end

function meshify(parent,scale,mid,tid)
local mesh = Instance.new("SpecialMesh",parent)
mesh.Name = "mesh"
mesh.Scale = scale
mesh.MeshId = "rbxassetid://"..mid
mesh.TextureId = "rbxassetid://"..tid
end

function blocktrail(position,size,trans,mat,color)
local trailblock = Instance.new("Part",Torso)
trailblock.Anchored = true
trailblock.CanCollide = false
trailblock.Transparency = trans
trailblock.Material = mat
trailblock.BrickColor = color
trailblock.CFrame = CFrame.new(position) * CFrame.Angles(math.rad(math.random(-180,180)),math.rad(math.random(-180,180)),math.rad(math.random(-180,180)))
trailblock.Size = size
coroutine.wrap(function()
for i = 1, 20 do
trailblock.Transparency = trailblock.Transparency + .05
trailblock.Size = trailblock.Size - trailblock.Size/20
swait()
end
trailblock:Remove()
end)()
end


function blood(parent,intensity)
coroutine.wrap(function()
local particlemiter1 = Instance.new("ParticleEmitter", parent)
particlemiter1.Enabled = true
particlemiter1.Color = ColorSequence.new(BrickColor.new("Crimson").Color)
particlemiter1.Texture = "rbxassetid://1391189545"
particlemiter1.Lifetime = NumberRange.new(.6)
particlemiter1.Size = NumberSequence.new(3,3)
particlemiter1.Transparency = NumberSequence.new(0,1)
particlemiter1.Rate = intensity
particlemiter1.Rotation = NumberRange.new(0,360)
particlemiter1.Speed = NumberRange.new(6)
particlemiter1.SpreadAngle = Vector2.new(180,180)
wait(.2)
particlemiter1.Enabled = false
removeuseless:AddItem(particlemiter1,10)
end)()
coroutine.wrap(function()
for i = 1, 10 do
local ray = Ray.new(parent.Position, Vector3.new(0,-25,0))
local part, hitPosition = workspace:FindPartOnRayWithIgnoreList(ray, {bloodfolder,parent.Parent,bloc,Character,blooddecal,blowd,Torso},false,true)
if part and part.Parent ~= parent.Parent and not part.Parent:FindFirstChildOfClass("Humanoid") then
local vbn = math.random(5,15)
coroutine.wrap(function()
local blooddecal = Instance.new("Part",bloodfolder)
blooddecal.Size =  Vector3.new(vbn,.1,vbn)
blooddecal.Transparency = 1
blooddecal.Anchored = true
blooddecal.Name = "blowd"
blooddecal.CanCollide = false
blooddecal.Position = hitPosition 
blooddecal.Rotation = Vector3.new(0,math.random(-180,180),0)
local blood = Instance.new("Decal",blooddecal)
blood.Face = "Top"
blood.Texture = "rbxassetid://1391189545"
blood.Transparency = math.random(.1,.4)
wait(60)
for i = 1, 100 do
blood.Transparency = blood.Transparency + .01
swait()
end
blooddecal:Destroy()
end)()
else
end
swait()
end
end)()
end

function shockwave(position,scale,transparency,brickcolor,speed,transparencyincrease)
coroutine.wrap(function()
local shockwave = Instance.new("Part", Torso)
shockwave.Size = Vector3.new(1,1,1)
shockwave.CanCollide = false
shockwave.Anchored = true
shockwave.Transparency = transparency
shockwave.BrickColor = brickcolor
shockwave.CFrame = position
local shockwavemesh = Instance.new("SpecialMesh", shockwave)
shockwavemesh.Scale = Vector3.new(1,.25,1)
shockwavemesh.MeshId = "rbxassetid://20329976"
local shockwave2 = Instance.new("Part", Torso)
shockwave2.Size = Vector3.new(1,1,1)
shockwave2.CanCollide = false
shockwave2.Anchored = true
shockwave2.Transparency = shockwave.Transparency
shockwave2.BrickColor = shockwave.BrickColor
shockwave2.CFrame = shockwave.CFrame
local shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
shockwavemesh2.Scale = Vector3.new(1,.25,1)
shockwavemesh2.MeshId = "rbxassetid://20329976"
for i = 1, 40 do
shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0),math.rad(0+speed),0)
shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0),math.rad(0-speed),0)
shockwave.Transparency = shockwave.Transparency + transparencyincrease
shockwave2.Transparency = shockwave2.Transparency + transparencyincrease
shockwavemesh2.Scale = shockwavemesh2.Scale + scale
shockwavemesh.Scale = shockwavemesh.Scale + scale
swait()
end
shockwave:Destroy()
shockwave2:Destroy()
end)()
end

function blockyeffect(brickcolor,size,trans,posi,mater,spread)
local blocky = Instance.new("Part",Torso)
blocky.Anchored = true
blocky.CanCollide = false
blocky.BrickColor = brickcolor
blocky.Size = size
blocky.Transparency = trans
blocky.CFrame = posi * CFrame.Angles(math.rad(math.random(-180,180)),math.rad(math.random(-180,180)),math.rad(math.random(-180,180)))
blocky.Material = mater
local locbloc = Instance.new("Part",Torso)
locbloc.Anchored = true
locbloc.CanCollide = false
locbloc.Transparency = 1
locbloc.Size = Vector3.new(1,1,1)
locbloc.CFrame = blocky.CFrame * CFrame.new(math.random(-spread,spread),math.random(-spread,spread),math.random(-spread,spread))
coroutine.wrap(function()
local a = math.random(-180,180)
local b = math.random(-180,180)
local c = math.random(-180,180)
for i = 1, 20 do
blocky.CFrame = blocky.CFrame:lerp(CFrame.new(locbloc.Position) * CFrame.Angles(math.rad(a),math.rad(b),math.rad(c)),.2)
blocky.Transparency = blocky.Transparency + .05
swait()
end
blocky:Remove()
locbloc:Remove()
end)()
end

coroutine.wrap(function()
for i,v in pairs(Character:GetChildren()) do
if v.Name == "Animate" then
end
end
end)()

leftlocation = Instance.new("Part",LeftArm)
leftlocation.Size = Vector3.new(1,1,1)
leftlocation.Transparency = 1
leftlocation.CanCollide = false
leftlocationweld = weldBetween(leftlocation,LeftArm)
leftlocationweld.C0 = CFrame.new(0,1.2,0)
rightlocation = Instance.new("Part",RightArm)
rightlocation.Size = Vector3.new(1,1,1)
rightlocation.CanCollide = false
rightlocation.Transparency = 1
rightlocationweld = weldBetween(rightlocation,RightArm)
rightlocationweld.C0 = CFrame.new(0,1.2,0)
leftlocation2 = Instance.new("Part",LeftLeg)
leftlocation2.Size = Vector3.new(1,1,1)
leftlocation2.CanCollide = false
leftlocation2.Transparency = 1
leftlocationweld2 = weldBetween(leftlocation2,LeftLeg)
leftlocationweld2.C0 = CFrame.new(0,2,0)
rightlocation2 = Instance.new("Part",RightLeg)
rightlocation2.Size = Vector3.new(1,1,1)
rightlocation2.CanCollide = false
rightlocation2.Transparency = 1
rightlocationweld2 = weldBetween(rightlocation2,RightLeg)
rightlocationweld2.C0 = CFrame.new(0,2,0)

whandel = Instance.new("Part",Torso)
whandel.Size = Vector3.new(1,1,1)
whandel.Name = 'DeathMF'
whandel.Transparency = 1
whandel.Anchored = false
whandel.CanCollide = false
whandel.BrickColor = BrickColor.new("Navy blue")
whandelweld = weldBetween(whandel,Torso)
whandelweld.C0 = CFrame.new(0,-.6,-.75) * CFrame.Angles(math.rad(-10),math.rad(0),math.rad(-135))
whandelmesh = Instance.new("SpecialMesh",whandel)
whandelmesh.MeshId = "rbxassetid://3447918423"

wmain = Instance.new("Part",Torso)
wmain.Size = Vector3.new(1,1,1)
wmain.Anchored = false
wmain.Transparency = 1
wmain.CanCollide = false
wmain.BrickColor = BrickColor.new("Dark grey")
wmainweld = weldBetween(wmain,whandel)
wmainweld.C0 = CFrame.new(0,-1.45,0) * CFrame.Angles(0,math.rad(90),0)
wmainmesh = Instance.new("SpecialMesh",wmain)
wmainmesh.MeshId = "rbxassetid://3447905639"

wright = Instance.new("Part",Torso)
wright.Size = Vector3.new(1,1,1)
wright.CanCollide = false
wright.Anchored = false
wright.Transparency = 1
wrightweld = weldBetween(wright,wmain)
wrightweld.C0 = CFrame.new(0,0,1.2)

wleft = Instance.new("Part",Torso)
wleft.Size = Vector3.new(1,1,1)
wleft.CanCollide = false
wleft.Anchored = false
wleft.Transparency = 1
wleftweld = weldBetween(wleft,wmain)
wleftweld.C0 = CFrame.new(0,0,-1.2)

A = Instance.new("Attachment", wleft)
A.Position = Vector3.new(0,.5,0)
A.Name = "A"
B = Instance.new("Attachment", wleft)
B.Position = Vector3.new(0,-.5,0)
B.Name = "B"
tr1 = Instance.new("Trail", wleft)
tr1.Attachment0 = A
tr1.Attachment1 = B
tr1.Enabled = false
tr1.Lifetime = .8
tr1.TextureMode = "Static"
tr1.LightInfluence = 0
tr1.Color = ColorSequence.new(BrickColor.new("White").Color,BrickColor.new("Really black").Color)
tr1.Transparency = NumberSequence.new(0, 1)

A = Instance.new("Attachment", wright)
A.Position = Vector3.new(0,.5,0)
A.Name = "A"
B = Instance.new("Attachment", wright)
B.Position = Vector3.new(0,-.5,0)
B.Name = "B"
tr2 = Instance.new("Trail", wright)
tr2.Attachment0 = A
tr2.Attachment1 = B
tr2.Enabled = false
tr2.Lifetime = .8
tr2.TextureMode = "Static"
tr2.LightInfluence = 0
tr2.Color = ColorSequence.new(BrickColor.new("White").Color,BrickColor.new("Really black").Color)
tr2.Transparency = NumberSequence.new(0, 1)

wspikes = Instance.new("Part",Torso)
wspikes.Size = Vector3.new(1,1,1)
wspikes.Transparency = 1
wspikes.Anchored = false
wspikes.CanCollide = false
wspikes.BrickColor = BrickColor.new("Medium stone grey")
wspikesweld = weldBetween(wspikes,wmain)
wspikesweld.C0 = CFrame.new(0,0,0) * CFrame.Angles(0,math.rad(0),0)
wspikesmesh = Instance.new("SpecialMesh",wspikes)
wspikesmesh.MeshId = "rbxassetid://3448020685"

wmain2 = Instance.new("Part",Torso)
wmain2.Size = Vector3.new(1,1,1)
wmain2.Anchored = false
wmain2.Transparency = 1
wmain2.CanCollide = false
wmain2.BrickColor = BrickColor.new("Really black")
wmainweld2 = weldBetween(wmain2,wmain)
wmainweld2.C0 = CFrame.new(0,0,0) * CFrame.Angles(0,math.rad(0),0)
wmainmesh2 = Instance.new("SpecialMesh",wmain2)
wmainmesh2.MeshId = "rbxassetid://3447912823"
local mouse = Player:GetMouse()
mouse.Button1Down:connect(function()
if combo1 then
if not equip then return end
if debounce then return end 
combo1 = false
combo2 = true
combo3 = false
combo4 = false
debounce = true
attacking = true
ws = 4
local g1 = Instance.new("BodyGyro", nil)
g1.CFrame = Root.CFrame
g1.Parent = Root
g1.D = 175
g1.P = 20000
g1.MaxTorque = Vector3.new(0,90000,0)
for i = 1, 15 do
g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position,mouse.Hit.p),.15)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-2.15,-1.7,-.35) * CFrame.Angles(math.rad(90),math.rad(-90),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.1, 0) * CFrame.Angles(math.rad(0), math.rad(50), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.1,0.7,0.4)*CFrame.Angles(math.rad(-88.4),math.rad(21.9),math.rad(-10.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5,2,0)*CFrame.Angles(math.rad(-2.5),math.rad(-0.1),math.rad(2.6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1,0.6,0.2)*CFrame.Angles(math.rad(-94.7),math.rad(-31.9),math.rad(-4.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.4,2,0.4)*CFrame.Angles(math.rad(2.9),math.rad(50.3),math.rad(-4.2))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
swait()
end
local bloc = Instance.new("Part",Torso)
bloc.Anchored = true
bloc.CanCollide = false
bloc.Size = Vector3.new(1,1,1)
bloc.Transparency = 1
bloc.Name = "bloc"
bloc.CFrame = Root.CFrame * CFrame.new(0,0,-5)
--Hit = damagealll(4,bloc.Position)
--for _,v in pairs(Hit) do
--if v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health > 0 then
--slachtoffer = v:FindFirstChildOfClass("Humanoid")
--takeDamage(slachtoffer,math.random(29,42))
--vel = Instance.new("BodyVelocity",v:FindFirstChild("Torso") or v:FindFirstChild("UpperTorso")) 
--vel.maxForce = Vector3.new(9999999999999,9999999999999,9999999999999)
--torso = v:FindFirstChild("Torso") or v:FindFirstChild("UpperTorso")
--vel.velocity = CFrame.new(wmain.Position,torso.Position).lookVector*75
--SOUND(torso,2801263,5,false,math.random(7,8)/10,6)
--blood(torso,200)
--removeuseless:AddItem(vel,.1)
--end
--end
SOUND(wmain,1306070008,5,false,math.random(7,9)/10,10)
tr1.Enabled = true
tr2.Enabled = true
for i = 1, 15 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-2.6,-1.5,-.35) * CFrame.Angles(math.rad(90),math.rad(-10),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.1, 0) * CFrame.Angles(math.rad(0), math.rad(-70), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(0.8,1.4,0.9)*CFrame.Angles(math.rad(-51.1),math.rad(-52.4),math.rad(1.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.4,2.1,0.2)*CFrame.Angles(math.rad(-7.5),math.rad(-37),math.rad(3.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.2,1.3,0)*CFrame.Angles(math.rad(-68.7),math.rad(30.1),math.rad(-28.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5,2.1,0.3)*CFrame.Angles(math.rad(-4.4),math.rad(40.2),math.rad(0.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
swait()
end
ws = 29
removeuseless:AddItem(g1,.001)
tr1.Enabled = false
tr2.Enabled = false
removeuseless:AddItem(bloc,6)
debounce = false
attacking = false
elseif combo2 then
if not equip then return end
if debounce then return end
combo1 = false
combo2 = false
combo3 = true
combo4 = false
debounce = true
attacking = true
ws = 6
local g1 = Instance.new("BodyGyro", nil)
g1.CFrame = Root.CFrame
g1.Parent = Root
g1.D = 175
g1.P = 20000
g1.MaxTorque = Vector3.new(0,90000,0)
for i = 1, 12 do
g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position,mouse.Hit.p),.15)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(1.2,-2.8,.15) * CFrame.Angles(0,math.rad(90),math.rad(55)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.1, 0) * CFrame.Angles(math.rad(0), math.rad(-30), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.1,0,0.3)*CFrame.Angles(math.rad(-91.1),math.rad(49.7),math.rad(0.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.3,1.3,0.9)*CFrame.Angles(math.rad(18.3),math.rad(-39.3),math.rad(1.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1,1.4,0.4)*CFrame.Angles(math.rad(-134.9),math.rad(19.4),math.rad(21.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.4,2.1,-0.1)*CFrame.Angles(math.rad(-7.1),math.rad(-3),math.rad(-8.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
swait()
end
local bloc = Instance.new("Part",Torso)
bloc.Anchored = true
bloc.CanCollide = false
bloc.Size = Vector3.new(1,1,1)
bloc.Transparency = 1
bloc.Name = "bloc"
bloc.CFrame = Root.CFrame * CFrame.new(0,0,-5)
--
SOUND(wmain,1306070008,5,false,math.random(7,9)/10,10)
tr1.Enabled = true
tr2.Enabled = true
for i = 1, 20 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(1.55,-2.8,-.35) * CFrame.Angles(math.rad(90),math.rad(40),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.1, 0) * CFrame.Angles(math.rad(0), math.rad(50), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.3,-0.1,0.3)*CFrame.Angles(math.rad(-88.9),math.rad(4.5),math.rad(-1.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5,2,0.2)*CFrame.Angles(math.rad(-2.9),math.rad(-15),math.rad(2.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-0.9,0.9,0.1)*CFrame.Angles(math.rad(-100),math.rad(-34.7),math.rad(-2.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.2,2.1,0.4)*CFrame.Angles(math.rad(11.9),math.rad(48.6),math.rad(-17.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
swait()
end
ws = 29
removeuseless:AddItem(g1,.001)
removeuseless:AddItem(bloc,6)
tr1.Enabled = false
tr2.Enabled = false
debounce = false
attacking = false
elseif combo3 then
if not equip then return end
if debounce then return end
combo1 = false
combo2 = false
combo3 = false
combo4 = true
debounce = true
attacking = true
ws = 5
local g1 = Instance.new("BodyGyro", nil)
g1.CFrame = Root.CFrame
g1.Parent = Root
g1.D = 175
g1.P = 20000
g1.MaxTorque = Vector3.new(0,90000,0)
for i = 1, 16 do
g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position,mouse.Hit.p),.15)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-1.85,-1.7,-.35) * CFrame.Angles(math.rad(90),math.rad(-60),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.1, 0) * CFrame.Angles(math.rad(0), math.rad(-50), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.5,-0.6)*CFrame.Angles(math.rad(0.9),math.rad(25.4),math.rad(25.1))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.2,2.1,0.3)*CFrame.Angles(math.rad(-2.2),math.rad(-47.3),math.rad(7.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.2,0.1,0.3)*CFrame.Angles(math.rad(-84.5),math.rad(-47.2),math.rad(6.6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5,2,0.3)*CFrame.Angles(math.rad(-2.8),math.rad(30),math.rad(-3.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
swait()
end
local bloc = Instance.new("Part",Torso)
bloc.Anchored = true
bloc.CanCollide = false
bloc.Size = Vector3.new(1,1,1)
bloc.Transparency = 1
bloc.Name = "bloc"
bloc.CFrame = Root.CFrame * CFrame.new(0,0,-6.5)
--
SOUND(wmain,1306070008,5,false,math.random(7,9)/10,10)
tr1.Enabled = true
tr2.Enabled = true
for i = 1, 17 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-1.25,-3.7,-.35) * CFrame.Angles(math.rad(90),math.rad(60),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.1, 0) * CFrame.Angles(math.rad(0), math.rad(70), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(0.7,1.7,0.8)*CFrame.Angles(math.rad(20.6),math.rad(-25.7),math.rad(74.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.1,2,0.5)*CFrame.Angles(math.rad(-0.7),math.rad(-67.3),math.rad(1.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-0.8,1.7,0.5)*CFrame.Angles(math.rad(-97.8),math.rad(61.9),math.rad(9.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.3,2,0.5)*CFrame.Angles(math.rad(-5.1),math.rad(60),math.rad(0.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.3)
swait()
end
ws = 29
removeuseless:AddItem(g1,.001)
tr1.Enabled = false
tr2.Enabled = false
removeuseless:AddItem(bloc,6)
debounce = false
attacking = false
elseif combo4 then
if not equip then return end
if debounce then return end
combo1 = true
combo2 = false
combo3 = false
combo4 = false
debounce = true
attacking = true
ws = 6
--local g1 = Instance.new("BodyGyro", nil)
--g1.CFrame = Root.CFrame
--g1.Parent = Root
--g1.D = 175
--g1.P = 20000
--g1.MaxTorque = Vector3.new(0,90000,0)
for i = 1, 20 do
--g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position,mouse.Hit.p),.15)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-0,-3.5,-1.75) * CFrame.Angles(math.rad(-81),math.rad(0),math.rad(180)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2, 0) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5,0.8,0.3)*CFrame.Angles(math.rad(150.4),math.rad(13),math.rad(37.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.3,1.9,0.8)*CFrame.Angles(math.rad(20.7),math.rad(-16),math.rad(6.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0.7,0.5)*CFrame.Angles(math.rad(150.1),math.rad(-16.6),math.rad(-45.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.3,0.9,1)*CFrame.Angles(math.rad(43.9),math.rad(-6),math.rad(-15.1))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
ws = 0
tr1.Enabled = true
tr2.Enabled = true
SOUND(wmain,1306070008,5,false,math.random(7,9)/10,10)
local bloc = Instance.new("Part",Torso)
bloc.Size = Vector3.new(1,1,1)
bloc.Anchored = true
bloc.CanCollide = false
bloc.Transparency = 1
bloc.CFrame = Root.CFrame * CFrame.new(0,-2.2,-4.8)
--
SOUND(wmain,2691586,5,false,.3,10)
shockwave(CFrame.new(bloc.Position) * CFrame.new(0,-1,0),Vector3.new(.5,.1,.5),.2,BrickColor.new("White"),math.random(16,21),.025)
coroutine.wrap(function()
local bball = Instance.new("Part",Torso)
bball.Anchored = true
bball.CanCollide = false
bball.Size = Vector3.new(1,1,1)
bball.BrickColor = BrickColor.new("White")
bball.Material = "Neon"
bball.Transparency = .4
bball.Shape = "Ball"
bball.CFrame = bloc.CFrame
for i = 1, 40 do
bball.Size = bball.Size + Vector3.new(.5,.5,.5)
bball.Transparency = bball.Transparency + .025
swait()
end
bball:Destroy()
end)()
for i = 1, 20 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(.5,-3.5,0) * CFrame.Angles(math.rad(-0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(65),math.rad(0),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -1, 0) * CFrame.Angles(math.rad(-31), math.rad(0), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,-0.1,-0.3)*CFrame.Angles(math.rad(-103.8),math.rad(36),math.rad(31.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5,1.3,0.3)*CFrame.Angles(math.rad(-40.3),math.rad(-0.1),math.rad(0.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.4,0,-0.1)*CFrame.Angles(math.rad(-98.4),math.rad(-34.3),math.rad(-24))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.6,0.8,1.4)*CFrame.Angles(math.rad(57.4),math.rad(-12.1),math.rad(-7.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
removeuseless:AddItem(g1,.001)
removeuseless:AddItem(bloc,6)
tr1.Enabled = false
tr2.Enabled = false
attacking = false
debounce = false
ws = 29
end
end)

mouse.KeyDown:connect(function(Press)
Press=Press:lower()
if Press=='m' then
immortality()
	for i,v in pairs(Player.Character:GetDescendants()) do
		if v:IsA("BodyVelocity") then
			v:Remove()
		end
	end
elseif Press=='u' then
if not equip then return end
if debounce then return end
debounce = true
attacking = true
tr1.Enabled = true
tr2.Enabled = true
local g1 = Instance.new("BodyGyro", nil)
g1.CFrame = Root.CFrame
g1.Parent = Root
g1.D = 175
g1.P = 20000
g1.MaxTorque = Vector3.new(0,90000,0)
for i = 1, 20 do
g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position,mouse.Hit.p),.15)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-0,-3.5,-1.75) * CFrame.Angles(math.rad(-81),math.rad(0),math.rad(180)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, 4, 0) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5,0.8,0.3)*CFrame.Angles(math.rad(150.4),math.rad(13),math.rad(37.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.3,1.9,0.8)*CFrame.Angles(math.rad(20.7),math.rad(-16),math.rad(6.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0.7,0.5)*CFrame.Angles(math.rad(150.1),math.rad(-16.6),math.rad(-45.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.3,0.9,1)*CFrame.Angles(math.rad(43.9),math.rad(-6),math.rad(-15.1))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
ws = 0
coroutine.wrap(function()
local x = 0
for i = 1, 150 do
swait()
x = x + 25
local grl = Instance.new("Part",Torso)
grl.Size = Vector3.new(1,1,1)
grl.Anchored = true
grl.Transparency = 1
grl.CanCollide = false
grl.CFrame = Root.CFrame * CFrame.new(0,-2,-10 - x)
local didhit = false
local mate = nil
local colo = nil
local ray = Ray.new(grl.Position, grl.CFrame.Position + CFrame.new(0,-10,0).Position)
local tabd = {bloodfolder,Character}
local part, hitPosition = workspace:FindPartOnRayWithIgnoreList(ray, {bloodfolder,grl,Character,blooddecal,blowd,Torso},false,true)
if part then
	didhit = true
mate = part.Material
colo = part.BrickColor
else
	didhit = false
end
if not didhit then
grl:Destroy()
elseif didhit then
--
coroutine.wrap(function()
local shockwave = Instance.new("Part", Torso)
shockwave.Size = Vector3.new(1,1,1)
shockwave.CanCollide = false
shockwave.Anchored = true
shockwave.Transparency = .4
shockwave.BrickColor = BrickColor.new("White")
shockwave.CFrame = CFrame.new(grl.Position) * CFrame.new(0,-1.75,0)
local shockwavemesh = Instance.new("SpecialMesh", shockwave)
shockwavemesh.Scale = Vector3.new(4,.7,4)
shockwavemesh.MeshId = "rbxassetid://20329976"
local shockwave2 = Instance.new("Part", Torso)
shockwave2.Size = Vector3.new(1,1,1)
shockwave2.CanCollide = false
shockwave2.Anchored = true
shockwave2.Transparency = .4
shockwave2.BrickColor = BrickColor.new("White")
shockwave2.CFrame = CFrame.new(grl.Position) * CFrame.new(0,-1.6,0)
local shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
shockwavemesh2.Scale = Vector3.new(4,.7,4)
shockwavemesh2.MeshId = "rbxassetid://20329976"
local shockwave3 = Instance.new("Part", Torso)
shockwave3.Size = Vector3.new(1,1,1)
shockwave3.CanCollide = false
shockwave3.Anchored = true
shockwave3.Transparency = .4
shockwave3.BrickColor = BrickColor.new("White")
shockwave3.CFrame = CFrame.new(grl.Position) * CFrame.new(0,-1.75,0)
local shockwavemesh3 = Instance.new("SpecialMesh", shockwave3)
shockwavemesh3.Scale = Vector3.new(4,.7,4)
shockwavemesh3.MeshId = "rbxassetid://20329976"
local sonbox = Instance.new("Part",Torso)
sonbox.Size = Vector3.new(1,1,1)
sonbox.Anchored = true
sonbox.CanCollide = flase
sonbox.Transparency = 1
sonbox.CFrame = grl.CFrame
SOUND(sonbox,292536356,5,false,math.random(8,11)/10,3)
for i = 1, 60 do
shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0),math.rad(0+math.random(16,21)),0)
shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0),math.rad(0-math.random(13,16)),0)
shockwave3.CFrame = shockwave3.CFrame * CFrame.Angles(math.rad(0),math.rad(0-math.random(6,9)),0)
shockwave.Transparency = shockwave.Transparency + .02
shockwave2.Transparency = shockwave2.Transparency + .02
shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(2,3,2)
shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(3,1.5,3)
shockwavemesh3.Scale = shockwavemesh3.Scale + Vector3.new(5,.25,5)
shockwave3.Transparency = shockwave3.Transparency + .02
swait()
end
shockwave3:Remove()
shockwave:Remove()
shockwave2:Remove()
end)()
local bigrass = Instance.new("Part",Torso)
bigrass.Size = Vector3.new(11,25 + math.random(1,20),11)
bigrass.Anchored = true
bigrass.BrickColor = colo
bigrass.Material = mate
bigrass.CanCollide = true
bigrass.CFrame = grl.CFrame * CFrame.new(0,-10,0)
coroutine.wrap(function()
local r1 = math.random(-3,3)
for i = 1, 20 do
bigrass.CFrame = bigrass.CFrame:lerp(bigrass.CFrame * CFrame.new(0,2,0) * CFrame.Angles(math.rad(r1),math.rad(r1),math.rad(r1)),.4)
swait()
end
end)()
coroutine.wrap(function()
wait(40)
local r2 = math.random(-3,3)
for i = 1, 100 do
bigrass.Transparency = bigrass.Transparency + .01
bigrass.CFrame = bigrass.CFrame:lerp(bigrass.CFrame * CFrame.new(0,-10,0) * CFrame.Angles(math.rad(r2),math.rad(r2),math.rad(r2)),.1)
swait()
end
bigrass:Destroy()
grl:Destroy()
end)()
end
end
end)()
for i = 1, 30 do
hum.CameraOffset = Vector3.new(math.random(-1,1),math.random(-1,1),math.random(-1,1))
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(.5,-3.5,0) * CFrame.Angles(math.rad(-0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(65),math.rad(0),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -1, 0) * CFrame.Angles(math.rad(-31), math.rad(0), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,-0.1,-0.3)*CFrame.Angles(math.rad(-103.8),math.rad(36),math.rad(31.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5,1.3,0.3)*CFrame.Angles(math.rad(-40.3),math.rad(-0.1),math.rad(0.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.4,0,-0.1)*CFrame.Angles(math.rad(-98.4),math.rad(-34.3),math.rad(-24))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.6,0.8,1.4)*CFrame.Angles(math.rad(57.4),math.rad(-12.1),math.rad(-7.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
removeuseless:AddItem(g1,.001)
tr1.Enabled = false
tr2.Enabled = false
hum.CameraOffset = Vector3.new(0,0,0)
ws = 29
attacking = false
debounce = false
elseif Press=='y' then
if mouse.Target ~= nil and mouse.Target.Parent ~= Character and mouse.Target.Parent.Parent ~= Character and mouse.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
local enemyhum = mouse.Target.Parent:FindFirstChildOfClass("Humanoid")
if enemyhum.Health < 1 then return end
local ETorso = enemyhum.Parent:FindFirstChild("Torso") or enemyhum.Parent:FindFirstChild("LowerTorso")
if (ETorso.Position - Torso.Position).magnitude < 10 then
if not equip then return end
if debounce then return end
debounce = true
attacking = true
SOUND(Torso,3475458279,5,false,1.2,10)
ws = 0
enemyhum.WalkSpeed = 0
local locatetor = Instance.new("Part",Torso)
locatetor.Size = Vector3.new(1,1,1)
locatetor.Anchored = true
locatetor.Transparency = 1
locatetor.CanCollide = false
locatetor.CFrame = Root.CFrame * CFrame.new(0,0,-5.5)
ETorso.CFrame = locatetor.CFrame * CFrame.Angles(0,math.rad(180),0)
for i = 1, 70 do
ETorso.CFrame = locatetor.CFrame * CFrame.Angles(0,math.rad(180),0)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-.4,-2.7,1.5) * CFrame.Angles(math.rad(9),math.rad(0),math.rad(15)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.1, 0) * CFrame.Angles(math.rad(0), math.rad(-65), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(0.6,0.4,0.9)*CFrame.Angles(math.rad(-56.1),math.rad(30.8),math.rad(-54.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.3,2.1,0.3)*CFrame.Angles(math.rad(5.2),math.rad(-51),math.rad(13.6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-0.6,0.1,1)*CFrame.Angles(math.rad(-73.4),math.rad(-12.9),math.rad(47))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.4,2,0.3)*CFrame.Angles(math.rad(-5.2),math.rad(31),math.rad(-1.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
for i = 1, 6 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(.5,-3.7,.5) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(0)) * CFrame.Angles(math.rad(-20),math.rad(15),0),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.25, 0) * CFrame.Angles(math.rad(0), math.rad(10), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(0.8,0.5,0.3)*CFrame.Angles(math.rad(-72.7),math.rad(28.1),math.rad(-0.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5,2,0.3)*CFrame.Angles(math.rad(0),math.rad(-26.4),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.9,0.4)*CFrame.Angles(math.rad(-89.8),math.rad(-7.6),math.rad(0.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5,1.9,-0.3)*CFrame.Angles(math.rad(-48.7),math.rad(27.2),math.rad(4.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
local bbo = Instance.new("Part",Torso)
bbo.Size = Vector3.new(3,3,3)
bbo.Anchored = true
bbo.CanCollide = false
bbo.Material = "Neon"
bbo.BrickColor = BrickColor.new("White")
bbo.Shape = "Ball"
bbo.Transparency = .2
bbo.CFrame = locatetor.CFrame
local bbo2 = bbo:Clone() bbo2.Parent = Torso bbo2.Transparency = .85 bbo2mesh = Instance.new("SpecialMesh",bbo2) bbo2mesh.MeshId = "rbxassetid://9982590" bbo2mesh.Scale = Vector3.new(2,2,2)
local bbo3 = bbo:Clone() bbo3.Parent = Torso bbo3.Transparency = .85 bbo3mesh = Instance.new("SpecialMesh",bbo3) bbo3mesh.MeshId = "rbxassetid://9982590" bbo3mesh.Scale = Vector3.new(2,2,2)
coroutine.wrap(function()
for i = 1, 20 do
bbo2.CFrame = bbo2.CFrame * CFrame.Angles(math.rad(0+math.random(7,14)),math.rad(0+math.random(16,21)),math.rad(0+math.random(23,29)))
bbo2mesh.Scale = bbo2mesh.Scale + Vector3.new(2,2,2)
bbo2.Transparency = bbo2.Transparency + .007
bbo3.CFrame = bbo3.CFrame * CFrame.Angles(math.rad(0+math.random(7,14)),math.rad(0+math.random(16,21)),math.rad(0+math.random(23,29)))
bbo3mesh.Scale = bbo3mesh.Scale + Vector3.new(1,1,1)
bbo3.Transparency = bbo3.Transparency + .007
bbo.Size = bbo.Size + Vector3.new(1.5,1.5,1.5)
bbo.Transparency = bbo.Transparency + .05
swait()
end
bbo3:Remove()
bbo2:Remove()
bbo:Destroy()
end)()
--
enemyhum.WalkSpeed = 16
for i = 1, 15 do
hum.CameraOffset = Vector3.new(math.random(-1,1),math.random(-1,1),math.random(-1,1))
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-1.2,-1.9,1.5) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-90)) * CFrame.Angles(math.rad(0),math.rad(-10),math.rad(10)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.25, 0) * CFrame.Angles(math.rad(0), math.rad(55), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.2,1.5,-0.5)*CFrame.Angles(math.rad(-95),math.rad(-38.9),math.rad(35.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.3,2.1,0.4)*CFrame.Angles(math.rad(9.5),math.rad(-45.4),math.rad(12.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-0.8,0.8,0.9)*CFrame.Angles(math.rad(-107.1),math.rad(-28.2),math.rad(30.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.4,2,0.5)*CFrame.Angles(math.rad(-6.1),math.rad(60.4),math.rad(0.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
hum.CameraOffset = Vector3.new(0,0,0)
ws = 29
attacking = false
debounce = false
end
end
elseif Press=='f' then
if mouse.Target ~= nil and mouse.Target.Parent ~= Character and mouse.Target.Parent.Parent ~= Character and mouse.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
local enemyhum = mouse.Target.Parent:FindFirstChildOfClass("Humanoid")
if enemyhum.Health < 1 then return end
local ETorso = enemyhum.Parent:FindFirstChild("Torso") or enemyhum.Parent:FindFirstChild("LowerTorso")
if (ETorso.Position - Torso.Position).magnitude < 4 then
if not equip then return end
if debounce then return end
debounce = true
attacking = true
ws = 0
enemyhum.WalkSpeed = 0
local locatetor = Instance.new("Part",Torso)
locatetor.Size = Vector3.new(1,1,1)
locatetor.Anchored = true
locatetor.Transparency = 1
locatetor.CanCollide = false
locatetor.CFrame = Root.CFrame * CFrame.new(0,0,-3)
ETorso.CFrame = locatetor.CFrame * CFrame.Angles(0,math.rad(180),0)
for i = 1, 20 do
ETorso.CFrame = locatetor.CFrame * CFrame.Angles(0,math.rad(180),0)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2, 0) * CFrame.Angles(math.rad(0), math.rad(80), math.rad(20)),.35)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(-0.2,2,0.2)*CFrame.Angles(math.rad(4.8),math.rad(-19.6),math.rad(31.1))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.4,0.3,1.4)*CFrame.Angles(math.rad(72.2),math.rad(23.3),math.rad(1.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
SOUND(ETorso,545219984,10,false,1,10)
for i = 1, 20 do
ETorso.CFrame = ETorso.CFrame:lerp(CFrame.new(locatetor.Position) *CFrame.new(0,0,1)* CFrame.Angles(math.rad(90),math.rad(90),0),.2)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2, 0) * CFrame.Angles(math.rad(0), math.rad(85), math.rad(60)),.35)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(-0.7,1.7,0.1)*CFrame.Angles(math.rad(8),math.rad(-16.6),math.rad(58.2))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.35)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(0.3,2.2,0)*CFrame.Angles(math.rad(-6.9),math.rad(-24.1),math.rad(-39.8))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.35)
swait()
end
local toweld = weldBetween(ETorso,locatetor)
toweld.C0 = CFrame.new(1,-.5,2.5) * CFrame.Angles(math.rad(90),math.rad(90),0)
for i = 1, 20 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-1.1 + .1 * math.sin(sine/16),1.6) * CFrame.Angles(0,math.rad(0),math.rad(-60 + 1 * math.sin(sine/16))),.2)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.2,0.2)*CFrame.Angles(math.rad(-96.2 + 2 * math.sin(sine/16)),math.rad(19 + 1 * math.sin(sine/16)),math.rad(4.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-60.7+3*math.sin(sine/16)),math.rad(-25 + 2 * math.sin(sine/16)),math.rad(5.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2 + -.1 * math.sin(sine/16), 0) * CFrame.Angles(math.rad(0), math.rad(30), math.rad(0)),.2)
RIGHTLEGLERP.C1 = RIGHTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(math.rad(0),0,0),.2)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-.4, 2 - .1 * math.sin(sine/16), .2) * CFrame.Angles(math.rad(-5), math.rad(30 + 0 * math.sin(sine/16)), math.rad(-5)), 0.2)
LEFTLEGLERP.C1 = LEFTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.55, 2.0 - .1 * math.sin(sine/16), .31) * CFrame.Angles(math.rad(5), math.rad(-20 + 0 * math.sin(sine/16)), math.rad(5)), 0.2)
swait()
end
for i = 1, 20 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(2,-1.7,.8) * CFrame.Angles(math.rad(0),math.rad(45),math.rad(60)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(35), math.rad(-72), math.rad(0)),.25)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.1,0.7,-0.6)*CFrame.Angles(math.rad(-94.8),math.rad(2.7),math.rad(45.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.4,1.2,1)*CFrame.Angles(math.rad(12.8),math.rad(-71),math.rad(-13.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-0.6,0.9,1.2)*CFrame.Angles(math.rad(-92.5),math.rad(-38.1),math.rad(51.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(0.4,2.2,-0.2)*CFrame.Angles(math.rad(48.9),math.rad(69.7),math.rad(-88.6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
tr1.Enabled = true
tr2.Enabled = true
coroutine.wrap(function()
pcall(function()
local bc = Instance.new("Part",Torso)
bc.CFrame = enemyhum.Parent.Head.CFrame
bc.Anchored = true
bc.CanCollide = false
bc.Size = Vector3.new(1,1,1)
bc.Transparency = 1
SOUND(bc,429400881,5,false,1,10)
--blood(bc,200)
enemyhum.Parent.Head:Destroy()
killtaunt()
for i = 1, 15 do
local meat = Instance.new("Part",Torso)
meat.BrickColor = BrickColor.new("Really red")
meat.Material = "Granite"
meat.Transparency = 0
meat.Anchored = false
meat.CanCollide = true
meat.Size = Vector3.new(.4,.4,.4)
meat.CFrame = bc.CFrame
coroutine.wrap(function()
for i = 1, 12 do
meat.CFrame = meat.CFrame:lerp(bc.CFrame * CFrame.new(math.random(-12,12),math.random(-12,12),math.random(-12,12)),.1)
swait()
end
wait(10)
for i = 1, 20 do
meat.Transparency = meat.Transparency + .05
swait()
end
meat:Destroy()
bc:Destroy()
end)()
end
end)
end)()
for i = 1, 20 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(.5,-3.5,0) * CFrame.Angles(math.rad(-0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(65),math.rad(0),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -1.2, 0) * CFrame.Angles(math.rad(-31), math.rad(-30), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,-0.1,-0.3)*CFrame.Angles(math.rad(-103.8),math.rad(36),math.rad(31.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5,1.3,0.3)*CFrame.Angles(math.rad(-40.3),math.rad(-0.1),math.rad(0.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.4,0,-0.1)*CFrame.Angles(math.rad(-98.4),math.rad(-34.3),math.rad(-24))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.6,0.8,1.4)*CFrame.Angles(math.rad(57.4),math.rad(-12.1),math.rad(-7.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
tr1.Enabled = false
tr2.Enabled = false
debounce = false
attacking = false
ws = 29
enemyhum.WalkSpeed = 16
end
end
elseif Press=='t' then
if not equip then return end
if debounce then return end
debounce = true
attacking = true
ws = 0
local god = {1707907547,1707907331,1707907822}
local supr14 = Instance.new("Part",Torso)
supr14.Anchored = false
supr14.CanCollide = false
supr14.Size = Vector3.new(1,1,1)
supr14.BrickColor = BrickColor.new("Gold")
supr14.Material = "Glass"
local supr14weld = weldBetween(supr14,rightlocation) supr14weld.C0 = supr14weld.C0 * CFrame.new(0,-1,0) * CFrame.Angles(math.rad(180),math.rad(-90),math.rad(-60))
local supr14m = Instance.new("SpecialMesh",supr14)
supr14m.Scale = Vector3.new(.06,.06,.06)
supr14m.MeshId = "rbxassetid://3517656385"
SOUND(supr14,1570569503,10,false,1.2,10)
local ran = god[math.random(1,#god)]
local m = Instance.new("Sound",supr14)
m.SoundId = "rbxassetid://"..ran
m.Volume = 8
m:Play()
for i = 1, 100 do
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(0.3,1.7,-0.9)*CFrame.Angles(math.rad(-34.4),math.rad(27.7),math.rad(-123.6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-1.1 + .1 * math.sin(sine/16),1.6) * CFrame.Angles(0,math.rad(0),math.rad(-60 + 1 * math.sin(sine/16))),.2)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.2,0.2)*CFrame.Angles(math.rad(-96.2 + 2 * math.sin(sine/16)),math.rad(19 + 1 * math.sin(sine/16)),math.rad(4.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2 + -.1 * math.sin(sine/16), 0) * CFrame.Angles(math.rad(0), math.rad(60), math.rad(0)),.2)
RIGHTLEGLERP.C1 = RIGHTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(math.rad(0),0,0),.2)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-.4, 2 - .1 * math.sin(sine/16), .2) * CFrame.Angles(math.rad(-5), math.rad(30 + 0 * math.sin(sine/16)), math.rad(-5)), 0.2)
LEFTLEGLERP.C1 = LEFTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.55, 2.0 - .1 * math.sin(sine/16), .31) * CFrame.Angles(math.rad(5), math.rad(-20 + 0 * math.sin(sine/16)), math.rad(5)), 0.2)
swait()
end
supr14:Destroy()
debounce = false
attacking = false
ws = 29
elseif Press=='r' then
if debounce then return end
if not equip then return end
debounce = true
attacking = true
tr1.Enabled = true
tr2.Enabled = true
SOUND(Torso,2101137,5,false,math.random(7,8)/10,10)
for i = 1, 80 do
ws = ws - .3625
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(1.5,-2.3,-.15) * CFrame.Angles(math.rad(-20),math.rad(90),math.rad(90))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.06)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2, 0) * CFrame.Angles(math.rad(45), math.rad(-45), math.rad(0))*CFrame.Angles(0,math.rad(0),0), 0.06)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(0.2,0,-1)*CFrame.Angles(math.rad(-136.6),math.rad(-4.7),math.rad(84.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.06)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.4,0.9,1.5)*CFrame.Angles(math.rad(30.2),math.rad(-47.9),math.rad(-2.6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.06)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0.4,0.4)*CFrame.Angles(math.rad(-105.6),math.rad(-6.7),math.rad(4.6))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.06)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.3,1.7,1.1)*CFrame.Angles(math.rad(59.4),math.rad(-53.4),math.rad(-6.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.06)
swait()
end
local bloc = Instance.new("Part",Torso)
bloc.Size = Vector3.new(1,1,1)
bloc.Anchored = true
bloc.CanCollide = false
bloc.Transparency = 1
bloc.CFrame = Root.CFrame * CFrame.new(0,-2.2,-4.8)
local didhit = false
local mate = nil
local colo = nil
local ray = Ray.new(bloc.Position, bloc.CFrame.Position + CFrame.new(0,-10,0).Position)
local tabd = {bloodfolder,Character}
local part, hitPosition = workspace:FindPartOnRayWithIgnoreList(ray, {bloodfolder,bloc,Character,blooddecal,blowd,Torso},false,true)
if part then
	didhit = true
mate = part.Material
colo = part.BrickColor
else
	didhit = false
end
if didhit then
coroutine.wrap(function()
local shockwave = Instance.new("Part", Torso)
shockwave.Size = Vector3.new(1,1,1)
shockwave.CanCollide = false
shockwave.Anchored = true
shockwave.Transparency = .4
shockwave.BrickColor = BrickColor.new("White")
shockwave.CFrame = CFrame.new(bloc.Position) * CFrame.new(0,-1.75,0)
local shockwavemesh = Instance.new("SpecialMesh", shockwave)
shockwavemesh.Scale = Vector3.new(4,.7,4)
shockwavemesh.MeshId = "rbxassetid://20329976"
local shockwave2 = Instance.new("Part", Torso)
shockwave2.Size = Vector3.new(1,1,1)
shockwave2.CanCollide = false
shockwave2.Anchored = true
shockwave2.Transparency = .4
shockwave2.BrickColor = BrickColor.new("White")
shockwave2.CFrame = CFrame.new(bloc.Position) * CFrame.new(0,-1.6,0)
local shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
shockwavemesh2.Scale = Vector3.new(4,.7,4)
shockwavemesh2.MeshId = "rbxassetid://20329976"
local shockwave3 = Instance.new("Part", Torso)
shockwave3.Size = Vector3.new(1,1,1)
shockwave3.CanCollide = false
shockwave3.Anchored = true
shockwave3.Transparency = .4
shockwave3.BrickColor = BrickColor.new("White")
shockwave3.CFrame = CFrame.new(bloc.Position) * CFrame.new(0,-1.75,0)
local shockwavemesh3 = Instance.new("SpecialMesh", shockwave3)
shockwavemesh3.Scale = Vector3.new(4,.7,4)
shockwavemesh3.MeshId = "rbxassetid://20329976"
local sonbox = Instance.new("Part",Torso)
sonbox.Size = Vector3.new(1,1,1)
sonbox.Anchored = true
sonbox.CanCollide = flase
sonbox.Transparency = 1
sonbox.CFrame = bloc.CFrame
SOUND(sonbox,1776706665,5,false,math.random(9,12)/10,12)
for i = 1, 80 do
shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0),math.rad(0+math.random(16,21)),0)
shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0),math.rad(0-math.random(13,16)),0)
shockwave3.CFrame = shockwave3.CFrame * CFrame.Angles(math.rad(0),math.rad(0-math.random(6,9)),0)
shockwave.Transparency = shockwave.Transparency + .009
shockwave2.Transparency = shockwave2.Transparency + .009
shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(2,2,2)
shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(4,1.5,4)
shockwavemesh3.Scale = shockwavemesh3.Scale + Vector3.new(3,.5,3)
shockwave3.Transparency = shockwave3.Transparency + .009
swait()
end
shockwave3:Remove()
shockwave:Remove()
shockwave2:Remove()
end)()
coroutine.wrap(function()
for i = 1, 30 do
local mv = Instance.new("Part",Torso)
mv.Size = Vector3.new(1,1,1)
mv.Anchored = true
mv.CanCollide = false
mv.Transparency = 1
mv.CFrame = bloc.CFrame * CFrame.new(math.random(-30,30),35,math.random(-30,30))
local dragh = math.random(4,6)
local mv2 = Instance.new("Part",Torso)
mv2.Size = Vector3.new(dragh,dragh,dragh)
mv2.BrickColor = colo
mv2.Material = mate
mv2.CanCollide = true
mv2.Anchored = false
mv2.CFrame = bloc.CFrame * CFrame.new(0,12.5,0)
MAKETRAIL(mv2,Vector3.new(.2,.2,0),Vector3.new(-.2,-.2,0),1.5,ColorSequence.new(BrickColor.new("White").Color,BrickColor.new("Really black").Color))
coroutine.wrap(function()
velo(mv2,"l",mv.Position,325)
wait(.25)
mv2.l:Remove()
mv:Remove()
wait(10)
for i = 1, 40 do
mv2.Transparency = mv2.Transparency + .025
swait()
end
mv2:Remove()
end)()
end
end)()
---checking for error---
coroutine.wrap(function()
local b = Instance.new("Part",Torso)
b.Size = Vector3.new(1,1,1)
b.Anchored = true
b.CanCollide = false
b.CFrame = bloc.CFrame
b.Transparency = 1
local t = 0
for i = 1, 36 do
t = t + 10
local b2 = b:Clone() b2.Parent = Torso b2.Transparency = 1
b2.CFrame = b.CFrame * CFrame.Angles(0,math.rad(t),math.rad(0)) * CFrame.new(10,0,0) 
local grassblock = Instance.new("Part",Torso)
grassblock.Size = Vector3.new(3.5,3.5,3.5)
grassblock.BrickColor = colo
grassblock.Material = mate
grassblock.Anchored = true
grassblock.CanCollide = true
grassblock.CFrame = b2.CFrame * CFrame.Angles(math.rad(math.random(-180,180)),math.rad(math.random(-180,180)),math.rad(math.random(-180,180)))
coroutine.wrap(function()
wait(15)
for i = 1, 20 do
grassblock.Transparency = grassblock.Transparency + .05
swait()
end
grassblock:Destroy()
end)()
end
wait(.1)
t = 0
for i = 1, 36 do
t = t + 10
local b2 = b:Clone() b2.Parent = Torso b2.Transparency = 1
b2.CFrame = b.CFrame * CFrame.Angles(0,math.rad(t),math.rad(0)) * CFrame.new(14,0,0) 
local grassblock = Instance.new("Part",Torso)
grassblock.Size = Vector3.new(7,7,7)
grassblock.BrickColor = colo
grassblock.Material = mate
grassblock.Anchored = true
grassblock.CanCollide = true
grassblock.CFrame = b2.CFrame * CFrame.Angles(math.rad(math.random(-180,180)),math.rad(math.random(-180,180)),math.rad(math.random(-180,180)))
coroutine.wrap(function()
wait(15)
for i = 1, 20 do
grassblock.Transparency = grassblock.Transparency + .05
swait()
end
grassblock:Destroy()
end)()
end
bloc:Remove()
end)()
local bbo = Instance.new("Part",Torso)
bbo.Size = Vector3.new(3,3,3)
bbo.Anchored = true
bbo.CanCollide = false
bbo.Material = "Neon"
bbo.BrickColor = BrickColor.new("White")
bbo.Shape = "Ball"
bbo.Transparency = .2
bbo.CFrame = bloc.CFrame
local bbo2 = bbo:Clone() bbo2.Parent = Torso bbo2.Transparency = .85 bbo2mesh = Instance.new("SpecialMesh",bbo2) bbo2mesh.MeshId = "rbxassetid://9982590" bbo2mesh.Scale = Vector3.new(2,2,2)
local bbo3 = bbo:Clone() bbo3.Parent = Torso bbo3.Transparency = .85 bbo3mesh = Instance.new("SpecialMesh",bbo3) bbo3mesh.MeshId = "rbxassetid://9982590" bbo3mesh.Scale = Vector3.new(2,2,2)
coroutine.wrap(function()
for i = 1, 20 do
bbo2.CFrame = bbo2.CFrame * CFrame.Angles(math.rad(0+math.random(7,14)),math.rad(0+math.random(16,21)),math.rad(0+math.random(23,29)))
bbo2mesh.Scale = bbo2mesh.Scale + Vector3.new(4,4,4)
bbo2.Transparency = bbo2.Transparency + .007
bbo3.CFrame = bbo3.CFrame * CFrame.Angles(math.rad(0+math.random(7,14)),math.rad(0+math.random(16,21)),math.rad(0+math.random(23,29)))
bbo3mesh.Scale = bbo3mesh.Scale + Vector3.new(2,2,2)
bbo3.Transparency = bbo3.Transparency + .007
bbo.Size = bbo.Size + Vector3.new(3,3,3)
bbo.Transparency = bbo.Transparency + .05
swait()
end
bbo3:Remove()
bbo2:Remove()
bbo:Destroy()
end)()

end
for i = 1, 30 do
hum.CameraOffset = Vector3.new(math.random(-1,1),math.random(-1,1),math.random(-1,1))
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(.5,-3.5,0) * CFrame.Angles(math.rad(-0),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(65),math.rad(0),math.rad(0)),.3)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -1, 0) * CFrame.Angles(math.rad(-31), math.rad(0), math.rad(0)), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,-0.1,-0.3)*CFrame.Angles(math.rad(-103.8),math.rad(36),math.rad(31.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5,1.3,0.3)*CFrame.Angles(math.rad(-40.3),math.rad(-0.1),math.rad(0.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.4,0,-0.1)*CFrame.Angles(math.rad(-98.4),math.rad(-34.3),math.rad(-24))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.6,0.8,1.4)*CFrame.Angles(math.rad(57.4),math.rad(-12.1),math.rad(-7.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
tr1.Enabled = false
tr2.Enabled = false
hum.CameraOffset = Vector3.new(0,0,0)
ws = 29
attacking = false
debounce = false
elseif Press=='e' then
if not equip then return end
if debounce then return end
debounce = true
attacking = true
tr1.Enabled = true
tr2.Enabled = true
ws = 6
local z = 0
local z2 = 0
for i = 1, 325 do
z2 = z2 + .1
ws = ws + z2/50
z = z + z2
--Hit = damagealll(5,wmain.Position)
--for _,v in pairs(Hit) do
--if v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health > 0 then
--slachtoffer = v:FindFirstChildOfClass("Humanoid")
--if not didhit then
--takeDamage(slachtoffer,math.random(11,20))
--SOUND(torso,2801263,5,false,math.random(7,8)/10,6)
--end
--vel = Instance.new("BodyVelocity",v:FindFirstChild("HumanoidRootPart") or v:FindFirstChild("HumanoidRootPart")) 
--vel.maxForce = Vector3.new(9999999999999,9999999999999,9999999999999)
--torso = v:FindFirstChild("HumanoidRootPart") or v:FindFirstChild("HumanoidRootPart")
--vel.velocity = CFrame.new(wmain.Position,torso.Position).lookVector*40
--removeuseless:AddItem(vel,.1)
--blood(torso,200)
--end
--end
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-3.5,-.5) * CFrame.Angles(math.rad(-0),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(110),math.rad(0),math.rad(0)),.3)
ROOTLERP.C1 = ROOTLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(math.rad(-20),math.rad(0),0),.2)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2, 0) * CFrame.Angles(math.rad(0), math.rad(z), math.rad(0))*CFrame.Angles(0,math.rad(0),0), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.3,0.1,0.3)*CFrame.Angles(math.rad(-66.5),math.rad(37.7),math.rad(1.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.3,1.3,0.9)*CFrame.Angles(math.rad(33.1),math.rad(-0.1),math.rad(7.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-74.5),math.rad(-37.1),math.rad(-6.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.4,2.1,0)*CFrame.Angles(math.rad(0.6),math.rad(5),math.rad(-7.2))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
for i = 1, 350 do
z = z + z2
--Hit = damagealll(8,wmain.Position)
--for _,v in pairs(Hit) do
--if v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health > 0 then
--slachtoffer = v:FindFirstChildOfClass("Humanoid")
--if not didhit then
--takeDamage(slachtoffer,math.random(20,29))
--SOUND(torso,2801263,5,false,math.random(7,8)/10,6)
--end
--vel = Instance.new("BodyVelocity",v:FindFirstChild("Torso") or v:FindFirstChild("UpperTorso")) 
--vel.maxForce = Vector3.new(9999999999999,9999999999999,9999999999999)
--torso = v:FindFirstChild("Torso") or v:FindFirstChild("UpperTorso")
--vel.velocity = CFrame.new(wmain.Position,torso.Position).lookVector*125
--removeuseless:AddItem(vel,.1)
--blood(torso,200)
--end
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-3.5,-.5) * CFrame.Angles(math.rad(-0),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(110),math.rad(0),math.rad(0)),.3)
ROOTLERP.C1 = ROOTLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(math.rad(-20),math.rad(0),0),.2)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2, 0) * CFrame.Angles(math.rad(0), math.rad(z), math.rad(0))*CFrame.Angles(0,math.rad(0),0), 0.3)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.3,0.1,0.3)*CFrame.Angles(math.rad(-66.5),math.rad(37.7),math.rad(1.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.3,1.3,0.9)*CFrame.Angles(math.rad(33.1),math.rad(-0.1),math.rad(7.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-74.5),math.rad(-37.1),math.rad(-6.7))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.4,2.1,0)*CFrame.Angles(math.rad(0.6),math.rad(5),math.rad(-7.2))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
swait()
end
tr1.Enabled = false
tr2.Enabled = false
ROOTLERP.C1 = CFrame.new(0,0,0) * CFrame.Angles(math.rad(0),math.rad(0),0)
debounce = false
attacking = false
elseif Press=='q' then
if debounce then return end
debounce = true
if equip then
equipping = true
SOUND(wmain,12222225,4,false,.5,10)
for i = 1, 20 do
doomtheme.Volume = doomtheme.Volume - .15
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-2.45,-.8,-.45) * CFrame.Angles(0,0,math.rad(-50)),.12)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5,0.5,0.4)*CFrame.Angles(math.rad(8.4),math.rad(-24.5),math.rad(19.2))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.1,1.4,0)*CFrame.Angles(math.rad(170.6),math.rad(-0.9),math.rad(31.1))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
swait()
end
doomtheme.Volume = 0
for i = 1, 20 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-.615,-.8,-1.25) * CFrame.Angles(0,0,math.rad(-130)),.12)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.4,0.3,0.3)*CFrame.Angles(math.rad(156.4),math.rad(3.2),math.rad(-16.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.3,1,0.4)*CFrame.Angles(math.rad(0.3),math.rad(-21),math.rad(35.2))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
swait()
end
whandelweld.C0 = CFrame.new(0,-.6,-.75) * CFrame.Angles(math.rad(-10),math.rad(0),math.rad(-135))
equipping = false
equip = false
debounce = false
else
equipping = true
SOUND(wmain,12222225,4,false,.6,10)
taunt()
for i = 1, 20 do
doomtheme.Volume = doomtheme.Volume + .15
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.7,0.4)*CFrame.Angles(math.rad(-14.6),math.rad(-23.3),math.rad(21.3))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(-2.25,-.8,-.8) * CFrame.Angles(0,0,math.rad(-50)),.12)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.4,0.9,-0.4)*CFrame.Angles(math.rad(156.1),math.rad(16.5),math.rad(21))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
swait()
end
doomtheme.Volume = 3
for i = 1, 20 do
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-1.1 + .1 * math.sin(sine/12),1.6) * CFrame.Angles(0,math.rad(0),math.rad(-60)),.12)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.2,0.2)*CFrame.Angles(math.rad(-96.2 + 2 * math.sin(sine/12)),math.rad(19 + 1 * math.sin(sine/12)),math.rad(4.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-60.7+3*math.sin(sine/12)),math.rad(-25 + 2 * math.sin(sine/12)),math.rad(5.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.12)
swait()
end
equipping = false
equip = true
debounce = false
attacking = false
end
end
end)

checks1 = coroutine.wrap(function() -------Checks
while true do
hf = ray(Root.Position,(CFrame.new(Root.Position,Root.Position+Vector3.new(0,-1,0))).lookVector,4 * 1,Character)
if Root.Velocity.y > 5 and hf == nil then
position = "Jump"
elseif Root.Velocity.y < -5 and hf == nil then
position = "Falling"
elseif Root.Velocity.Magnitude < 5 and hf ~= nil then
position = "Idle"
elseif Root.Velocity.Magnitude > 5 and hf ~= nil then
position = "Walking"
else
end
wait()
end
end)
checks1()

OrgnC0 = Neck.C0
local movelimbs = coroutine.wrap(function()
while wait() do
TrsoLV = Torso.CFrame.lookVector
Dist = nil
Diff = nil
if not MseGuide then
print("Failed to recognize")
else
local _, Point = Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true)
Dist = (Head.CFrame.p-Point).magnitude
Diff = Head.CFrame.Y-Point.Y
local _, Point2 = Workspace:FindPartOnRay(Ray.new(LeftArm.CFrame.p, mouse.Hit.lookVector), Workspace, false, true)
Dist2 = (LeftArm.CFrame.p-Point).magnitude
Diff2 = LeftArm.CFrame.Y-Point.Y
HEADLERP.C0 = CFrame.new(0, -1.5, -0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
Neck.C0 = Neck.C0:lerp(OrgnC0*CFrame.Angles((math.tan(Diff/Dist)*1), 0, (((Head.CFrame.p-Point).Unit):Cross(Torso.CFrame.lookVector)).Y*1), .25)
end
end
end)
movelimbs()
immortal = {}
for i,v in pairs(Character:GetDescendants()) do
	if v:IsA("BasePart") and v.Name ~= "lmagic" and v.Name ~= "rmagic" then
		if v ~= Root and v ~= Torso and v ~= Head and v ~= RightArm and v ~= LeftArm and v ~= RightLeg and v.Name ~= "lmagic" and v.Name ~= "rmagic" and v ~= LeftLeg then
			v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
		end
		table.insert(immortal,{v,v.Parent,v.Material,v.Color,v.Transparency})
	elseif v:IsA("JointInstance") then
		table.insert(immortal,{v,v.Parent,nil,nil,nil})
	end
end
for e = 1, #immortal do
if immortal[e] ~= nil then
local STUFF = immortal[e]
local PART = STUFF[1]
local PARENT = STUFF[2]
local MATERIAL = STUFF[3]
local COLOR = STUFF[4]
local TRANSPARENCY = STUFF[5]
if levitate then
if PART.ClassName == "Part" and PART ~= Root and PART.Name ~= eyo1 and PART.Name ~= eyo2 and PART.Name ~= "lmagic" and PART.Name ~= "rmagic" then
PART.Material = MATERIAL
PART.Color = COLOR
PART.Transparency = TRANSPARENCY
end
PART.AncestryChanged:connect(function()
PART.Parent = PARENT
end)
else
if PART.ClassName == "Part" and PART ~= Root and PART.Name ~= "lmagic" and PART.Name ~= "rmagic" then
PART.Material = MATERIAL
PART.Color = COLOR
PART.Transparency = TRANSPARENCY
end
PART.AncestryChanged:connect(function()
PART.Parent = PARENT
end)
end
end
end
function immortality()
for e = 1, #immortal do
if immortal[e] ~= nil then
local STUFF = immortal[e]
local PART = STUFF[1]
local PARENT = STUFF[2]
local MATERIAL = STUFF[3]
local COLOR = STUFF[4]
local TRANSPARENCY = STUFF[5]
if PART.ClassName == "Part" and PART == Root then
PART.Material = MATERIAL
PART.Color = COLOR
PART.Transparency = TRANSPARENCY
end
if PART.Parent ~= PARENT then
hum:Remove()
PART.Parent = PARENT
hum = Instance.new("Humanoid",Character)
hum.Name = "noneofurbusiness"
end
end
end
end
coroutine.wrap(function()
while true do
hum:SetStateEnabled("Dead",false) hum:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
if hum.Health < .1 then
--immortality()
end
swait()
end
end)()
----------
align(H,whandel)
Hats.Main.Handle.AccessoryWeld:Remove()
H.Attachment.Orientation = Vector3.new(0, 0, -0)
for _,v in pairs(whandel:GetChildren()) do
	if v.ClassName:find("Attachment") then
		v.Position = Vector3.new(-0.1, -0.5, 0)
	end
end

alignbroke(HH,char["Right Leg"])
HH.HatAttachment:Remove()
HH.AccessoryWeld:Remove()
HH.Attachment.Orientation = Vector3.new(-90, -180, 0)
for _,v in pairs(char["Right Leg"]:GetChildren()) do
	if v.ClassName:find("Attachment") then
		v.Position = Vector3.new(0,0,0)
	end
end


local meh = game:GetService("Players").LocalPlayer.Character["MARTILLO"].Handle.Position
local hrpz = game.workspace[plr.Name]["Right Leg"]
hrpz.Transparency = 0.1
hrpz.Anchored = false
hrpz.AccessoryWeld:Destroy()

local bp = Instance.new("BodyPosition", hrpz)
bp.D = 9999999
bp.P = 999999999999999
bp.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
local flinger = Instance.new("BodyAngularVelocity",hrpz)
flinger.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
flinger.P = 1000000000000000000000000000
flinger.AngularVelocity = Vector3.new(9e9,9e9,9e9)

game:GetService("RunService").RenderStepped:Connect(function()
bp.Position = wmain.Position
end)
--------------

local anims = coroutine.wrap(function()
while true do
settime = 0.05
sine = sine + change
if position == "Jump" and not attacking then
change = 1
if equip then
if not equipping then
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-1.1 + .1 * math.sin(sine/8),1.6) * CFrame.Angles(0,math.rad(0),math.rad(-60 + 1 * math.sin(sine/8))),.2)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.2,0.2)*CFrame.Angles(math.rad(-96.2 + 2 * math.sin(sine/8)),math.rad(19 + 1 * math.sin(sine/8)),math.rad(4.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-60.7+3*math.sin(sine/8)),math.rad(-25 + 2 * math.sin(sine/8)),math.rad(5.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
end
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-20), math.rad(0), math.rad(0)), 0.09)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(0)), 0.2)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5, 1.0, .9) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.2)
else
if not equipping then
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5, .15, 0) * CFrame.Angles(math.rad(10), math.rad(2), math.rad(10)), 0.2)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0.5,0.1)*CFrame.Angles(math.rad(167.5),math.rad(1.7),math.rad(-4.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
end
ROOTLERP.C1 = ROOTLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.2)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-20), math.rad(0), math.rad(0)), 0.09)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(0)), 0.2)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5, 1.0, .9) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.2)
end
elseif position == "Falling" and not attacking then
change = 1
if equip then
if not equipping then
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-1.1 + .1 * math.sin(sine/8),1.6) * CFrame.Angles(0,math.rad(0),math.rad(-60 + 1 * math.sin(sine/8))),.2)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.2,0.2)*CFrame.Angles(math.rad(-96.2 + 2 * math.sin(sine/8)),math.rad(19 + 1 * math.sin(sine/8)),math.rad(4.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-60.7+3*math.sin(sine/8)),math.rad(-25 + 2 * math.sin(sine/8)),math.rad(5.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
end
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.09)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.54, 1.4 + .1 * math.sin(sine/12), .4) * CFrame.Angles(math.rad(9 + 2 * math.cos(sine/12)), math.rad(0), math.rad(0)), 0.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.54, 2 + .02 * math.sin(sine/12), 0.2 + .1 * math.sin(sine/12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine/12)), math.rad(20), math.rad(0)), 0.25)
else
ROOTLERP.C1 = ROOTLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.2)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.09)
if not equipping then
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5,.94 + .02 * math.sin(sine/12),-0) * CFrame.Angles(math.rad(28 + 5 * math.sin(sine/12)),math.rad(0),math.rad(45)), 0.2)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0.5,0.1)*CFrame.Angles(math.rad(167.5),math.rad(1.7),math.rad(-4.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
end
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.54, 1.4 + .1 * math.sin(sine/12), .4) * CFrame.Angles(math.rad(9 + 2 * math.cos(sine/12)), math.rad(0), math.rad(0)), 0.25)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.54, 2 + .02 * math.sin(sine/12), 0.2 + .1 * math.sin(sine/12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine/12)), math.rad(20), math.rad(0)), 0.25)
end
elseif position == "Walking" and not attacking then
change = 1
walking = true
ws = 29
local plant2 = hum.MoveDirection*Torso.CFrame.LookVector
local plant3 = hum.MoveDirection*Torso.CFrame.RightVector
local plant = plant2.Z + plant2.X
local plant4 = plant3.Z + plant3.X
if equip then
if not equipping then
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-1.1 + .1 * math.sin(sine/8),1.6) * CFrame.Angles(0,math.rad(0),math.rad(-60 + 1 * math.sin(sine/8))),.2)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.2,0.2)*CFrame.Angles(math.rad(-96.2 + 2 * math.sin(sine/8)),math.rad(19 + 1 * math.sin(sine/8)),math.rad(4.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-60.7+3*math.sin(sine/8)),math.rad(-25 + 2 * math.sin(sine/8)),math.rad(5.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
end
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.3 + 0.31*math.sin(sine/3), 0) * CFrame.Angles(math.rad(plant-plant/5)*-20, math.rad(-plant4 - -plant4/5*math.sin(sine/6))*35, math.rad(-plant4 - plant4*15) + Root.RotVelocity.Y / 30) * CFrame.Angles(0,math.rad(12 * -math.cos(sine/6)), 0),.1)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.52, 1.62 - .54 * math.cos(sine/6)/2.8,.2 - .5 * math.sin(sine/6)) * CFrame.Angles(math.rad(-20 * -plant - plant*math.sin(sine/6)*60), math.rad(-plant4 - -plant4/5*math.sin(sine/6)*40),math.rad(-plant4 - plant4*math.sin(sine/6)*20)), 0.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.52, 1.62 + .54 * math.cos(sine/6)/2.8,.2 + .5 * math.sin(sine/6)) * CFrame.Angles(math.rad(-20 * -plant - plant*math.sin(sine/6)*-60), math.rad(-plant4 - -plant4/5*math.sin(sine/6)*40), math.rad(-plant4 - -plant4*math.sin(sine/6)*20)), 0.3)
else
ROOTLERP.C1 = ROOTLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.2)
if not equipping then
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0.5,0.1)*CFrame.Angles(math.rad(167.5),math.rad(1.7),math.rad(-4.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.3 - .3 * math.sin(sine/6),.45 -.45 * math.sin(sine/6),-.3 + .26*math.sin(sine/6)) * CFrame.Angles(math.rad(75*-math.sin(sine/6)),math.rad(30 + 40*math.sin(sine/6)),math.rad(10, math.sin(-20 * math.sin(sine/4)))),.3)
end
LEFTLEGLERP.C1 = LEFTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.1)
RIGHTLEGLERP.C1 = RIGHTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(math.rad(0),0,0),.1)
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.3 + 0.31*math.sin(sine/3), 0) * CFrame.Angles(math.rad(plant-plant/5)*-20, math.rad(-plant4 - -plant4/5*math.sin(sine/6))*35, math.rad(-plant4 - plant4*15) + Root.RotVelocity.Y / 30) * CFrame.Angles(0,math.rad(12 * -math.cos(sine/6)), 0),.1)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.52, 1.62 - .54 * math.cos(sine/6)/2.8,.2 - .5 * math.sin(sine/6)) * CFrame.Angles(math.rad(-20 * -plant - plant*math.sin(sine/6)*60), math.rad(-plant4 - -plant4/5*math.sin(sine/6)*40),math.rad(-plant4 - plant4*math.sin(sine/6)*20)), 0.3)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.52, 1.62 + .54 * math.cos(sine/6)/2.8,.2 + .5 * math.sin(sine/6)) * CFrame.Angles(math.rad(-20 * -plant - plant*math.sin(sine/6)*-60), math.rad(-plant4 - -plant4/5*math.sin(sine/6)*40), math.rad(-plant4 - -plant4*math.sin(sine/6)*20)), 0.3)
end
elseif position == "Idle" and not attacking then
change = 1
if equip then
if not equipping then
whandelweld.C0 = whandelweld.C0:lerp(CFrame.new(0,-1.1 + .1 * math.sin(sine/16),1.6) * CFrame.Angles(0,math.rad(0),math.rad(-60 + 1 * math.sin(sine/16))),.2)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.4,0.2,0.2)*CFrame.Angles(math.rad(-96.2 + 2 * math.sin(sine/16)),math.rad(19 + 1 * math.sin(sine/16)),math.rad(4.5))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.3,0.1,0.2)*CFrame.Angles(math.rad(-60.7+3*math.sin(sine/16)),math.rad(-25 + 2 * math.sin(sine/16)),math.rad(5.4))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
end
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2 + -.1 * math.sin(sine/16), 0) * CFrame.Angles(math.rad(0), math.rad(30), math.rad(0)),.2)
RIGHTLEGLERP.C1 = RIGHTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(math.rad(0),0,0),.2)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-.4, 2 - .1 * math.sin(sine/16), .2) * CFrame.Angles(math.rad(-5), math.rad(30 + 0 * math.sin(sine/16)), math.rad(-5)), 0.2)
LEFTLEGLERP.C1 = LEFTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.55, 2.0 - .1 * math.sin(sine/16), .31) * CFrame.Angles(math.rad(5), math.rad(-20 + 0 * math.sin(sine/16)), math.rad(5)), 0.2)
else
ROOTLERP.C1 = ROOTLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.2)
if not equipping then
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.55,.3+.08*math.sin(sine/16),.02 * -math.sin(sine/16)) * CFrame.Angles(math.rad(5 * math.sin(sine/16)),math.rad(0),math.rad(15 + 3 * math.sin(sine/16))), 0.2)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5,0.5,0.1)*CFrame.Angles(math.rad(167.5),math.rad(1.7),math.rad(-4.9))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)),.25)
end
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0, -.2 + -.1 * math.sin(sine/16), 0) * CFrame.Angles(math.rad(0), math.rad(30), math.rad(0)),.2)
RIGHTLEGLERP.C1 = RIGHTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(math.rad(0),0,0),.2)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-.4, 2 - .1 * math.sin(sine/16), .2) * CFrame.Angles(math.rad(-5), math.rad(30 + 0 * math.sin(sine/16)), math.rad(-5)), 0.2)
LEFTLEGLERP.C1 = LEFTLEGLERP.C1:lerp(CFrame.new(0,0,0) * CFrame.Angles(0,0,0),.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.55, 2.0 - .1 * math.sin(sine/16), .31) * CFrame.Angles(math.rad(5), math.rad(-20 + 0 * math.sin(sine/16)), math.rad(5)), 0.2)
end
end
swait()
end
end)
anims()
warn("Brutal legend. Made by Supr14")
end)


AnimationSection:NewButton("NULLWARE ANIMATIONS", "injects nullware animations hub", function()
    getgenv().Theme = "Blue" -- To change the UI Theme, set this to one of the following options: "Red", "Purple", "Blue", "Green", "Yellow"
loadstring(game:HttpGet("https://gist.githubusercontent.com/M6HqVBcddw2qaN4s/2d722888a388017c18028cd434c43a25/raw/dcccf1027fe4b90780e47767aaf584389c9d7771/EULma3fU90PUOKUn?identifier=".. (function()local a=""for b=1,256 do local c=math.random(1,3)a=a..string.char(c==1 and math.random(48,57)or c==2 and math.random(97,122)or c==3 and math.random(65,90))end;return a end)()))()
end)

MainSection:NewButton("infinite yield", "injects infinite yield", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

MainSection:NewButton("car script", "make you go vroom (can be used with anything)", function()
    --compatibility for games who change service names
local Playr = game:GetService("Players")
local Run = game:GetService("RunService")
local Core = game:GetService("CoreGui")
local LocalPlayer = Playr.LocalPlayer

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Lozarth/IreXion-UI-Library/main/IreXion.lua"))()

local Gui = Library:AddGui({
	Title = {"FE Car", "Made by Xenon"},
	ThemeColor = Color3.fromRGB(0,91,150),
	ToggleKey = Enum.KeyCode.RightShift,
})

local Tab = Gui:AddTab("Main")

local Category = Tab:AddCategory("Main")

local Label = Category:AddLabel("Go into R6 for this script to work.")

local Button = Category:AddButton("Enable FE Car", function()
	LocalPlayer.Character.Humanoid.WalkSpeed=70 LocalPlayer.Character.Humanoid.JumpPower=0.0001 Float_Height="-1.03" AnimationId="129342287" local a=Instance.new("Animation") a.AnimationId="rbxassetid://"..AnimationId local a=LocalPlayer.Character.Humanoid:LoadAnimation(a) a:Play() a:AdjustSpeed(1) for a,a in pairs(LocalPlayer.Character:GetDescendants())do if a.ClassName=="Part"then a.CustomPhysicalProperties=PhysicalProperties.new(0,0,0)end end local a=1 G=game _=wait p=G:GetService("Players").LocalPlayer.Character p:FindFirstChild("Humanoid").HipHeight=Float_Height _(1.5) t=.4 for a=1,a do repeat p:FindFirstChild("Humanoid").HipHeight=Float_Height-n _(t) p:FindFirstChild("Humanoid").HipHeight=Float_Height+n _(t)until p:FindFirstChild("Humanoid").Health==0 end
end)

local Category = Tab:AddCategory("Settings")

local Box = Category:AddBox("Slide", function(str)
	for a,a in pairs(LocalPlayer.Character:GetDescendants())do if a.ClassName=="Part"then a.CustomPhysicalProperties=PhysicalProperties.new(str,0,0)end end 
end)

local Box = Category:AddBox("Hipheight", function(str)
	Float_Height=str local a=1 G=game _=wait p=G:GetService("Players").LocalPlayer.Character p:FindFirstChild("Humanoid").HipHeight=Float_Height _(1.5) t=.4 for a=1,a do repeat p:FindFirstChild("Humanoid").HipHeight=Float_Height-n _(t) p:FindFirstChild("Humanoid").HipHeight=Float_Height+n _(t)until p:FindFirstChild("Humanoid").Health==0 end
end)

local Slider = Category:AddSlider("Walkspeed", 1, 500, 16, function(val)
	LocalPlayer.Character.Humanoid.WalkSpeed = val
end)

local Category = Tab:AddCategory("Settings Presets")

local Button = Category:AddButton("Default Car Settings Preset", function()
	for a,a in pairs(LocalPlayer.Character:GetDescendants())do if a.ClassName=="Part"then a.CustomPhysicalProperties=PhysicalProperties.new(0,0,0)end end
	LocalPlayer.Character.Humanoid.WalkSpeed = 70
	Float_Height="-1.03" local a=1 G=game _=wait p=G:GetService("Players").LocalPlayer.Character p:FindFirstChild("Humanoid").HipHeight=Float_Height _(1.5) t=.4 for a=1,a do repeat p:FindFirstChild("Humanoid").HipHeight=Float_Height-n _(t) p:FindFirstChild("Humanoid").HipHeight=Float_Height+n _(t)until p:FindFirstChild("Humanoid").Health==0 end
end)

local Button = Category:AddButton("Extreme Car Settings Preset", function()
	for a,a in pairs(LocalPlayer.Character:GetDescendants())do if a.ClassName=="Part"then a.CustomPhysicalProperties=PhysicalProperties.new(0.5,0,0)end end
	LocalPlayer.Character.Humanoid.WalkSpeed = 500
	Float_Height="-1.03" local a=1 G=game _=wait p=G:GetService("Players").LocalPlayer.Character p:FindFirstChild("Humanoid").HipHeight=Float_Height _(1.5) t=.4 for a=1,a do repeat p:FindFirstChild("Humanoid").HipHeight=Float_Height-n _(t) p:FindFirstChild("Humanoid").HipHeight=Float_Height+n _(t)until p:FindFirstChild("Humanoid").Health==0 end
end)

if game.PlaceId == 2041312716 then
local Tab = Gui:AddTab("Ragdoll Engine")

local Category = Tab:AddCategory("Ragdoll Engine Features")
local Button = Category:AddButton("Push Aura", function()
    
Run.RenderStepped:Connect(function()
        LocalPlayer.Character.Push.PushEvent:FireServer()
	end)
end)

local Label = Category:AddLabel("Useful for flinging people when you hit them with your car")
local Label = Category:AddLabel("Or just flinging people who come close.")
local Label = Category:AddLabel("Equip Push tool before clicking to work.")

local Button = Category:AddButton("Anti-Ragdoll", function()
	LocalPlayer.Character:FindFirstChild("Local Ragdoll"):Destroy()
end)
end

local Tab = Gui:AddTab("Discord")

local Category = Tab:AddCategory("Discord")

local Button = Category:AddButton("Join Discord", function()
    setclipboard("https://discord.gg/VT7sEppfRp")
    Library:Notify("Invite prompted! If it did not work the invite was copied to your clipboard.")
    local json = {
   ["cmd"] = "INVITE_BROWSER",
   ["args"] = {
       ["code"] = "VT7sEppfRp"
   },
   ["nonce"] = 'a'
}
spawn(function()
   print(syn.request({
       Url = 'http://127.0.0.1:6463/rpc?v=1',
       Method = 'POST',
       Headers = {
           ['Content-Type'] = 'application/json',
           ['Origin'] = 'https://discord.com'
       },
       Body = game:GetService('HttpService'):JSONEncode(json),
   }).Body)
end)
end)

local Tab = Gui:AddTab("Close")

local Category = Tab:AddCategory("Close")

local Button = Category:AddButton("Close GUI", function()
	Core["FE Car Made by Xenon"]:Destroy()
end)

Library:Notify("Join Discord server?", function(bool)
	if bool == true then
		setclipboard("https://discord.gg/VT7sEppfRp")
    Library:Notify("Invite prompted! If it did not work the invite was copied to your clipboard.")
    local json = {
   ["cmd"] = "INVITE_BROWSER",
   ["args"] = {
       ["code"] = "VT7sEppfRp"
   },
   ["nonce"] = 'a'
}
spawn(function()
   print(syn.request({
       Url = 'http://127.0.0.1:6463/rpc?v=1',
       Method = 'POST',
       Headers = {
           ['Content-Type'] = 'application/json',
           ['Origin'] = 'https://discord.com'
       },
       Body = game:GetService('HttpService'):JSONEncode(json),
   }).Body)
end)
end
end)
end)

AnimationSection:NewButton("flip script Z, X, C", "make you gymnast", function()
    wait(5)

--[[ Info ]]--

local ver = "2.00"
local scriptname = "feFlip"


--[[ Keybinds ]]--

local FrontflipKey = Enum.KeyCode.Z
local BackflipKey = Enum.KeyCode.X
local AirjumpKey = Enum.KeyCode.C


--[[ Dependencies ]]--

local ca = game:GetService("ContextActionService")
local zeezy = game:GetService("Players").LocalPlayer
local h = 0.0174533
local antigrav


--[[ Functions ]]--

function zeezyFrontflip(act,inp,obj)
	if inp == Enum.UserInputState.Begin then
		zeezy.Character.Humanoid:ChangeState("Jumping")
		wait()
		zeezy.Character.Humanoid.Sit = true
		for i = 1,360 do 
			delay(i/720,function()
			zeezy.Character.Humanoid.Sit = true
				zeezy.Character.HumanoidRootPart.CFrame = zeezy.Character.HumanoidRootPart.CFrame * CFrame.Angles(-h,0,0)
			end)
		end
		wait(0.55)
		zeezy.Character.Humanoid.Sit = false
	end
end

function zeezyBackflip(act,inp,obj)
	if inp == Enum.UserInputState.Begin then
		zeezy.Character.Humanoid:ChangeState("Jumping")
		wait()
		zeezy.Character.Humanoid.Sit = true
		for i = 1,360 do
			delay(i/720,function()
			zeezy.Character.Humanoid.Sit = true
				zeezy.Character.HumanoidRootPart.CFrame = zeezy.Character.HumanoidRootPart.CFrame * CFrame.Angles(h,0,0)
			end)
		end
		wait(0.55)
		zeezy.Character.Humanoid.Sit = false
	end
end

function zeezyAirjump(act,inp,obj)
	if inp == Enum.UserInputState.Begin then
		zeezy.Character:FindFirstChildOfClass'Humanoid':ChangeState("Seated")
		wait()
		zeezy.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")	
	end
end


--[[ Binds ]]--

ca:BindAction("zeezyFrontflip",zeezyFrontflip,false,FrontflipKey)
ca:BindAction("zeezyBackflip",zeezyBackflip,false,BackflipKey)
ca:BindAction("zeezyAirjump",zeezyAirjump,false,AirjumpKey)

--[[ Load Message ]]--

print(scriptname .. " " .. ver .. " loaded successfully")
print("made by Zeezy#7203")

local notifSound = Instance.new("Sound",workspace)
notifSound.PlaybackSpeed = 1.5
notifSound.Volume = 0.15
notifSound.SoundId = "rbxassetid://170765130"
notifSound.PlayOnRemove = true
notifSound:Destroy()
game.StarterGui:SetCore("SendNotification", {Title = "feFlip", Text = "feFlip loaded successfully!", Icon = "rbxassetid://505845268", Duration = 5, Button1 = "Okay"})
end)

AnimationSection:NewButton("goofy ahh animations", "weird shit bruh yous should click it", function()
save = nil
c3 = function(r,g,b) return Color3.new(r/255,g/255,b/255) end
 
--do something ro get save file
 
if not save then
    save = {
        ui = {
            highlightcolor = c3(33, 122, 255);
            errorcolor = c3(255, 0, 0);
            --AnimationPriority colors
            core = c3(65, 65, 65);
            idle = c3(134, 200, 230);
            movement = c3(114, 230, 121);
            action = c3(235, 235, 235);
        };
        preferences = {
            
        };
        custom_animations = {
            template = {
                Title = "";
                AnimationId = "rbxassetid://";
                Image = "rbxassetid://2151539455"; --not required
                Speed = 1;
                Time = 0;
                Weight = 1;
                Loop = false;
                R6 = true;
                Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
            };
        };
    }
end
 
lp = game:GetService("Players").LocalPlayer
m = lp:GetMouse()
 
function getHumanoid()
    if not lp.Character then return nil end
    return lp.Character:FindFirstChildWhichIsA("Humanoid")
end
 
screengui = game:GetObjects("rbxassetid://02159099015")[1]
screengui.Parent = game:GetService("CoreGui")
main = screengui.Topbar.Main
 
mainframe = main.MainFrame
scrollframe = mainframe.ScrollingFrame
items = scrollframe.Items
search = scrollframe.SearchFrame.Search
searchbutton = scrollframe.SearchFrame.ImageLabel.TextButton
searchframe = scrollframe.SearchFrame
 
preview = main.Preview
previewimage = preview.Image
previewtitle = preview.Title
previewdesc = preview.Desc
 
function draggable(gObj)
    local UserInputService = game:GetService("UserInputService")
 
    local gui = gObj
    
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end
function tween(object,style,direction,t,goal)
    local tweenservice = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(t,Enum.EasingStyle[style],Enum.EasingDirection[direction])
    local tween = tweenservice:Create(object,tweenInfo,goal)
    tween:Play()
    return tween
end
 
draggable(screengui.Topbar)
 
function checkIfStudio()
    return game.Name ~= "Game"
end
 
if not checkIfStudio() then
    print'Client is not in Roblox studio'
    --main.Size = UDim2.new(0.398, 0, 0.477, 0)
end
 
search.Changed:connect(function(p)
    local n = 0
    for i,v in pairs (items:GetChildren()) do
        if v:IsA("TextButton") and not string.find(v.Title.Text:lower(), search.Text:lower()) then
            v.Visible = false
        elseif v:IsA("TextButton") and string.find(v.Title.Text:lower(), search.Text:lower()) then
            v.Visible = true
            n = n + 1
        end
    end
    if p == "Text" then
        if n > 0 then
            tween(searchframe, "Sine", "Out", 0.25, {
                BorderColor3 = save.ui.highlightcolor;
            })
            wait(0.25)
            tween(searchframe, "Sine", "In", 0.5, {
                BorderColor3 = c3(58, 58, 58);
            })
        else
            tween(searchframe, "Sine", "Out", 0.25, {
                BorderColor3 = save.ui.errorcolor;
            })
            wait(0.25)
            tween(searchframe, "Sine", "In", 0.5, {
                BorderColor3 = c3(58, 58, 58);
            })
        end
    end
end)
 
spawn(function()
    while wait(10) do
        --auto-save every 10 seconds
    end
end)
 
cam = workspace.CurrentCamera
 
running = {}
popAnims = {
    armturbine = {
        Title = "Arm Turbine";
        AnimationId = "rbxassetid://259438880";
        Speed = 1.5;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    weirdsway = {
        Title = "Weird Sway";
        AnimationId = "rbxassetid://248336677";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    weirdfloat = {
        Title = "Weird Float";
        AnimationId = "rbxassetid://248336459";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    weirdpose = {
        Title = "Weird Pose";
        AnimationId = "rbxassetid://248336163";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    penguinslide = {
        Title = "Penguin Slide";
        AnimationId = "rbxassetid://282574440";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    scream = {
        Title = "Scream";
        AnimationId = "rbxassetid://180611870";
        Speed = 1.5;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    crouch = {
        Title = "Crouch";
        AnimationId = "rbxassetid://182724289";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    happydance = {
        Title = "Happy Dance";
        AnimationId = "rbxassetid://248335946";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    floatinghead = {
        Title = "Floating Head";
        AnimationId = "rbxassetid://121572214";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    balloonfloat = {
        Title = "Balloon Float";
        AnimationId = "rbxassetid://148840371";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    pinchnose = {
        Title = "Pinch Nose";
        AnimationId = "rbxassetid://30235165";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    goal = {
        Title = "Goal!";
        AnimationId = "rbxassetid://28488254";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    cry = {
        Title = "Cry";
        AnimationId = "rbxassetid://180612465";
        Speed = 0;
        Time = 1.5;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    partytime = {
        Title = "Party Time";
        AnimationId = "rbxassetid://33796059";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    moondance = {
        Title = "Moon Dance";
        AnimationId = "rbxassetid://27789359";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    insanelegs = {
        Title = "Insane Legs";
        AnimationId = "rbxassetid://87986341";
        Speed = 99;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    rotation = {
        Title = "Rotation";
        AnimationId = "rbxassetid://136801964";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    insanerotation = {
        Title = "Insane Rotation";
        AnimationId = "rbxassetid://136801964";
        Speed = 99;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    roar = {
        Title = "Roar";
        AnimationId = "rbxassetid://163209885";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    spin = {
        Title = "Spin";
        AnimationId = "rbxassetid://188632011";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    zombiearms = {
        Title = "Zombie Arms";
        AnimationId = "rbxassetid://183294396";
        Speed = 0;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    insane = {
        Title = "Insane";
        AnimationId = "rbxassetid://33796059";
        Speed = 99;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    neckbreak = {
        Title = "Neck Break";
        AnimationId = "rbxassetid://35154961";
        Speed = 0;
        Time = 2;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    headdetach = {
        Title = "Head Detach";
        AnimationId = "rbxassetid://35154961";
        Speed = 0;
        Time = 3;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    idle = {
        Title = "Idle";
        AnimationId = "rbxassetid://180435571";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
    charleston = {
        Title = "Charleston";
        AnimationId = "rbxassetid://429703734";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
}
robloxOwns = {}
 
ownerOwns = {}
 
customAnims = {}
 
function getOwnedAnimations(userid)
    local httpserv = game:GetService("HttpService")
    local owned = httpserv:GetAsync("https://inventory.roblox.com/v1/users/"..userid.."/inventory/Animation?pageNumber=1&itemsPerPage=10", true)
    return owned
end
 
 
function getAnim(name)
    return popAnims[name] or customAnims[name]
end
function runAnim(info, humanoid)
    local animation = Instance.new("Animation")
    animation.AnimationId = info.AnimationId
    
    local animtrack = humanoid:LoadAnimation(animation)
    table.insert(running,animtrack)
    animtrack.Priority = info.Priority
    animtrack.Looped = info.Loop
    
    animtrack:Play()
    animtrack:AdjustSpeed(info.Speed)
    animtrack:AdjustWeight(info.Weight)
    animtrack.TimePosition = info.Time
    
    animtrack.Stopped:connect(function()
        for i = 1,#running do
            if running[i] == animtrack then
                table.remove(running,i)
            end
        end
    end)
    
    return animtrack
end
 
template = items.Template
template.Parent = nil
 
function clear()
    for i,v in pairs (items:GetChildren()) do
        if v:IsA("TextButton") then
            v:Destroy()
        end
    end
end
 
--[[
    idle = {
        Title = "Idle";
        AnimationId = "rbxassetid://180435571";
        Speed = 1;
        Time = 0;
        Weight = 1;
        Loop = true;
        R6 = true;
        Priority = 2; --0, 1, 2, and 1000 are acceptable priorities
    };
--]]
 
function createbutton(v)
    local temp = template:Clone()
    temp.Parent = items
    temp.Name = v.Title
    temp.Title.Text = v.Title
    temp.Image.Image = v.Image or "rbxassetid://2151539455"
    if temp.Image.Image == "rbxassetid://2151539455" then
        temp.Image.ImageColor3 = (v.Priority == 0 and save.ui.idle) or (v.Priority == 1 and save.ui.movement) or (v.Priority == 2 and save.ui.action) or (v.Priority == 1000 and save.ui.core)
    else
        temp.Image.ImageColor3 = Color3.new(1,1,1)
    end
    temp.LayoutOrder = math.random(1,10000)
    
    temp.Settings.AnimationId.Value = v.AnimationId
    temp.Settings.Loop.Value = v.Loop
    temp.Settings.Priority.Value = v.Priority
    temp.Settings.R6.Value = v.R6
    temp.Settings.Speed.Value = v.Speed
    temp.Settings.Weight.Value = v.Weight
    temp.Settings.Time.Value = v.Time
    
    temp.MouseEnter:connect(function()
        preview.Title.Text = v.Title
        preview.Desc.Text = "Speed: "..tostring(v.Speed).."\nPriority: "..tostring(v.Priority).."\nR6 Rig: "..tostring(v.R6).."\nAnimID: "..tostring(v.AnimationId).."\n\n"..(v.Description or "No description provided")
        
        preview.Image.Image = v.Image or "rbxassetid://2151539455"
        if preview.Image.Image == "rbxassetid://2151539455" then
            preview.Image.ImageColor3 = (v.Priority == 0 and save.ui.idle) or (v.Priority == 1 and save.ui.movement) or (v.Priority == 2 and save.ui.action) or (v.Priority == 1000 and save.ui.core)
        else
            preview.Image.ImageColor3 = Color3.new(1,1,1)
        end
    end)
    temp.MouseButton1Click:connect(function()
        temp.Border.ImageColor3 = save.ui.highlightcolor
        for i,anim in pairs (running) do
            if anim.Animation.AnimationId == v.AnimationId then
                anim:Stop()
                return
            end
        end
        temp.Border.Visible = true
        local rAnim = runAnim(v, getHumanoid())
        rAnim.Stopped:connect(function()
            temp.Border.Visible = false
        end)
    end)
    
    return temp
end
 
dropdown = mainframe.ScrollingFrame.DropdownFrame
elements = dropdown.HoldContentsFrame.Frame.Elements
dropdownenabled = true
 
tween(dropdown.HoldContentsFrame.Frame, "Linear", "In", 0, {
    Position = UDim2.new(0,0,-1,0)
})
dropdown.HoldContentsFrame.Frame.Visible = false
 
dropdowndeactivate = screengui.DropdownDeactivate
dropdowndeactivate.Visible = false
 
function hideddown()
    tween(dropdown.HoldContentsFrame.Frame, "Linear", "In", 0, {
        Position = UDim2.new(0,0,-1,0)
    })
    dropdown.HoldContentsFrame.Frame.Visible = false
    dropdowndeactivate.Visible = false
    dropdownenabled = true
    
    for i,e in pairs (elements:GetChildren()) do
        if e:IsA("TextButton") then
            e.BackgroundColor3 = c3(46,46,46)
        end
    end
end
 
dropdown.MouseButton1Click:connect(function()
    print'ddownclick'
    dropdownenabled = not dropdownenabled
    if dropdownenabled then
        hideddown()
    else
        tween(dropdown.HoldContentsFrame.Frame, "Linear", "In", 0.3, {
            Position = UDim2.new(0,0,0,0)
        })
        dropdown.HoldContentsFrame.Frame.Visible = true
        dropdowndeactivate.Visible = true
    end
end)
 
dropdowndeactivate.MouseButton1Down:connect(function()
    hideddown()
end)
 
for i,v in pairs (elements:GetChildren()) do
    if v:IsA("TextButton") then
        v.MouseEnter:connect(function()
            for i,e in pairs (elements:GetChildren()) do
                if e:IsA("TextButton") then
                    e.BackgroundColor3 = c3(46,46,46)
                end
            end
            v.BackgroundColor3 = save.ui.highlightcolor
        end)
        v.MouseButton1Click:connect(function()
            hideddown()
            dropdown.TextLabel.Text = v.Name
            sort(v.Name)
        end)
    end
end
 
function sort(category)
    clear()
    if category == "Popular" then
        for i,v in pairs (popAnims) do
            local temp = createbutton(v)
        end
    elseif category == "By Roblox" then
        
    end
end
 
game:GetService('RunService').RenderStepped:connect(function()
    items.Parent.CanvasSize = UDim2.new(0,0,0,items.GridLayout.AbsoluteContentSize.Y + 50)
end)
 
sort("Popular")
end)

--player 
local Player = Window:NewTab("Player")
local PlayerSection = Player:NewSection("Player")

PlayerSection:NewSlider("WalkSpeed", "makes your player go deja vu", 500, 16, function(s)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)


PlayerSection:NewSlider("JumpPower", "makes you jump how far you want", 350, 50, function(s)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)


PlayerSection:NewButton("Reset WalkSpeed & JumpPower", "resets your walkspeed and jumppower HOW SIMPLE BRUH", function()
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end)

PlayerSection:NewButton("ESP", "makes you see everyone clear if your blind", function()
    -- Unnamed ESP
 
assert(Drawing, 'exploit not supported')
 
local UserInputService = game:GetService'UserInputService';
local HttpService = game:GetService'HttpService';
local GUIService = game:GetService'GuiService';
local RunService = game:GetService'RunService';
local Players = game:GetService'Players';
local LocalPlayer = Players.LocalPlayer;
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse();
local Menu = {};
local MouseHeld = false;
local LastRefresh = 0;
local OptionsFile = 'IC3_ESP_SETTINGS.dat';
local Binding = false;
local BindedKey = nil;
local OIndex = 0;
local LineBox = {};
local UIButtons = {};
local Sliders = {};
local Dragging = false;
local DraggingUI = false;
local DragOffset = Vector2.new();
local DraggingWhat = nil;
local OldData = {};
local IgnoreList = {};
local Red = Color3.new(1, 0, 0);
local Green = Color3.new(0, 1, 0);
local MenuLoaded = false;
 
shared.MenuDrawingData = shared.MenuDrawingData or { Instances = {} };
shared.PlayerData = shared.PlayerData or {};
shared.RSName = shared.RSName or ('UnnamedESP_by_ic3-' .. HttpService:GenerateGUID(false));
 
local GetDataName = shared.RSName .. '-GetData';
local UpdateName = shared.RSName .. '-Update';
 
local Debounce = setmetatable({}, {
__index = function(t, i)
return rawget(t, i) or false
end;
});
 
pcall(function() shared.InputBeganCon:disconnect() end);
pcall(function() shared.InputEndedCon:disconnect() end);
 
function GetMouseLocation()
return UserInputService:GetMouseLocation();
end
 
function MouseHoveringOver(Values)
local X1, Y1, X2, Y2 = Values[1], Values[2], Values[3], Values[4]
local MLocation = GetMouseLocation();
return (MLocation.x >= X1 and MLocation.x <= (X1 + (X2 - X1))) and (MLocation.y >= Y1 and MLocation.y <= (Y1 + (Y2 - Y1)));
end
 
function GetTableData(t) -- basically table.foreach i dont even know why i made this
if typeof(t) ~= 'table' then return end
return setmetatable(t, {
__call = function(t, func)
if typeof(func) ~= 'function' then return end;
for i, v in pairs(t) do
pcall(func, i, v);
end
end;
});
end
local function Format(format, ...)
return string.format(format, ...);
end
function CalculateValue(Min, Max, Percent)
return Min + math.floor(((Max - Min) * Percent) + .5);
end
 
local Options = setmetatable({}, {
__call = function(t, ...)
local Arguments = {...};
local Name = Arguments[1];
OIndex = OIndex + 1; -- (typeof(Arguments[3]) == 'boolean' and 1 or 0);
rawset(t, Name, setmetatable({
Name = Arguments[1];
Text = Arguments[2];
Value = Arguments[3];
DefaultValue = Arguments[3];
AllArgs = Arguments;
Index = OIndex;
}, {
__call = function(t, v)
if typeof(t.Value) == 'function' then
t.Value();
elseif typeof(t.Value) == 'EnumItem' then
local BT = Menu:GetInstance(Format('%s_BindText', t.Name));
Binding = true;
local Val = 0
while Binding do
wait();
Val = (Val + 1) % 17;
BT.Text = Val <= 8 and '|' or '';
end
t.Value = BindedKey;
BT.Text = tostring(t.Value):match'%w+%.%w+%.(.+)';
BT.Position = t.BasePosition + Vector2.new(t.BaseSize.X - BT.TextBounds.X - 20, -10);
else
local NewValue = v;
if NewValue == nil then NewValue = not t.Value; end
rawset(t, 'Value', NewValue);
if Arguments[2] ~= nil then
if typeof(Arguments[3]) == 'number' then
local AMT = Menu:GetInstance(Format('%s_AmountText', t.Name));
AMT.Text = tostring(t.Value);
AMT.Position = t.BasePosition + Vector2.new(t.BaseSize.X - AMT.TextBounds.X - 10, -10);
else
local Inner = Menu:GetInstance(Format('%s_InnerCircle', t.Name));
Inner.Visible = t.Value;
end
end
end
end;
}));
end;
})
 
function Load()
local _, Result = pcall(readfile, OptionsFile);
if _ then -- extremely ugly code yea i know but i dont care p.s. i hate pcall
local _, Table = pcall(HttpService.JSONDecode, HttpService, Result);
if _ then
for i, v in pairs(Table) do
if Options[i] ~= nil and Options[i].Value ~= nil and (typeof(Options[i].Value) == 'boolean' or typeof(Options[i].Value) == 'number') then
Options[i].Value = v.Value;
pcall(Options[i], v.Value);
end
end
end
end
end
 
Options('Enabled', 'ESP Enabled', true);
Options('ShowTeam', 'Show Team', false);
Options('ShowName', 'Show Names', true);
Options('ShowDistance', 'Show Distance', true);
Options('ShowHealth', 'Show Health', true);
Options('ShowBoxes', 'Show Boxes', true);
Options('ShowTracers', 'Show Tracers', true);
Options('ShowDot', 'Show Head Dot', false);
Options('VisCheck', 'Visibility Check', false);
Options('Crosshair', 'Crosshair', false);
Options('TextOutline', 'Text Outline', true);
Options('TextSize', 'Text Size', syn and 18 or 14, 10, 24); -- cuz synapse fonts look weird???
Options('MaxDistance', 'Max Distance', 2500, 100, 5000);
Options('RefreshRate', 'Refresh Rate (ms)', 5, 1, 200);
Options('MenuKey', 'Menu Key', Enum.KeyCode.F4, 1);
Options('ResetSettings', 'Reset Settings', function()
for i, v in pairs(Options) do
if Options[i] ~= nil and Options[i].Value ~= nil and Options[i].Text ~= nil and (typeof(Options[i].Value) == 'boolean' or typeof(Options[i].Value) == 'number') then
Options[i](Options[i].DefaultValue);
end
end
end, 4);
Options('LoadSettings', 'Load Settings', Load, 3);
Options('SaveSettings', 'Save Settings', function()
writefile(OptionsFile, HttpService:JSONEncode(Options));
end, 2)
-- Options.SaveSettings.Value();
 
Load();
 
Options('MenuOpen', nil, true);
 
local function Set(t, i, v)
t[i] = v;
end
local function Combine(...)
local Output = {};
for i, v in pairs{...} do
if typeof(v) == 'table' then
table.foreach(v, function(i, v)
Output[i] = v;
end)
end
end
return Output
end
function IsStringEmpty(String)
if type(String) == 'string' then
return String:match'^%s+$' ~= nil or #String == 0 or String == '' or false;
end
return false
end
 
function NewDrawing(InstanceName)
local Instance = Drawing.new(InstanceName);
return (function(Properties)
for i, v in pairs(Properties) do
pcall(Set, Instance, i, v);
end
return Instance;
end)
end
 
function Menu:AddMenuInstace(Name, Instance)
if shared.MenuDrawingData.Instances[Name] ~= nil then
shared.MenuDrawingData.Instances[Name]:Remove();
end
shared.MenuDrawingData.Instances[Name] = Instance;
return Instance;
end
function Menu:UpdateMenuInstance(Name)
local Instance = shared.MenuDrawingData.Instances[Name];
if Instance ~= nil then
return (function(Properties)
for i, v in pairs(Properties) do
-- print(Format('%s %s -> %s', Name, tostring(i), tostring(v)));
pcall(Set, Instance, i, v);
end
return Instance;
end)
end
end
function Menu:GetInstance(Name)
return shared.MenuDrawingData.Instances[Name];
end
 
function LineBox:Create(Properties)
local Box = { Visible = true }; -- prevent errors not really though dont worry bout the Visible = true thing
 
local Properties = Combine({
Transparency = 1;
Thickness = 1;
Visible = true;
}, Properties);
 
Box['TopLeft'] = NewDrawing'Line'(Properties);
Box['TopRight'] = NewDrawing'Line'(Properties);
Box['BottomLeft'] = NewDrawing'Line'(Properties);
Box['BottomRight'] = NewDrawing'Line'(Properties);
 
function Box:Update(CF, Size, Color, Properties)
if not CF or not Size then return end
 
local TLPos, Visible1 = Camera:WorldToViewportPoint((CF * CFrame.new( Size.X, Size.Y, 0)).p);
local TRPos, Visible2 = Camera:WorldToViewportPoint((CF * CFrame.new(-Size.X, Size.Y, 0)).p);
local BLPos, Visible3 = Camera:WorldToViewportPoint((CF * CFrame.new( Size.X, -Size.Y, 0)).p);
local BRPos, Visible4 = Camera:WorldToViewportPoint((CF * CFrame.new(-Size.X, -Size.Y, 0)).p);
-- ## BEGIN UGLY CODE
if Visible1 then
Box['TopLeft'].Visible = true;
Box['TopLeft'].Color = Color;
Box['TopLeft'].From = Vector2.new(TLPos.X, TLPos.Y);
Box['TopLeft'].To = Vector2.new(TRPos.X, TRPos.Y);
else
Box['TopLeft'].Visible = false;
end
if Visible2 then
Box['TopRight'].Visible = true;
Box['TopRight'].Color = Color;
Box['TopRight'].From = Vector2.new(TRPos.X, TRPos.Y);
Box['TopRight'].To = Vector2.new(BRPos.X, BRPos.Y);
else
Box['TopRight'].Visible = false;
end
if Visible3 then
Box['BottomLeft'].Visible = true;
Box['BottomLeft'].Color = Color;
Box['BottomLeft'].From = Vector2.new(BLPos.X, BLPos.Y);
Box['BottomLeft'].To = Vector2.new(TLPos.X, TLPos.Y);
else
Box['BottomLeft'].Visible = false;
end
if Visible4 then
Box['BottomRight'].Visible = true;
Box['BottomRight'].Color = Color;
Box['BottomRight'].From = Vector2.new(BRPos.X, BRPos.Y);
Box['BottomRight'].To = Vector2.new(BLPos.X, BLPos.Y);
else
Box['BottomRight'].Visible = false;
end
-- ## END UGLY CODE
if Properties then
GetTableData(Properties)(function(i, v)
pcall(Set, Box['TopLeft'], i, v);
pcall(Set, Box['TopRight'], i, v);
pcall(Set, Box['BottomLeft'], i, v);
pcall(Set, Box['BottomRight'], i, v);
end)
end
end
function Box:SetVisible(bool)
pcall(Set, Box['TopLeft'], 'Visible', bool);
pcall(Set, Box['TopRight'], 'Visible', bool);
pcall(Set, Box['BottomLeft'], 'Visible', bool);
pcall(Set, Box['BottomRight'], 'Visible', bool);
end
function Box:Remove()
self:SetVisible(false);
Box['TopLeft']:Remove();
Box['TopRight']:Remove();
Box['BottomLeft']:Remove();
Box['BottomRight']:Remove();
end
 
return Box;
end
 
function CreateMenu(NewPosition) -- Create Menu
local function FromHex(HEX)
HEX = HEX:gsub('#', '');
return Color3.fromRGB(tonumber('0x' .. HEX:sub(1, 2)), tonumber('0x' .. HEX:sub(3, 4)), tonumber('0x' .. HEX:sub(5, 6)));
end
 
local Colors = {
Primary = {
Main = FromHex'424242';
Light = FromHex'6d6d6d';
Dark = FromHex'1b1b1b';
};
Secondary = {
Main = FromHex'e0e0e0';
Light = FromHex'ffffff';
Dark = FromHex'aeaeae';
};
};
 
MenuLoaded = false;
 
GetTableData(UIButtons)(function(i, v)
v.Instance.Visible = false;
v.Instance:Remove();
end)
GetTableData(Sliders)(function(i, v)
v.Instance.Visible = false;
v.Instance:Remove();
end)
 
UIButtons = {};
Sliders = {};
 
local BaseSize = Vector2.new(300, 580);
local BasePosition = NewPosition or Vector2.new(Camera.ViewportSize.X / 8 - (BaseSize.X / 2), Camera.ViewportSize.Y / 2 - (BaseSize.Y / 2));
 
Menu:AddMenuInstace('CrosshairX', NewDrawing'Line'{
Visible = false;
Color = Color3.new(0, 1, 0);
Transparency = 1;
Thickness = 1;
});
Menu:AddMenuInstace('CrosshairY', NewDrawing'Line'{
Visible = false;
Color = Color3.new(0, 1, 0);
Transparency = 1;
Thickness = 1;
});
 
delay(.025, function() -- since zindex doesnt exist
Menu:AddMenuInstace('Main', NewDrawing'Square'{
Size = BaseSize;
Position = BasePosition;
Filled = false;
Color = Colors.Primary.Main;
Thickness = 3;
Visible = true;
});
end);
Menu:AddMenuInstace('TopBar', NewDrawing'Square'{
Position = BasePosition;
Size = Vector2.new(BaseSize.X, 25);
Color = Colors.Primary.Dark;
Filled = true;
Visible = true;
});
Menu:AddMenuInstace('TopBarTwo', NewDrawing'Square'{
Position = BasePosition + Vector2.new(0, 25);
Size = Vector2.new(BaseSize.X, 60);
Color = Colors.Primary.Main;
Filled = true;
Visible = true;
});
Menu:AddMenuInstace('TopBarText', NewDrawing'Text'{
Size = 25;
Position = shared.MenuDrawingData.Instances.TopBarTwo.Position + Vector2.new(25, 15);
Text = 'Unnamed ESP';
Color = Colors.Secondary.Light;
Visible = true;
});
Menu:AddMenuInstace('TopBarTextBR', NewDrawing'Text'{
Size = 15;
Position = shared.MenuDrawingData.Instances.TopBarTwo.Position + Vector2.new(BaseSize.X - 65, 40);
Text = 'by ic3w0lf';
Color = Colors.Secondary.Dark;
Visible = true;
});
Menu:AddMenuInstace('Filling', NewDrawing'Square'{
Size = BaseSize - Vector2.new(0, 85);
Position = BasePosition + Vector2.new(0, 85);
Filled = true;
Color = Colors.Secondary.Main;
Transparency= .5;
Visible = true;
});
 
local CPos = 0;
 
GetTableData(Options)(function(i, v)
if typeof(v.Value) == 'boolean' and not IsStringEmpty(v.Text) and v.Text ~= nil then
CPos = CPos + 25;
local BaseSize = Vector2.new(BaseSize.X, 30);
local BasePosition = shared.MenuDrawingData.Instances.Filling.Position + Vector2.new(30, v.Index * 25 - 10);
UIButtons[#UIButtons + 1] = {
Option = v;
Instance = Menu:AddMenuInstace(Format('%s_Hitbox', v.Name), NewDrawing'Square'{
Position = BasePosition - Vector2.new(30, 15);
Size = BaseSize;
Visible = false;
});
};
Menu:AddMenuInstace(Format('%s_OuterCircle', v.Name), NewDrawing'Circle'{
Radius = 10;
Position = BasePosition;
Color = Colors.Secondary.Light;
Filled = true;
Visible = true;
});
Menu:AddMenuInstace(Format('%s_InnerCircle', v.Name), NewDrawing'Circle'{
Radius = 7;
Position = BasePosition;
Color = Colors.Secondary.Dark;
Filled = true;
Visible = v.Value;
});
Menu:AddMenuInstace(Format('%s_Text', v.Name), NewDrawing'Text'{
Text = v.Text;
Size = 20;
Position = BasePosition + Vector2.new(20, -10);
Visible = true;
Color = Colors.Primary.Dark;
});
end
end)
GetTableData(Options)(function(i, v) -- just to make sure certain things are drawn before or after others, too lazy to actually sort table
if typeof(v.Value) == 'number' then
CPos = CPos + 25;
 
local BaseSize = Vector2.new(BaseSize.X, 30);
local BasePosition = shared.MenuDrawingData.Instances.Filling.Position + Vector2.new(0, CPos - 10);
 
local Text = Menu:AddMenuInstace(Format('%s_Text', v.Name), NewDrawing'Text'{
Text = v.Text;
Size = 20;
Position = BasePosition + Vector2.new(20, -10);
Visible = true;
Color = Colors.Primary.Dark;
});
local AMT = Menu:AddMenuInstace(Format('%s_AmountText', v.Name), NewDrawing'Text'{
Text = tostring(v.Value);
Size = 20;
Position = BasePosition;
Visible = true;
Color = Colors.Primary.Dark;
});
local Line = Menu:AddMenuInstace(Format('%s_SliderLine', v.Name), NewDrawing'Line'{
Transparency = 1;
Color = Colors.Primary.Dark;
Thickness = 3;
Visible = true;
From = BasePosition + Vector2.new(20, 20);
To = BasePosition + Vector2.new(BaseSize.X - 10, 20);
});
CPos = CPos + 10;
local Slider = Menu:AddMenuInstace(Format('%s_Slider', v.Name), NewDrawing'Circle'{
Visible = true;
Filled = true;
Radius = 6;
Color = Colors.Secondary.Dark;
Position = BasePosition + Vector2.new(35, 20);
})
 
local CSlider = {Slider = Slider; Line = Line; Min = v.AllArgs[4]; Max = v.AllArgs[5]; Option = v};
Sliders[#Sliders + 1] = CSlider;
 
-- local Percent = (v.Value / CSlider.Max) * 100;
-- local Size = math.abs(Line.From.X - Line.To.X);
-- local Value = Size * (Percent / 100); -- this shit's inaccurate but fuck it i'm not even gonna bother fixing it
 
Slider.Position = BasePosition + Vector2.new(40, 20);
 
v.BaseSize = BaseSize;
v.BasePosition = BasePosition;
AMT.Position = BasePosition + Vector2.new(BaseSize.X - AMT.TextBounds.X - 10, -10)
end
end)
GetTableData(Options)(function(i, v) -- just to make sure certain things are drawn before or after others, too lazy to actually sort table
if typeof(v.Value) == 'EnumItem' then
CPos = CPos + 30;
 
local BaseSize = Vector2.new(BaseSize.X, 30);
local BasePosition = shared.MenuDrawingData.Instances.Filling.Position + Vector2.new(0, CPos - 10);
 
UIButtons[#UIButtons + 1] = {
Option = v;
Instance = Menu:AddMenuInstace(Format('%s_Hitbox', v.Name), NewDrawing'Square'{
Size = Vector2.new(BaseSize.X, 20) - Vector2.new(30, 0);
Visible = true;
Transparency= .5;
Position = BasePosition + Vector2.new(15, -10);
Color = Colors.Secondary.Light;
Filled = true;
});
};
local Text = Menu:AddMenuInstace(Format('%s_Text', v.Name), NewDrawing'Text'{
Text = v.Text;
Size = 20;
Position = BasePosition + Vector2.new(20, -10);
Visible = true;
Color = Colors.Primary.Dark;
});
local BindText = Menu:AddMenuInstace(Format('%s_BindText', v.Name), NewDrawing'Text'{
Text = tostring(v.Value):match'%w+%.%w+%.(.+)';
Size = 20;
Position = BasePosition;
Visible = true;
Color = Colors.Primary.Dark;
});
 
Options[i].BaseSize = BaseSize;
Options[i].BasePosition = BasePosition;
BindText.Position = BasePosition + Vector2.new(BaseSize.X - BindText.TextBounds.X - 20, -10);
end
end)
GetTableData(Options)(function(i, v) -- just to make sure certain things are drawn before or after others, too lazy to actually sort table
if typeof(v.Value) == 'function' then
local BaseSize = Vector2.new(BaseSize.X, 30);
local BasePosition = shared.MenuDrawingData.Instances.Filling.Position + Vector2.new(0, CPos + (25 * v.AllArgs[4]) - 35);
 
UIButtons[#UIButtons + 1] = {
Option = v;
Instance = Menu:AddMenuInstace(Format('%s_Hitbox', v.Name), NewDrawing'Square'{
Size = Vector2.new(BaseSize.X, 20) - Vector2.new(30, 0);
Visible = true;
Transparency= .5;
Position = BasePosition + Vector2.new(15, -10);
Color = Colors.Secondary.Light;
Filled = true;
});
};
local Text = Menu:AddMenuInstace(Format('%s_Text', v.Name), NewDrawing'Text'{
Text = v.Text;
Size = 20;
Position = BasePosition + Vector2.new(20, -10);
Visible = true;
Color = Colors.Primary.Dark;
});
 
-- BindText.Position = BasePosition + Vector2.new(BaseSize.X - BindText.TextBounds.X - 10, -10);
end
end)
 
delay(.1, function()
MenuLoaded = true;
end);
 
-- this has to be at the bottom cuz proto drawing api doesnt have zindex :triumph:
Menu:AddMenuInstace('Cursor1', NewDrawing'Line'{
Visible = false;
Color = Color3.new(1, 0, 0);
Transparency = 1;
Thickness = 2;
});
Menu:AddMenuInstace('Cursor2', NewDrawing'Line'{
Visible = false;
Color = Color3.new(1, 0, 0);
Transparency = 1;
Thickness = 2;
});
Menu:AddMenuInstace('Cursor3', NewDrawing'Line'{
Visible = false;
Color = Color3.new(1, 0, 0);
Transparency = 1;
Thickness = 2;
});
end
 
CreateMenu();
 
shared.InputBeganCon = UserInputService.InputBegan:connect(function(input)
if input.UserInputType.Name == 'MouseButton1' and Options.MenuOpen.Value then
MouseHeld = true;
local Bar = Menu:GetInstance'TopBar';
local Values = {
Bar.Position.X;
Bar.Position.Y;
Bar.Position.X + Bar.Size.X;
Bar.Position.Y + Bar.Size.Y;
}
if MouseHoveringOver(Values) and not syn then -- disable dragging for synapse cuz idk why it breaks
DraggingUI = false; -- also breaks for other exploits
DragOffset = Menu:GetInstance'Main'.Position - GetMouseLocation();
else
for i, v in pairs(Sliders) do
local Values = {
v.Line.From.X - (v.Slider.Radius);
v.Line.From.Y - (v.Slider.Radius);
v.Line.To.X + (v.Slider.Radius);
v.Line.To.Y + (v.Slider.Radius);
};
if MouseHoveringOver(Values) then
DraggingWhat = v;
Dragging = true;
break
end
end
end
end
end)
shared.InputEndedCon = UserInputService.InputEnded:connect(function(input)
if input.UserInputType.Name == 'MouseButton1' and Options.MenuOpen.Value then
MouseHeld = false;
for i, v in pairs(UIButtons) do
local Values = {
v.Instance.Position.X;
v.Instance.Position.Y;
v.Instance.Position.X + v.Instance.Size.X;
v.Instance.Position.Y + v.Instance.Size.Y;
};
if MouseHoveringOver(Values) then
v.Option();
break -- prevent clicking 2 options
end
end
elseif input.UserInputType.Name == 'Keyboard' then
if Binding then
BindedKey = input.KeyCode;
Binding = false;
elseif input.KeyCode == Options.MenuKey.Value or (input.KeyCode == Enum.KeyCode.Home and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl)) then
Options.MenuOpen();
end
end
end)
 
function ToggleMenu()
if Options.MenuOpen.Value then
GetTableData(shared.MenuDrawingData.Instances)(function(i, v)
if OldData[v] then
pcall(Set, v, 'Visible', true);
end
end)
else
-- GUIService:SetMenuIsOpen(false);
GetTableData(shared.MenuDrawingData.Instances)(function(i, v)
if v.Visible == true then
OldData[v] = true;
pcall(Set, v, 'Visible', false);
end
end)
end
end
 
function CheckRay(Player, Distance, Position, Unit)
local Pass = true;
 
if Distance > 999 then return false; end
 
local _Ray = Ray.new(Position, Unit * Distance);
 
local List = {LocalPlayer.Character, Camera, Mouse.TargetFilter};
 
for i,v in pairs(IgnoreList) do table.insert(List, v); end;
 
local Hit = workspace:FindPartOnRayWithIgnoreList(_Ray, List);
if Hit and not Hit:IsDescendantOf(Player.Character) then
Pass = false;
if Hit.Transparency >= .3 or not Hit.CanCollide and Hit.ClassName ~= Terrain then -- Detect invisible walls
IgnoreList[#IgnoreList + 1] = Hit;
end
end
 
return Pass;
end
 
function CheckPlayer(Player)
if not Options.Enabled.Value then return false end
 
local Pass = true;
local Distance = 0;
 
if Player ~= LocalPlayer and Player.Character then
if not Options.ShowTeam.Value and Player.TeamColor == LocalPlayer.TeamColor then
Pass = false;
end
 
local Head = Player.Character:FindFirstChild'Head';
 
if Pass and Player.Character and Head then
Distance = (Camera.CFrame.p - Head.Position).magnitude;
if Options.VisCheck.Value then
Pass = CheckRay(Player, Distance, Camera.CFrame.p, (Head.Position - Camera.CFrame.p).unit);
end
if Distance > Options.MaxDistance.Value then
Pass = false;
end
end
else
Pass = false;
end
 
return Pass, Distance;
end
 
function UpdatePlayerData()
if (tick() - LastRefresh) > (Options.RefreshRate.Value / 1000) then
LastRefresh = tick();
for i, v in pairs(Players:GetPlayers()) do
local Data = shared.PlayerData[v.Name] or { Instances = {} };
 
Data.Instances['Box'] = Data.Instances['Box'] or LineBox:Create{Thickness = 3};
Data.Instances['Tracer'] = Data.Instances['Tracer'] or NewDrawing'Line'{
Transparency = 1;
Thickness = 2;
}
Data.Instances['HeadDot'] = Data.Instances['HeadDot'] or NewDrawing'Circle'{
Filled = true;
NumSides = 30;
}
Data.Instances['NameTag'] = Data.Instances['NameTag'] or NewDrawing'Text'{
Size = Options.TextSize.Value;
Center = true;
Outline = Options.TextOutline.Value;
Visible = true;
};
Data.Instances['DistanceHealthTag'] = Data.Instances['DistanceHealthTag'] or NewDrawing'Text'{
Size = Options.TextSize.Value - 1;
Center = true;
Outline = Options.TextOutline.Value;
Visible = true;
};
 
local NameTag = Data.Instances['NameTag'];
local DistanceTag = Data.Instances['DistanceHealthTag'];
local Tracer = Data.Instances['Tracer'];
local HeadDot = Data.Instances['HeadDot'];
local Box = Data.Instances['Box'];
 
local Pass, Distance = CheckPlayer(v);
 
if Pass and v.Character then
Data.LastUpdate = tick();
local Humanoid = v.Character:FindFirstChildOfClass'Humanoid';
local Head = v.Character:FindFirstChild'Head';
local HumanoidRootPart = v.Character:FindFirstChild'HumanoidRootPart';
if v.Character ~= nil and Head then
local ScreenPosition, Vis = Camera:WorldToViewportPoint(Head.Position);
if Vis then
local Color = v.TeamColor == LocalPlayer.TeamColor and Green or Red;
 
local ScreenPositionUpper = Camera:WorldToViewportPoint(Head.CFrame * CFrame.new(0, Head.Size.Y, 0).p);
local Scale = Head.Size.Y / 2;
 
if Options.ShowName.Value then
NameTag.Visible = true;
NameTag.Text = v.Name;
NameTag.Size = Options.TextSize.Value;
NameTag.Outline = Options.TextOutline.Value;
NameTag.Position = Vector2.new(ScreenPositionUpper.X, ScreenPositionUpper.Y);
NameTag.Color = Color;
if Drawing.Fonts then -- CURRENTLY SYNAPSE ONLY :MEGAHOLY:
NameTag.Font = Drawing.Fonts.UI;
end
else
NameTag.Visible = false;
end
if Options.ShowDistance.Value or Options.ShowHealth.Value then
DistanceTag.Visible = true;
DistanceTag.Size = Options.TextSize.Value - 1;
DistanceTag.Outline = Options.TextOutline.Value;
DistanceTag.Color = Color3.new(1, 1, 1);
if Drawing.Fonts then -- CURRENTLY SYNAPSE ONLY :MEGAHOLY:
NameTag.Font = Drawing.Fonts.UI;
end
 
local Str = '';
 
if Options.ShowDistance.Value then
Str = Str .. Format('[%d] ', Distance);
end
if Options.ShowHealth.Value and Humanoid then
Str = Str .. Format('[%d/100]', Humanoid.Health / Humanoid.MaxHealth * 100);
end
 
DistanceTag.Text = Str;
DistanceTag.Position = Vector2.new(ScreenPositionUpper.X, ScreenPositionUpper.Y) + Vector2.new(0, NameTag.Size);
else
DistanceTag.Visible = false;
end
if Options.ShowDot.Value then
local Top = Camera:WorldToViewportPoint((Head.CFrame * CFrame.new(0, Scale, 0)).p);
local Bottom = Camera:WorldToViewportPoint((Head.CFrame * CFrame.new(0, -Scale, 0)).p);
local Radius = (Top - Bottom).y;
 
HeadDot.Visible = true;
HeadDot.Color = Color;
HeadDot.Position = Vector2.new(ScreenPosition.X, ScreenPosition.Y);
HeadDot.Radius = Radius;
else
HeadDot.Visible = false;
end
if Options.ShowTracers.Value then
Tracer.Visible = true;
Tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y);
Tracer.To = Vector2.new(ScreenPosition.X, ScreenPosition.Y);
Tracer.Color = Color;
else
Tracer.Visible = false;
end
if Options.ShowBoxes.Value and HumanoidRootPart then
Box:Update(HumanoidRootPart.CFrame, Vector3.new(2, 3, 0) * (Scale * 2), Color);
else
Box:SetVisible(false);
end
else
NameTag.Visible = false;
DistanceTag.Visible = false;
Tracer.Visible = false;
HeadDot.Visible = false;
 
Box:SetVisible(false);
end
end
else
NameTag.Visible = false;
DistanceTag.Visible = false;
Tracer.Visible = false;
HeadDot.Visible = false;
 
Box:SetVisible(false);
end
 
shared.PlayerData[v.Name] = Data;
end
end
end
 
function Update()
for i, v in pairs(shared.PlayerData) do
if not Players:FindFirstChild(tostring(i)) then
GetTableData(v.Instances)(function(i, obj)
obj.Visible = false;
obj:Remove();
v.Instances[i] = nil;
end)
shared.PlayerData[i] = nil;
end
end
 
local CX = Menu:GetInstance'CrosshairX';
local CY = Menu:GetInstance'CrosshairY';
if Options.Crosshair.Value then
CX.Visible = true;
CY.Visible = true;
 
CX.To = Vector2.new((Camera.ViewportSize.X / 2) - 8, (Camera.ViewportSize.Y / 2));
CX.From = Vector2.new((Camera.ViewportSize.X / 2) + 8, (Camera.ViewportSize.Y / 2));
CY.To = Vector2.new((Camera.ViewportSize.X / 2), (Camera.ViewportSize.Y / 2) - 8);
CY.From = Vector2.new((Camera.ViewportSize.X / 2), (Camera.ViewportSize.Y / 2) + 8);
else
CX.Visible = false;
CY.Visible = false;
end
 
if Options.MenuOpen.Value and MenuLoaded then
local MLocation = GetMouseLocation();
shared.MenuDrawingData.Instances.Main.Color = Color3.fromHSV(tick() * 24 % 255/255, 1, 1);
local MainInstance = Menu:GetInstance'Main';
local Values = {
MainInstance.Position.X;
MainInstance.Position.Y;
MainInstance.Position.X + MainInstance.Size.X;
MainInstance.Position.Y + MainInstance.Size.Y;
};
if MainInstance and MouseHoveringOver(Values) then
Debounce.CursorVis = true;
-- GUIService:SetMenuIsOpen(true);
Menu:UpdateMenuInstance'Cursor1'{
Visible = true;
From = Vector2.new(MLocation.x, MLocation.y);
To = Vector2.new(MLocation.x + 5, MLocation.y + 6);
}
Menu:UpdateMenuInstance'Cursor2'{
Visible = true;
From = Vector2.new(MLocation.x, MLocation.y);
To = Vector2.new(MLocation.x, MLocation.y + 8);
}
Menu:UpdateMenuInstance'Cursor3'{
Visible = true;
From = Vector2.new(MLocation.x, MLocation.y + 6);
To = Vector2.new(MLocation.x + 5, MLocation.y + 5);
}
else
if Debounce.CursorVis then
Debounce.CursorVis = false;
-- GUIService:SetMenuIsOpen(false);
Menu:UpdateMenuInstance'Cursor1'{Visible = false};
Menu:UpdateMenuInstance'Cursor2'{Visible = false};
Menu:UpdateMenuInstance'Cursor3'{Visible = false};
end
end
if MouseHeld then
if Dragging then
DraggingWhat.Slider.Position = Vector2.new(math.clamp(MLocation.X, DraggingWhat.Line.From.X, DraggingWhat.Line.To.X), DraggingWhat.Slider.Position.Y);
local Percent = (DraggingWhat.Slider.Position.X - DraggingWhat.Line.From.X) / ((DraggingWhat.Line.To.X - DraggingWhat.Line.From.X));
local Value = CalculateValue(DraggingWhat.Min, DraggingWhat.Max, Percent);
DraggingWhat.Option(Value);
elseif DraggingUI then
Debounce.UIDrag = true;
local Main = Menu:GetInstance'Main';
local MousePos = GetMouseLocation();
Main.Position = MousePos + DragOffset;
end
else
Dragging = false;
if DraggingUI and Debounce.UIDrag then
Debounce.UIDrag = false;
DraggingUI = false;
CreateMenu(Menu:GetInstance'Main'.Position);
end
end
if not Debounce.Menu then
Debounce.Menu = true;
ToggleMenu();
end
elseif Debounce.Menu and not Options.MenuOpen.Value then
Debounce.Menu = false;
ToggleMenu();
end
end
 
RunService:UnbindFromRenderStep(GetDataName);
RunService:UnbindFromRenderStep(UpdateName);
 
RunService:BindToRenderStep(GetDataName, 1, UpdatePlayerData);
RunService:BindToRenderStep(UpdateName, 1, Update);   
end)
